{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/NotFoundScreen.tsx","components/admin/ItemDetails.tsx","components/admin/ItemsList.tsx","components/elements/Button.tsx","components/elements/Modal.tsx","components/elements/TextInput.tsx","utils/method.ts","components/admin/Add.tsx","components/admin/Search.tsx","redux/userSlice.ts","screens/AdminScreen.tsx","components/home/ItemDetails.tsx","screens/HomeScreen.tsx","components/account/Profile.tsx","components/account/Login.tsx","components/account/Register.tsx","components/account/EditProfile.tsx","components/account/AddItem.tsx","screens/AccountScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","redux/store.ts","firebase.config.ts","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/adaptive-icon.png","assets/images/ring.png"],"names":["useColorScheme","_useColorScheme","light","text","background","dark","black","gray","green","white","yellow","violet","red","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","NotFoundScreen","navigation","useEffect","navigate","styles","container","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","StatusList","AdminItemDetails","item","setItem","openAdminItemDetails","setOpenAdminItemDetails","useState","success","setSuccesss","findIndex","e","status","statusIdx","setStatusIdx","clientPhoneNumber","phoneNumber","setPhoneNumber","model","setModel","serialNumber","setSerialNumber","prestation","setPrestation","diagnostic","setDiagnostic","db","getFirestore","updateStatus","useCallback","a","async","itemId","updateDoc","doc","updateHandler","key","value","updatedValue","Object","defineProperty","toLowerCase","configurable","writable","enumerable","setTimeout","Modal","animationType","transparent","visible","onRequestClose","undefined","ScrollView","centeredView","Pressable","button","FontAwesome","textAlign","size","name","modalView","modalBlock","modalText","clientName","createdAt","marginVertical","TextInput","onChangeText","placeholder","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","position","right","top","buttons","selectedIndex","containerStyle","margin","selectedButtonStyle","selectedTextStyle","toString","isNaN","parseFloat","clientNote","fontStyle","height","display","flexDirection","paddingTop","elevation","zIndex","width","listView","paddingBottom","buttoncontainer","textDesc","overflow","ItemsList","items","openList","setOpenList","map","showItemDetails","Dimensions","get","marginHorizontal","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderTopWidth","borderTopColor","minWidth","borderStyle","BiyouButton","clickHandler","iconName","iconPosition","BiyouModal","children","open","setOpen","BiyouTextInput","setValue","condition","placeholderTextColor","createNewId","id","id_year_month","substring","id_number","parseInt","id_number_string","new_id","current_year_month","letter","Date","getMonth","getMonthByLetter","concat","localISODate","tzoffset","getTimezoneOffset","local","now","toISOString","slice","AddItem","openAddModal","setOpenAddModal","setId","setName","error","setError","getLastId","onSnapshot","exists","data","length","setDoc","marginBottom","SearchModal","setItems","openSearchModal","setOpenSearchModal","setItemId","setClientName","setStatus","openStatusPicker","setOpenStatusPicker","isVisible","el","i","Content","Title","queryConstraints","push","where","results","getDocs","query","collection","querySnapshot","empty","forEach","userSlice","createSlice","initialState","isAuthenticated","reducers","fetchUser","state","action","payload","user","updateUser","role","signOutUser","extraReducers","builder","selectUser","actions","AdminScreen","useSelector","displayName","actioncard","actioncardadd","actioncardsearch","newlist","unshift","actioncardlist","Search","flexWrap","ItemDetails","openItemDetails","setOpenItemDetails","note","setNote","setSuccess","marginLeft","HomeScreen","Image","source","require","searchBar","toUpperCase","Profile","dispatch","useDispatch","auth","getAuth","uid","Platform","OS","photoURL","includes","uri","marginRight","email","signOut","then","Login","setRegisterOpen","setEmail","password","setPassword","setVisible","currentUser","secureTextEntry","signInWithEmailAndPassword","catch","Register","createUserWithEmailAndPassword","updateProfile","userId","username","EditProfile","setEditOpen","resetPasswordSuccess","setResetPasswordSuccess","verifyEmailSuccess","setVerifyEmailSuccess","updateEmail","sendEmailVerification","textDecorationLine","sendPasswordResetEmail","deleteUser","setAddOpen","AccountScreen","loginOpen","setLoginOpen","registerOpen","editOpen","addOpen","block","loginCtaText","overlayStyle","overlay","onBackdropPress","buttonStyle","bottom","isOpen","icon","openIcon","onOpen","onClose","Action","titleStyle","BottomTab","createBottomTabNavigator","shadow","TabBarIcon","BottomTabNavigator","React","isAdmin","setIsAdmin","onAuthStateChanged","checkIfAdmin","getDoc","docSnap","Navigator","initialRouteName","screenOptions","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarItemStyle","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","left","Screen","component","options","tabBarIcon","headerShown","linking","prefixes","Linking","config","screens","Root","Home","Account","Admin","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","FirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LogBox","ignoreLogs","getApps","initializeApp","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","console","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.ad22429a.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","// export default {\n//   light: {\n//     text: \"#F1F1E6\",\n//     background: \"#17567B\",\n//   },\n//   dark: {\n//     text: \"#F1F1E6\",\n//     background: \"#17567B\",\n//   },\n//   black: \"#0E131F\",\n//   violet: \"#38405F\",\n//   darkBlue: \"#17567B\",\n//   lightBlue: \"#00BAFF\",\n//   red: \"#FF0035\",\n//   white: \"#F1F1E6\",\n//   yellow: \"#E69C24\",\n// };\n\nexport default {\n  light: {\n    text: \"#393E41\",\n    background: \"#E7E5DF\",\n  },\n  dark: {\n    text: \"#393E41\",\n    background: \"#E7E5DF\",\n  },\n  black: \"#393E41\",\n  gray: \"#D3D0CB\",\n  green: \"#44BBA4\",\n  white: \"#E7E5DF\",\n  yellow: \"#E7BB41\",\n  violet: \"#38405F\",\n  red: \"#FF0035\",\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport { Text, View } from \"../components/Themed\";\nimport Colors from \"../constants/Colors\";\nimport { RootStackScreenProps } from \"../types\";\n\nexport default function NotFoundScreen({\n  navigation,\n}: RootStackScreenProps<\"NotFound\">) {\n  useEffect(() => {\n    navigation.navigate(\"Root\");\n  }, []);\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>404 - NOT FOUND</Text>\n      <TouchableOpacity\n        onPress={() => navigation.replace(\"Root\")}\n        style={styles.link}\n      >\n        <Text style={styles.linkText}>Lost? Go back home!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // backgroundColor: Colors.darkBlue,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 35,\n    fontWeight: \"bold\",\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 15,\n    color: Colors.white,\n  },\n});\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport React, { Dispatch, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Pressable,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { ButtonGroup } from \"react-native-elements\";\r\n\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nconst StatusList = [\r\n  \"En attente\",\r\n  \"Réparé\",\r\n  \"Devis\",\r\n  \"Retour au client\",\r\n  \"Attente de pièces\",\r\n];\r\n\r\nexport default function AdminItemDetails({\r\n  item,\r\n  setItem,\r\n  openAdminItemDetails,\r\n  setOpenAdminItemDetails,\r\n}: {\r\n  item: IItem;\r\n  setItem: Dispatch<React.SetStateAction<IItem | undefined>>;\r\n  openAdminItemDetails: boolean;\r\n  setOpenAdminItemDetails: Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const theme = useColorScheme();\r\n  const [success, setSuccesss] = useState(\"\");\r\n  const [statusIdx, setStatusIdx] = useState(\r\n    StatusList.findIndex((e) => e === item.status)\r\n  );\r\n  const [phoneNumber, setPhoneNumber] = useState(\r\n    item.clientPhoneNumber ? item.clientPhoneNumber : \"\"\r\n  );\r\n  const [model, setModel] = useState(item.model ? item.model : \"\");\r\n  const [serialNumber, setSerialNumber] = useState(\r\n    item.serialNumber ? item.serialNumber : \"\"\r\n  );\r\n  const [prestation, setPrestation] = useState(\r\n    item.prestation ? item.prestation : 0\r\n  );\r\n  const [diagnostic, setDiagnostic] = useState(\r\n    item.diagnostic ? item.diagnostic : \"\"\r\n  );\r\n  const db = getFirestore();\r\n\r\n  const updateStatus = useCallback(async () => {\r\n    if (statusIdx && item.itemId) {\r\n      await updateDoc(doc(db, \"items\", item.itemId), {\r\n        status: StatusList[statusIdx],\r\n      });\r\n    }\r\n  }, [statusIdx]);\r\n\r\n  useEffect(() => {\r\n    updateStatus();\r\n  }, [updateStatus]);\r\n\r\n  const updateHandler = async (key: string, value: string | number) => {\r\n    if (key && item.itemId) {\r\n      let updatedValue: any = {};\r\n      await updateDoc(\r\n        doc(db, \"items\", item.itemId),\r\n        Object.defineProperty(updatedValue, key, {\r\n          value: typeof value === \"string\" ? value.toLowerCase() : value,\r\n          configurable: true,\r\n          writable: true,\r\n          enumerable: true,\r\n        })\r\n      );\r\n      setSuccesss(key);\r\n      setTimeout(() => {\r\n        setSuccesss(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={openAdminItemDetails}\r\n        onRequestClose={() => {\r\n          setOpenAdminItemDetails(!openAdminItemDetails);\r\n          setItem(undefined);\r\n        }}\r\n      >\r\n        <ScrollView>\r\n          <View style={styles.centeredView}>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setOpenAdminItemDetails(!openAdminItemDetails);\r\n                setItem(undefined);\r\n              }}\r\n            >\r\n              <FontAwesome\r\n                style={{\r\n                  color: Colors.white,\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                size={25}\r\n                name=\"close\"\r\n              />\r\n            </Pressable>\r\n            <View style={styles.modalView}>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>Numéro de bon:</Text>\r\n                <Text style={{ fontSize: 45, fontWeight: \"bold\" }}>\r\n                  {item.itemId}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>Nom du client:</Text>\r\n                <Text style={{ fontSize: 30, fontWeight: \"600\" }}>\r\n                  {item.clientName}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>\r\n                  Date d'entrée: {item.createdAt}\r\n                </Text>\r\n                <View>\r\n                  <Text style={styles.modalText}>Numéro de téléphone:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={phoneNumber}\r\n                      onChangeText={(e) => setPhoneNumber(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"phoneNumber\", phoneNumber)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"phoneNumber\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <View>\r\n                  <Text style={styles.modalText}>Modèle:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={model}\r\n                      onChangeText={(e) => setModel(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"model\", model)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"model\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Numéro de série:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={serialNumber}\r\n                      onChangeText={(e) => setSerialNumber(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() =>\r\n                        updateHandler(\"serialNumber\", serialNumber)\r\n                      }\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"serialNumber\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Etat:</Text>\r\n                  <ButtonGroup\r\n                    buttons={[\r\n                      \"En attente\",\r\n                      \"Réparé\",\r\n                      \"Devis\",\r\n                      \"Retour au client\",\r\n                      \"Attente de pièces\",\r\n                    ]}\r\n                    selectedIndex={statusIdx}\r\n                    onPress={(value) => {\r\n                      setStatusIdx(value);\r\n                    }}\r\n                    containerStyle={{ margin: 0 }}\r\n                    selectedButtonStyle={[\r\n                      statusIdx === 0 && { backgroundColor: Colors.red },\r\n                      statusIdx === 1 && { backgroundColor: \"green\" },\r\n                      statusIdx === 2 && { backgroundColor: Colors.violet },\r\n                      statusIdx === 3 && { backgroundColor: Colors.red },\r\n                      statusIdx === 4 && { backgroundColor: Colors.yellow },\r\n                    ]}\r\n                    selectedTextStyle={{ color: Colors.white }}\r\n                  />\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Prestation:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={prestation.toString()}\r\n                      onChangeText={(e) =>\r\n                        setPrestation(isNaN(parseFloat(e)) ? 0 : parseFloat(e))\r\n                      }\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"prestation\", prestation)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"prestation\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Diagnostique</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={diagnostic}\r\n                      onChangeText={(e) => setDiagnostic(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"diagnostic\", diagnostic)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"send\" size={25} color=\"green\" />\r\n                    </Pressable>\r\n                    {success === \"diagnostic\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              {item.clientNote && (\r\n                <View style={styles.modalBlock}>\r\n                  <Text style={styles.modalText}>Note laissée:</Text>\r\n                  <Text style={{ fontSize: 15, fontStyle: \"italic\" }}>\r\n                    {item.clientNote}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    paddingTop: 20,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    top: 5,\r\n    right: 10,\r\n    borderRadius: 50,\r\n    padding: 10,\r\n    elevation: 9,\r\n    backgroundColor: Colors.red,\r\n    zIndex: 90,\r\n  },\r\n  modalView: {\r\n    width: \"100%\",\r\n  },\r\n  modalText: {\r\n    fontSize: 15,\r\n  },\r\n  modalBlock: {\r\n    margin: 30,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  Pressable,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport ItemDetails from \"./ItemDetails\";\r\nimport { Text, View } from \"../Themed\";\r\nimport { IItem } from \"../../utils/method\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst ItemsList = ({\r\n  items,\r\n  openList,\r\n  setOpenList,\r\n}: {\r\n  items: IItem[];\r\n  openList: boolean;\r\n  setOpenList: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const [item, setItem] = useState<IItem>();\r\n  const [openAdminItemDetails, setOpenAdminItemDetails] = useState(false);\r\n\r\n  const showItemDetails = (item: IItem) => {\r\n    setOpenAdminItemDetails(true);\r\n    setItem(item);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.listView}>\r\n      <View style={styles.buttoncontainer}>\r\n        <Pressable style={styles.button} onPress={() => setOpenList(!openList)}>\r\n          <FontAwesome\r\n            style={{\r\n              color: Colors.white,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n            }}\r\n            size={20}\r\n            name=\"close\"\r\n          />\r\n        </Pressable>\r\n      </View>\r\n      <View style={{ width: \"100%\", display: \"flex\" }}>\r\n        {items.map((item: IItem) => (\r\n          <TouchableOpacity\r\n            key={item.itemId}\r\n            onPress={() => showItemDetails(item)}\r\n          >\r\n            <View\r\n              style={{\r\n                borderRadius: 10,\r\n                backgroundColor: Colors.gray,\r\n                width: Dimensions.get(\"window\").width - 10,\r\n                marginHorizontal: \"auto\",\r\n                marginVertical: 8,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 5,\r\n                shadowColor: Colors.black,\r\n                shadowOffset: { width: 0, height: 1 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 10,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  width: \"100%\",\r\n                  backgroundColor: \"transparent\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <Text>{item.itemId}</Text>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  flex: 6,\r\n                  backgroundColor: \"transparent\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    display: \"flex\",\r\n                    backgroundColor: \"transparent\",\r\n                    flexDirection: \"row\",\r\n                    paddingVertical: 5,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      backgroundColor: \"transparent\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\r\n                      {item.clientName}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      backgroundColor: \"transparent\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text>{item.model}</Text>\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    borderTopWidth: 1,\r\n                    borderTopColor: Colors.yellow,\r\n                    flex: 1,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    paddingVertical: 5,\r\n                    backgroundColor: \"transparent\",\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      backgroundColor: \"transparent\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontStyle: \"italic\" }}>\r\n                      {item.clientPhoneNumber}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      backgroundColor: \"transparent\",\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={[\r\n                        {\r\n                          color: Colors.white,\r\n                          fontWeight: \"bold\",\r\n                          paddingHorizontal: 3,\r\n                        },\r\n                        item.status === \"En attente\" && {\r\n                          backgroundColor: Colors.red,\r\n                        },\r\n                        item.status === \"Réparé\" && {\r\n                          backgroundColor: \"green\",\r\n                        },\r\n                        item.status === \"Devis\" && {\r\n                          backgroundColor: Colors.violet,\r\n                        },\r\n                        item.status === \"Retour au client\" && {\r\n                          backgroundColor: Colors.red,\r\n                        },\r\n                        item.status === \"Attente de pièces\" && {\r\n                          backgroundColor: Colors.yellow,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      {item.status}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      {openAdminItemDetails && item && (\r\n        <ItemDetails\r\n          item={item}\r\n          setItem={setItem}\r\n          openAdminItemDetails={openAdminItemDetails}\r\n          setOpenAdminItemDetails={setOpenAdminItemDetails}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  listView: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    paddingTop: 30,\r\n    paddingBottom: 10,\r\n  },\r\n  buttoncontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 40,\r\n    width: 40,\r\n    marginVertical: 10,\r\n    borderRadius: 50,\r\n    padding: 10,\r\n    elevation: 10,\r\n    backgroundColor: Colors.red,\r\n  },\r\n  textDesc: {\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nexport default ItemsList;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { Text, View } from \"../Themed\";\r\n\r\nconst BiyouButton = ({\r\n  title,\r\n  clickHandler,\r\n  iconName,\r\n  iconPosition,\r\n}: {\r\n  title: string;\r\n  clickHandler: any;\r\n  iconName?: string;\r\n  iconPosition?: \"before\" | \"after\";\r\n}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.button} onPress={clickHandler}>\r\n        {iconName && iconPosition === \"before\" && (\r\n          <FontAwesome size={20} name={iconName as any} color={Colors.white} />\r\n        )}\r\n        <Text\r\n          style={{\r\n            color: Colors.white,\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            padding: 10,\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        {iconName && iconPosition === \"after\" && (\r\n          <FontAwesome size={20} name={iconName as any} color={Colors.white} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"transparent\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginVertical: 4,\r\n    marginHorizontal: \"auto\",\r\n    minWidth: \"50%\",\r\n    backgroundColor: Colors.green,\r\n    borderColor: Colors.green,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 15,\r\n  },\r\n});\r\n\r\nexport default BiyouButton;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\nimport { Dimensions, Modal, Pressable, ScrollView } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { View } from \"../Themed\";\r\n\r\nconst BiyouModal = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n}: {\r\n  children: React.ReactNode;\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        paddingTop: 16,\r\n      }}\r\n    >\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={open}\r\n        onRequestClose={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <ScrollView>\r\n            <View\r\n              style={{\r\n                height: Dimensions.get(\"window\").height - 20,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Pressable\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 5,\r\n                  right: 10,\r\n                  borderRadius: 50,\r\n                  padding: 10,\r\n                  elevation: 10,\r\n                  zIndex: 50,\r\n                  backgroundColor: Colors.red,\r\n                }}\r\n                onPress={() => setOpen(!open)}\r\n              >\r\n                <FontAwesome\r\n                  style={{\r\n                    color: Colors.white,\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  size={25}\r\n                  name=\"close\"\r\n                />\r\n              </Pressable>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {children}\r\n              </View>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BiyouModal;\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { View } from \"../Themed\";\r\n\r\nconst BiyouTextInput = ({\r\n  placeholder,\r\n  value,\r\n  setValue,\r\n  condition,\r\n}: {\r\n  placeholder: string;\r\n  value?: string;\r\n  setValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  condition?: boolean;\r\n}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={{\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          backgroundColor: Colors.gray,\r\n          color: Colors.black,\r\n          ...(condition\r\n            ? {\r\n                borderColor: Colors.red,\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: Colors.black,\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n        placeholder={placeholder}\r\n        placeholderTextColor={\"#999\"}\r\n        value={value}\r\n        onChangeText={(e) => setValue && setValue(e)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"transparent\",\r\n    marginHorizontal: 15,\r\n    marginVertical: 4,\r\n  },\r\n});\r\n\r\nexport default BiyouTextInput;\r\n","export interface IItem {\r\n  clientName?: string;\r\n  clientPhoneNumber?: string;\r\n  itemId?: string;\r\n  model?: string;\r\n  serialNumber?: string;\r\n  status:\r\n    | \"En attente\"\r\n    | \"Réparé\"\r\n    | \"Devis\"\r\n    | \"Retour au client\"\r\n    | \"Attente de pièces\";\r\n  prestation?: number;\r\n  diagnostic?: string;\r\n  createdAt?: string;\r\n  modifiedAt?: string;\r\n  clientNote?: string;\r\n}\r\n\r\nexport const getMonthByLetter = () => {\r\n  let letter = \"\";\r\n  const month = new Date().getMonth();\r\n  switch (month) {\r\n    case 0:\r\n      letter = \"A\";\r\n      break;\r\n    case 1:\r\n      letter = \"B\";\r\n      break;\r\n    case 2:\r\n      letter = \"C\";\r\n      break;\r\n    case 3:\r\n      letter = \"D\";\r\n      break;\r\n    case 4:\r\n      letter = \"E\";\r\n      break;\r\n    case 5:\r\n      letter = \"F\";\r\n      break;\r\n    case 6:\r\n      letter = \"G\";\r\n      break;\r\n    case 7:\r\n      letter = \"H\";\r\n      break;\r\n    case 8:\r\n      letter = \"I\";\r\n      break;\r\n    case 9:\r\n      letter = \"J\";\r\n      break;\r\n    case 10:\r\n      letter = \"K\";\r\n      break;\r\n    case 11:\r\n      letter = \"L\";\r\n      break;\r\n    default:\r\n      letter = \"\";\r\n  }\r\n  return letter;\r\n};\r\n\r\nexport const createNewId = (id: string) => {\r\n  const id_year_month = id.substring(0, 3);\r\n  let id_number = parseInt(id.substring(3));\r\n  let id_number_string = \"\";\r\n  let new_id = \"\";\r\n  const current_year_month = \"22\" + getMonthByLetter();\r\n  if (id_year_month === current_year_month) {\r\n    id_number++;\r\n    if (id_number >= 100) {\r\n      id_number_string = id_number.toString();\r\n    } else if (100 > id_number && id_number >= 10) {\r\n      id_number_string = \"0\".concat(id_number.toString());\r\n    } else if (10 > id_number) {\r\n      id_number_string = \"00\".concat(id_number.toString());\r\n    }\r\n    new_id = id_year_month + id_number_string;\r\n  } else {\r\n    new_id = current_year_month + \"001\";\r\n  }\r\n  return new_id;\r\n};\r\n\r\nexport const localISODate = () => {\r\n  let tzoffset = new Date().getTimezoneOffset() * 60000;\r\n  let local = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\r\n  let date = local.substring(0, 10) + \" \" + local.substring(11, 16);\r\n  return date;\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { doc, getFirestore, onSnapshot, setDoc } from \"firebase/firestore\";\r\n\r\nimport { Text } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport BiyouModal from \"../elements/Modal\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport { createNewId, localISODate } from \"../../utils/method\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nexport default function AddItem({\r\n  openAddModal,\r\n  setOpenAddModal,\r\n}: {\r\n  openAddModal: boolean;\r\n  setOpenAddModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const db = getFirestore();\r\n\r\n  const getLastId = useCallback(async () => {\r\n    onSnapshot(doc(db, \"currentId\", \"currentId\"), (doc) => {\r\n      if (doc.exists()) {\r\n        setId(createNewId(doc.data().id));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLastId();\r\n  }, [getLastId]);\r\n\r\n  const addHandler = async () => {\r\n    if (id && name && phoneNumber && model) {\r\n      await setDoc(doc(db, \"items\", id), {\r\n        clientName: name.toLowerCase(),\r\n        clientPhoneNumber: phoneNumber,\r\n        itemId: id,\r\n        model,\r\n        status: \"En attente\",\r\n        createdAt: localISODate(),\r\n      });\r\n      await setDoc(doc(db, \"currentId\", \"currentId\"), { id });\r\n      setOpenAddModal(false);\r\n      setName(\"\");\r\n      setPhoneNumber(\"\");\r\n      setModel(\"\");\r\n    } else if (!id) {\r\n      setError(\"Erreur avec le numéro de bon\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      setError(\"Champs obligatoire!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openAddModal} setOpen={setOpenAddModal}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <Text style={styles.modalText}>Ajouter: {id}</Text>\r\n      <BiyouTextInput\r\n        placeholder=\"nom du client\"\r\n        value={name}\r\n        setValue={setName}\r\n        condition={!name}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"numéro de téléphone du client\"\r\n        value={phoneNumber}\r\n        setValue={setPhoneNumber}\r\n        condition={!phoneNumber}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"modèle du produit\"\r\n        value={model}\r\n        setValue={setModel}\r\n        condition={!model}\r\n      />\r\n      <BiyouButton title=\"Ajouter\" clickHandler={addHandler} />\r\n    </BiyouModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  getFirestore,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { Pressable, StyleSheet } from \"react-native\";\r\nimport { BottomSheet, ListItem } from \"react-native-elements\";\r\n\r\nimport { Text } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport BiyouModal from \"../elements/Modal\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst StatusList = [\r\n  \"\",\r\n  \"En attente\",\r\n  \"Réparé\",\r\n  \"Devis\",\r\n  \"Retour au client\",\r\n  \"Attente de pièces\",\r\n];\r\n\r\nconst SearchModal = ({\r\n  setItems,\r\n  setOpenList,\r\n  openSearchModal,\r\n  setOpenSearchModal,\r\n}: {\r\n  setItems: any;\r\n  setOpenList: any;\r\n  openSearchModal: boolean;\r\n  setOpenSearchModal: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const db = getFirestore();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [itemId, setItemId] = useState(\"\");\r\n  const [clientName, setClientName] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n\r\n  const [status, setStatus] = useState(StatusList[0]);\r\n  const [openStatusPicker, setOpenStatusPicker] = useState(false);\r\n\r\n  const searchHandler = async () => {\r\n    const queryConstraints: any[] = [];\r\n    if (itemId) {\r\n      queryConstraints.push(where(\"itemId\", \"==\", itemId.toLowerCase()));\r\n    }\r\n    if (clientName) {\r\n      queryConstraints.push(\r\n        where(\"clientName\", \"==\", clientName.toLowerCase())\r\n      );\r\n    }\r\n    if (model) {\r\n      queryConstraints.push(where(\"model\", \"==\", model.toLowerCase()));\r\n    }\r\n    if (serialNumber) {\r\n      queryConstraints.push(\r\n        where(\"serialNumber\", \"==\", serialNumber.toLowerCase())\r\n      );\r\n    }\r\n    if (status) {\r\n      queryConstraints.push(where(\"status\", \"==\", status));\r\n    }\r\n\r\n    const results: any[] = [];\r\n\r\n    const querySnapshot = await getDocs(\r\n      query(collection(db, \"items\"), ...queryConstraints)\r\n    );\r\n    if (querySnapshot.empty) {\r\n      setError(\"Aucun résultat!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      querySnapshot.forEach((doc) => {\r\n        results.push(doc.data());\r\n      });\r\n      setOpenSearchModal(false);\r\n      setClientName(\"\");\r\n      setItemId(\"\");\r\n      setModel(\"\");\r\n      setSerialNumber(\"\");\r\n      setStatus(StatusList[0]);\r\n      setOpenList(true);\r\n      setItems(results);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openSearchModal} setOpen={setOpenSearchModal}>\r\n      {error.length > 0 && <Text style={styles.error}>{error}</Text>}\r\n      <Text style={styles.modalText}>\r\n        Séléctionnez les paramètres de votre requête\r\n      </Text>\r\n      <BiyouTextInput\r\n        placeholder=\"Numéro de bon\"\r\n        value={itemId}\r\n        setValue={setItemId}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Nom du client\"\r\n        value={clientName}\r\n        setValue={setClientName}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Modèle du produit\"\r\n        value={model}\r\n        setValue={setModel}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Numéro de série\"\r\n        value={serialNumber}\r\n        setValue={setSerialNumber}\r\n      />\r\n      <Pressable\r\n        onPress={() => setOpenStatusPicker(true)}\r\n        style={{\r\n          marginHorizontal: 15,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          backgroundColor: Colors.gray,\r\n          borderColor: Colors.black,\r\n          borderWidth: 1,\r\n        }}\r\n      >\r\n        {status ? (\r\n          <Text style={{ color: Colors.black }}>{status}</Text>\r\n        ) : (\r\n          <Text style={{ color: \"#999\" }}>Etat</Text>\r\n        )}\r\n      </Pressable>\r\n      <BottomSheet isVisible={openStatusPicker}>\r\n        {StatusList.map((el, i) => (\r\n          <ListItem\r\n            key={i}\r\n            onPress={() => {\r\n              setStatus(el);\r\n              setOpenStatusPicker(false);\r\n            }}\r\n          >\r\n            <ListItem.Content>\r\n              <ListItem.Title>{el.length > 0 ? el : \"*\"}</ListItem.Title>\r\n            </ListItem.Content>\r\n          </ListItem>\r\n        ))}\r\n      </BottomSheet>\r\n      <BiyouButton\r\n        title=\"Chercher\"\r\n        clickHandler={searchHandler}\r\n        iconName=\"search\"\r\n        iconPosition=\"before\"\r\n      />\r\n    </BiyouModal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default SearchModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../utils/method\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport interface IUser {\r\n  uid?: string;\r\n  email?: string;\r\n  emailVerified?: boolean;\r\n  displayName?: string;\r\n  isAnonymous?: boolean;\r\n  photoURL?: string;\r\n  createdAt?: string;\r\n  lastLoginAt?: string;\r\n  apiKey?: string;\r\n  appName?: string;\r\n  // custom collection\r\n  phoneNumber?: string;\r\n  role?: string;\r\n  items?: IItem[];\r\n}\r\n\r\nconst initialState: { status: string; isAuthenticated: boolean; user?: IUser } =\r\n  {\r\n    status: \"idle\",\r\n    isAuthenticated: false,\r\n  };\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    fetchUser: (state, action?) => {\r\n      if (action.payload) {\r\n        state.status = \"complete\";\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      } else {\r\n        state.status = \"complete\";\r\n        state.isAuthenticated = false;\r\n        state.user = undefined;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      state.status = \"complete\";\r\n      state.isAuthenticated = true;\r\n      state.user = {\r\n        ...state.user,\r\n        role: action.payload.role,\r\n        items: action.payload.items,\r\n        phoneNumber: action.payload.phoneNumber,\r\n      };\r\n    },\r\n    signOutUser: (state) => {\r\n      state.status = \"complete\";\r\n      state.isAuthenticated = false;\r\n      state.user = undefined;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // builder\r\n    //   .addCase(fetchUser.pending, (state, action) => {\r\n    //     state.status = \"loading\";\r\n    //   })\r\n    //   .addCase(fetchUser.fulfilled, (state, action) => {\r\n    //     state.status = \"complete\";\r\n    //     state.currentUser = action.payload;\r\n    //   })\r\n    //   .addCase(fetchUser.rejected, (state, action) => {\r\n    //     state.status = \"failed\";\r\n    //     state.error = action.error;\r\n    //   })\r\n  },\r\n});\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const { fetchUser, updateUser, signOutUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  onSnapshot,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Text, View } from \"../components/Themed\";\r\nimport ItemsList from \"../components/admin/ItemsList\";\r\nimport AddItem from \"../components/admin/Add\";\r\nimport SearchModal from \"../components/admin/Search\";\r\nimport { IUser, selectUser } from \"../redux/userSlice\";\r\nimport { IItem } from \"../utils/method\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nexport default function AdminScreen() {\r\n  const { user }: { user?: IUser | undefined } = useSelector(selectUser);\r\n  const db = getFirestore();\r\n\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n  const [openSearchModal, setOpenSearchModal] = useState(false);\r\n  const [openList, setOpenList] = useState(false);\r\n  const [items, setItems] = useState<IItem[]>();\r\n\r\n  const fetchItems = async () => {\r\n    setItems([]);\r\n    onSnapshot(query(collection(db, \"items\")), (querySnapshot) => {\r\n      let newlist: any[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        newlist.unshift(doc.data());\r\n      });\r\n      setOpenList(true);\r\n      setItems(newlist);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Text style={styles.title}>Bienvenu admin {user?.displayName}</Text>\r\n          <View style={styles.actions}>\r\n            {/* Ajouter */}\r\n            <TouchableOpacity\r\n              onPress={() => setOpenAddModal(!openAddModal)}\r\n              style={[styles.actioncard, styles.actioncardadd]}\r\n            >\r\n              <FontAwesome size={25} color={Colors.white} name=\"plus-circle\" />\r\n              <Text style={{ color: Colors.white }}>Ajouter</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Chercher */}\r\n            <TouchableOpacity\r\n              onPress={() => setOpenSearchModal(!openSearchModal)}\r\n              style={[styles.actioncard, styles.actioncardsearch]}\r\n            >\r\n              <FontAwesome size={25} color={Colors.white} name=\"search\" />\r\n              <Text style={{ color: Colors.white }}>Chercher</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Liste */}\r\n            <TouchableOpacity\r\n              onPress={fetchItems}\r\n              style={[styles.actioncard, styles.actioncardlist]}\r\n            >\r\n              <FontAwesome size={25} color={Colors.white} name=\"tasks\" />\r\n              <Text style={{ color: Colors.white }}>Liste</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: Dimensions.get(\"window\").height - 190 }}>\r\n            {openList && (\r\n              <View style={{ paddingBottom: 75 }}>\r\n                {items ? (\r\n                  <ItemsList\r\n                    items={items}\r\n                    openList={openList}\r\n                    setOpenList={setOpenList}\r\n                  />\r\n                ) : (\r\n                  <Text>Récupération des données...</Text>\r\n                )}\r\n              </View>\r\n            )}\r\n            <SearchModal\r\n              setItems={setItems}\r\n              setOpenList={setOpenList}\r\n              openSearchModal={openSearchModal}\r\n              setOpenSearchModal={setOpenSearchModal}\r\n            />\r\n            <AddItem\r\n              openAddModal={openAddModal}\r\n              setOpenAddModal={setOpenAddModal}\r\n            />\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    paddingBottom: 50,\r\n  },\r\n  title: {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    marginVertical: 30,\r\n    marginHorizontal: 20,\r\n  },\r\n  actions: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  actioncard: {\r\n    width: 100,\r\n    height: 100,\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  actioncardadd: {\r\n    borderColor: Colors.black,\r\n    backgroundColor: Colors.black,\r\n  },\r\n  actioncardsearch: {\r\n    borderColor: Colors.violet,\r\n    backgroundColor: Colors.violet,\r\n  },\r\n  actioncardlist: {\r\n    borderColor: Colors.red,\r\n    backgroundColor: Colors.red,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState } from \"react\";\r\nimport { Pressable, StyleSheet, TextInput } from \"react-native\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouModal from \"../../components/elements/Modal\";\r\nimport { IItem } from \"../../utils/method\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nexport default function ItemDetails({\r\n  item,\r\n  openItemDetails,\r\n  setOpenItemDetails,\r\n}: {\r\n  item: IItem;\r\n  openItemDetails: boolean;\r\n  setOpenItemDetails: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const theme = useColorScheme();\r\n  const [note, setNote] = useState(item.clientNote ? item.clientNote : \"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const db = getFirestore();\r\n\r\n  const submitHandler = async () => {\r\n    if (note && item.itemId) {\r\n      await updateDoc(doc(db, \"items\", item.itemId), {\r\n        clientNote: note,\r\n      });\r\n      setSuccess(\"Successfully submitted your note.\");\r\n      setTimeout(() => {\r\n        setSuccess(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openItemDetails} setOpen={setOpenItemDetails}>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={styles.modalText}>Numéro de bon:</Text>\r\n        <Text style={{ fontSize: 45, fontWeight: \"bold\" }}>{item.itemId}</Text>\r\n      </View>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={{ fontSize: 35, fontWeight: \"700\" }}>\r\n          {item.clientName}\r\n        </Text>\r\n        <Text style={styles.modalText}>\r\n          Numéro de téléphone: {item.clientPhoneNumber}\r\n        </Text>\r\n        <Text style={styles.modalText}>Date d'entrée: {item.createdAt}</Text>\r\n      </View>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={{ fontWeight: \"bold\", fontSize: 22 }}>{item.model}</Text>\r\n        {item.serialNumber && (\r\n          <Text style={styles.modalText}>\r\n            Numéro de série: {item.serialNumber}\r\n          </Text>\r\n        )}\r\n      </View>\r\n      <View style={[styles.modalBlock]}>\r\n        <View\r\n          style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\r\n        >\r\n          <Text style={styles.modalText}>Etat:</Text>\r\n          <Text\r\n            style={[\r\n              styles.modalText,\r\n              {\r\n                backgroundColor: Colors.red,\r\n                color: Colors.white,\r\n                marginLeft: 5,\r\n                paddingHorizontal: 3,\r\n              },\r\n            ]}\r\n          >\r\n            {item.status}\r\n          </Text>\r\n        </View>\r\n        {item.prestation && (\r\n          <View>\r\n            <Text style={styles.modalText}>\r\n              Prestation: {item.prestation} DZD\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n\r\n      {item.diagnostic && (\r\n        <View style={styles.modalBlock}>\r\n          <Text style={styles.modalText}>Diagnostique:</Text>\r\n          <Text style={styles.modalText}>{item.diagnostic}</Text>\r\n        </View>\r\n      )}\r\n      <View style={styles.modalBlock}>\r\n        <Text style={styles.modalText}>\r\n          Vous pouvez laisser une note au réparateur\r\n        </Text>\r\n        <View style={{ marginVertical: 5 }}>\r\n          <TextInput\r\n            value={note}\r\n            onChangeText={(e) => setNote(e)}\r\n            placeholder=\"\"\r\n            style={{\r\n              paddingVertical: 10,\r\n              paddingLeft: 10,\r\n              paddingRight: 40,\r\n              borderRadius: 15,\r\n              backgroundColor: Colors.black,\r\n              color: Colors.white,\r\n              borderColor: Colors.white,\r\n              borderWidth: 1,\r\n            }}\r\n          />\r\n          <Pressable\r\n            onPress={submitHandler}\r\n            style={{ position: \"absolute\", right: 10, top: 8 }}\r\n          >\r\n            <FontAwesome name=\"send\" size={25} color=\"green\" />\r\n          </Pressable>\r\n          {success.length > 0 && (\r\n            <FontAwesome\r\n              name=\"check\"\r\n              size={25}\r\n              color=\"green\"\r\n              style={{ position: \"absolute\", right: 40, top: 8 }}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </BiyouModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalText: {\r\n    fontSize: 15,\r\n  },\r\n  modalBlock: {\r\n    margin: 30,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { Dimensions, Image, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nimport { Text, View } from \"../components/Themed\";\nimport BiyouTextInput from \"../components/elements/TextInput\";\nimport ItemDetails from \"../components/home/ItemDetails\";\nimport Colors from \"../constants/Colors\";\n\nexport default function HomeScreen() {\n  const db = getFirestore();\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [openItemDetails, setOpenItemDetails] = useState(false);\n  const [item, setItem] = useState<any>();\n\n  const submitHandler = async () => {\n    if (name && id) {\n      onSnapshot(doc(db, \"items\", id.toUpperCase()), (doc) => {\n        if (doc.exists()) {\n          if (doc.data().clientName.toLowerCase() === name.toLowerCase()) {\n            setItem(doc.data());\n            setOpenItemDetails(true);\n            setError(\"\");\n            setId(\"\");\n            setName(\"\");\n          } else {\n            setError(\"Veuillez entrer le nom affiché sur le bon!\");\n            setTimeout(() => {\n              setError(\"\");\n            }, 3000);\n          }\n        } else {\n          setError(\"Ce bon n'existe pas!\");\n          setTimeout(() => {\n            setError(\"\");\n          }, 3000);\n        }\n      });\n    } else {\n      setError(\"Champs obligatoire!\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../assets/images/adaptive-icon.png\")}\n        style={{ height: 250, width: 250 }}\n      />\n      <View style={styles.searchBar}>\n        {error.length > 1 && <Text style={styles.error}>{error}</Text>}\n        <BiyouTextInput\n          placeholder=\"numéro de bon - exemple: 22A008\"\n          value={id}\n          setValue={setId}\n          condition={error.length > 0 && !id}\n        />\n        <BiyouTextInput\n          placeholder=\"nom sur le bon - exemple: Mohamed Mohamed\"\n          value={name}\n          setValue={setName}\n          condition={error.length > 0 && !name}\n        />\n        <View style={styles.buttoncontainer}>\n          <View\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginHorizontal: \"auto\",\n              marginVertical: 4,\n              height: 50,\n              width: 50,\n              borderRadius: 50,\n              // backgroundColor: Colors.lightBlue,\n              backgroundColor: Colors.green,\n            }}\n          >\n            <TouchableOpacity onPress={submitHandler}>\n              <FontAwesome size={30} name=\"search\" color={Colors.white} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n      {openItemDetails && item && (\n        <ItemDetails\n          item={item}\n          openItemDetails={openItemDetails}\n          setOpenItemDetails={setOpenItemDetails}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: 20,\n    // backgroundColor: Colors.white,\n  },\n  title: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    marginVertical: 30,\n    marginHorizontal: 20,\n  },\n  searchBar: {\n    width: \"100%\",\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n  },\n  buttoncontainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n  },\n  error: {\n    backgroundColor: Colors.red,\n    color: Colors.white,\n    paddingHorizontal: 10,\n    paddingVertical: 20,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n","import { useEffect } from \"react\";\r\nimport { Dimensions, Image, Platform } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { SvgUri } from \"react-native-svg\";\r\n\r\nimport { Text, View } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport { selectUser, signOutUser, updateUser } from \"../../redux/userSlice\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nconst Profile = () => {\r\n  const { user } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    if (user && user.uid) {\r\n      onSnapshot(doc(db, \"custom\", user.uid), (doc) => {\r\n        dispatch(updateUser(doc.data()));\r\n      });\r\n    }\r\n  }, []);\r\n  const signOutHandler = async () => {\r\n    signOut(auth).then(() => dispatch(signOutUser()));\r\n  };\r\n  return (\r\n    <>\r\n      {user && (\r\n        <View style={{ paddingTop: 20 }}>\r\n          <View\r\n            style={{\r\n              position: \"relative\",\r\n              marginVertical: 50,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                position: \"absolute\",\r\n                right: Dimensions.get(\"window\").width / 2 - 120,\r\n                height: 250,\r\n                width: 250,\r\n              }}\r\n              source={require(\"../../assets/images/ring.png\")}\r\n            />\r\n            {Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\") ? (\r\n              <Image\r\n                source={{\r\n                  uri: user.photoURL,\r\n                }}\r\n                style={{ borderRadius: 50, width: 100, height: 100 }}\r\n              />\r\n            ) : (\r\n              <View style={{ backgroundColor: \"transparent\" }}>\r\n                <SvgUri\r\n                  uri={user.photoURL}\r\n                  width={100}\r\n                  height={100}\r\n                  style={{ borderRadius: 50 }}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <Text style={{ fontSize: 20 }}>{user.displayName}</Text>\r\n          </View>\r\n          <View style={{ margin: 30 }}>\r\n            <Text\r\n              style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n              {user.email}\r\n            </Text>\r\n            {user.phoneNumber && (\r\n              <Text\r\n                style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n              >\r\n                <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                  N téléphone:\r\n                </Text>{\" \"}\r\n                {user.phoneNumber}\r\n              </Text>\r\n            )}\r\n            {user.role && (\r\n              <Text\r\n                style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n              >\r\n                <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                  Rôle:\r\n                </Text>{\" \"}\r\n                {user.role}\r\n              </Text>\r\n            )}\r\n          </View>\r\n          {user.items && user.items.length > 0 && (\r\n            <View style={{ margin: 30 }}>\r\n              {user.items.map((item: IItem) => (\r\n                <View\r\n                  key={item.itemId}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>{item.itemId}</Text>\r\n                  <Text>{item.clientName}</Text>\r\n                  <Text>{item.model}</Text>\r\n                  <Text>{item.status}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          )}\r\n          <BiyouButton\r\n            title=\"Se déconnecter\"\r\n            clickHandler={signOutHandler}\r\n            iconName=\"sign-out\"\r\n            iconPosition=\"after\"\r\n          />\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouButton from \"../../components/elements/Button\";\r\nimport BiyouTextInput from \"../../components/elements/TextInput\";\r\nimport { fetchUser, selectUser } from \"../../redux/userSlice\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst Login = ({ setRegisterOpen }: any) => {\r\n  const theme = useColorScheme();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { user } = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setRegisterOpen(false);\r\n    } else if (auth.currentUser) {\r\n      dispatch(fetchUser(auth.currentUser));\r\n      setRegisterOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async () => {\r\n    if (email && password) {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then((user) => {\r\n          dispatch(fetchUser(user.user));\r\n          setRegisterOpen(false);\r\n        })\r\n        .catch((error) => {\r\n          setError(\"Impossible de se connecter!\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 3000);\r\n        });\r\n    } else {\r\n      setError(\"Champs obligatoir!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <BiyouTextInput\r\n        placeholder=\"email\"\r\n        value={email}\r\n        setValue={setEmail}\r\n        condition={error.length > 1 && !email}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          marginHorizontal: 15,\r\n          backgroundColor: Colors.black,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          ...(error.length > 1 && !password\r\n            ? {\r\n                borderColor: Colors.red,\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: Colors.white,\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            flex: 9,\r\n            color: Colors.white,\r\n          }}\r\n          placeholder=\"mot de passe\"\r\n          secureTextEntry={visible ? false : true}\r\n          onChangeText={(e) => setPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => setVisible(visible ? false : true)}\r\n        >\r\n          {visible ? (\r\n            <FontAwesome\r\n              style={{ color: Colors.white }}\r\n              size={15}\r\n              name={\"eye\"}\r\n            />\r\n          ) : (\r\n            <FontAwesome\r\n              style={{ color: Colors.white }}\r\n              size={15}\r\n              name={\"eye-slash\"}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <BiyouButton title=\"S'identifier\" clickHandler={submitHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // backgroundColor: Colors.darkBlue,\r\n    backgroundColor: Colors.black,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    padding: 20,\r\n  },\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default Login;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { doc, getFirestore, setDoc } from \"firebase/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouTextInput from \"../../components/elements/TextInput\";\r\nimport BiyouButton from \"../../components/elements/Button\";\r\nimport { fetchUser, selectUser } from \"../../redux/userSlice\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst Register = ({ setRegisterOpen }: any) => {\r\n  const theme = useColorScheme();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const { user } = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setRegisterOpen(false);\r\n    } else if (auth.currentUser) {\r\n      dispatch(fetchUser(auth.currentUser));\r\n      setRegisterOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async () => {\r\n    if (name && email && password) {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then((user) => {\r\n          updateProfile(user.user, {\r\n            displayName: name,\r\n            photoURL: `https://avatars.dicebear.com/api/gridy/${name}.svg`,\r\n          }).then(async () => {\r\n            await setDoc(doc(db, \"custom\", user.user.uid), {\r\n              userId: user.user.uid,\r\n              username: user.user.displayName,\r\n              role: \"basic\",\r\n            });\r\n            dispatch(fetchUser(user.user));\r\n            setRegisterOpen(false);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setError(\"Un problème avec vos entrées!\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 3000);\r\n        });\r\n    } else {\r\n      setError(\"Champs obligatoir!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <BiyouTextInput\r\n        placeholder=\"nom d'utilisateur\"\r\n        value={name}\r\n        setValue={setName}\r\n        condition={error.length > 1 && !name}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"email\"\r\n        value={email}\r\n        setValue={setEmail}\r\n        condition={error.length > 1 && !email}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          backgroundColor: Colors.black,\r\n          marginHorizontal: 15,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          ...(error.length > 1 && !password\r\n            ? {\r\n                borderColor: Colors.red,\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: Colors.white,\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            flex: 9,\r\n            color: Colors.white,\r\n          }}\r\n          placeholder=\"mot de passe\"\r\n          placeholderTextColor={\"#777\"}\r\n          secureTextEntry={visible ? false : true}\r\n          onChangeText={(e) => setPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => setVisible(visible ? false : true)}\r\n        >\r\n          {visible ? (\r\n            <FontAwesome\r\n              style={{ color: Colors.white }}\r\n              size={15}\r\n              name={\"eye\"}\r\n            />\r\n          ) : (\r\n            <FontAwesome\r\n              style={{ color: Colors.white }}\r\n              size={15}\r\n              name={\"eye-slash\"}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <BiyouButton title=\"Créer un compte\" clickHandler={submitHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.black,\r\n    // backgroundColor: Colors.darkBlue,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    padding: 20,\r\n  },\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default Register;\r\n","import { useState } from \"react\";\r\nimport { Image, Platform, Pressable } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteUser,\r\n  getAuth,\r\n  sendEmailVerification,\r\n  sendPasswordResetEmail,\r\n  updateEmail,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { SvgUri } from \"react-native-svg\";\r\n\r\nimport { Text, View } from \"../Themed\";\r\nimport { selectUser, signOutUser } from \"../../redux/userSlice\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\n\r\nconst EditProfile = ({ setEditOpen }: any) => {\r\n  const { user } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  const [resetPasswordSuccess, setResetPasswordSuccess] = useState(\"\");\r\n  const [verifyEmailSuccess, setVerifyEmailSuccess] = useState(\"\");\r\n  const [name, setName] = useState(\r\n    user && user.displayName ? user.displayName : \"\"\r\n  );\r\n  const [email, setEmail] = useState(user && user.email ? user.email : \"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\r\n    user && user.phoneNumber ? user.phoneNumber : \"\"\r\n  );\r\n\r\n  const resetPassword = async () => {\r\n    if (auth.currentUser && auth.currentUser.email) {\r\n      sendPasswordResetEmail(auth, auth.currentUser.email).then(() => {\r\n        setResetPasswordSuccess(\r\n          \"Email de réinitialisation de mot de passe envoyé avec succès!\"\r\n        );\r\n        setTimeout(() => {\r\n          setResetPasswordSuccess(\"\");\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const verifyEmail = async () => {\r\n    if (auth.currentUser) {\r\n      sendEmailVerification(auth.currentUser).then(() => {\r\n        setVerifyEmailSuccess(\"Un email de vérification vous a été envoyé!\");\r\n        setTimeout(() => {\r\n          setVerifyEmailSuccess(\"\");\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteAccount = async () => {\r\n    if (auth.currentUser) {\r\n      deleteUser(auth.currentUser).then(() => {\r\n        dispatch(signOutUser());\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    if (auth.currentUser) {\r\n      if (name && name !== auth.currentUser.displayName) {\r\n        updateProfile(auth.currentUser, { displayName: name }).then(() =>\r\n          setEditOpen(false)\r\n        );\r\n      }\r\n      if (email && email !== auth.currentUser.email) {\r\n        updateEmail(auth.currentUser, email).then(() => setEditOpen(false));\r\n      }\r\n      if (phoneNumber) {\r\n        await updateDoc(doc(db, \"custom\", auth.currentUser.uid), {\r\n          phoneNumber,\r\n        });\r\n        setEditOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <View>\r\n          <Pressable\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              //   top: 40,\r\n              right: 10,\r\n              borderRadius: 50,\r\n              padding: 10,\r\n              elevation: 10,\r\n              zIndex: 50,\r\n              backgroundColor: \"green\",\r\n            }}\r\n            onPress={() => {\r\n              submitHandler();\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            <FontAwesome\r\n              style={{\r\n                color: Colors.white,\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n              }}\r\n              size={25}\r\n              name=\"check\"\r\n            />\r\n          </Pressable>\r\n          <View\r\n            style={{\r\n              marginVertical: 50,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\") ? (\r\n              <Image\r\n                source={{\r\n                  uri: user.photoURL,\r\n                }}\r\n                style={{ borderRadius: 50, width: 100, height: 100 }}\r\n              />\r\n            ) : (\r\n              <View style={{ backgroundColor: \"transparent\" }}>\r\n                <SvgUri\r\n                  uri={user.photoURL}\r\n                  width={100}\r\n                  height={100}\r\n                  style={{ borderRadius: 50 }}\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Nom:</Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={name}\r\n                setValue={setName}\r\n                placeholder=\"Nom du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={email}\r\n                setValue={setEmail}\r\n                placeholder=\"Addresse email du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                N téléphone:\r\n              </Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={phoneNumber}\r\n                setValue={setPhoneNumber}\r\n                placeholder=\"Numéro de téléphone du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n\r\n          {/* email verification */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            {verifyEmailSuccess.length > 0 && (\r\n              <Text style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                {verifyEmailSuccess}\r\n              </Text>\r\n            )}\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Votre addresse email n'est pas vérifée.\r\n            </Text>\r\n            <Pressable onPress={verifyEmail}>\r\n              <Text style={{ color: \"gray\", textDecorationLine: \"underline\" }}>\r\n                Envoyez un email de vérification à {user.email}\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n\r\n          {/* reset password */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            {resetPasswordSuccess.length > 0 && (\r\n              <Text style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                {resetPasswordSuccess}\r\n              </Text>\r\n            )}\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Vous avez oubliez votre mot de passe?\r\n            </Text>\r\n            <Pressable onPress={resetPassword}>\r\n              <Text style={{ color: \"gray\", textDecorationLine: \"underline\" }}>\r\n                Envoyez un email de réinitialisation de mot de passe\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n\r\n          {/* delete account */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Voulez vous supprimer votre compte?\r\n            </Text>\r\n            <Text>\r\n              Cela supprimera tous vos données. Vos données seront\r\n              irrécupérables.\r\n            </Text>\r\n            <Pressable onPress={deleteAccount}>\r\n              <Text\r\n                style={{\r\n                  color: Colors.red,\r\n                  fontWeight: \"bold\",\r\n                  textDecorationLine: \"underline\",\r\n                }}\r\n              >\r\n                SUPPRIMER MON COMPTE\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import { Dispatch, SetStateAction } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../redux/userSlice\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport { Text } from \"../Themed\";\r\n\r\nconst AddItem = ({\r\n  setAddOpen,\r\n}: {\r\n  setAddOpen: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { user } = useSelector(selectUser);\r\n  return (\r\n    <>\r\n      {user && (\r\n        <>\r\n          <Text style={{ marginBottom: 15, textAlign: \"center\" }}>\r\n            Ajouter un produit\r\n          </Text>\r\n          <BiyouButton title=\"Fermer\" clickHandler={() => setAddOpen(false)} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","import { useEffect, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SpeedDial, Overlay } from \"react-native-elements\";\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\n\nimport { Text, View } from \"../components/Themed\";\nimport BiyouButton from \"../components/elements/Button\";\nimport Profile from \"../components/account/Profile\";\nimport Login from \"../components/account/Login\";\nimport Register from \"../components/account/Register\";\nimport { selectUser, updateUser } from \"../redux/userSlice\";\nimport BiyouModal from \"../components/elements/Modal\";\nimport EditProfile from \"../components/account/EditProfile\";\nimport Colors from \"../constants/Colors\";\nimport AddItem from \"../components/account/AddItem\";\n\nexport default function AccountScreen() {\n  const { user } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const db = getFirestore();\n\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [registerOpen, setRegisterOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [addOpen, setAddOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (user && user.uid) {\n      onSnapshot(doc(db, \"custom\", user.uid), (doc) => {\n        dispatch(updateUser(doc.data()));\n      });\n    }\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {user ? (\n        <Profile />\n      ) : (\n        <View style={styles.block}>\n          <Text style={styles.loginCtaText}>\n            Avoir un compte vous permets de suivre votre produit et recevoir une\n            notification dès qu'il est réparé.\n          </Text>\n          <BiyouButton\n            title=\"S'identifier\"\n            clickHandler={() => setLoginOpen(true)}\n            iconName=\"sign-in\"\n            iconPosition=\"after\"\n          />\n          <BiyouButton\n            title=\"Créer un compte\"\n            clickHandler={() => setRegisterOpen(true)}\n            iconName=\"user-plus\"\n            iconPosition=\"after\"\n          />\n          <Overlay\n            overlayStyle={styles.overlay}\n            isVisible={loginOpen}\n            onBackdropPress={() => setLoginOpen(!loginOpen)}\n          >\n            <Login setRegisterOpen={setRegisterOpen} />\n          </Overlay>\n          <Overlay\n            overlayStyle={styles.overlay}\n            isVisible={registerOpen}\n            onBackdropPress={() => setRegisterOpen(!registerOpen)}\n          >\n            <Register setRegisterOpen={setRegisterOpen} />\n          </Overlay>\n        </View>\n      )}\n      {user && (\n        <SpeedDial\n          buttonStyle={{ backgroundColor: Colors.green }}\n          // buttonStyle={{ backgroundColor: Colors.lightBlue }}\n          containerStyle={{ bottom: 80 }}\n          isOpen={open}\n          icon={{ name: \"edit\", color: Colors.white }}\n          openIcon={{ name: \"close\", color: Colors.white }}\n          onPress={() => setOpen(!open)}\n          onOpen={() => setOpen(true)}\n          onClose={() => setOpen(false)}\n        >\n          <SpeedDial.Action\n            style={{ bottom: 80 }}\n            buttonStyle={{ backgroundColor: Colors.green }}\n            // buttonStyle={{ backgroundColor: Colors.lightBlue }}\n            icon={{ name: \"add\", color: Colors.white }}\n            title=\"Ajouter un produit\"\n            titleStyle={{ position: \"relative\", bottom: 80 }}\n            onPress={() => {\n              setOpen(false);\n              setAddOpen(true);\n            }}\n          />\n          <SpeedDial.Action\n            style={{ bottom: 80 }}\n            buttonStyle={{ backgroundColor: Colors.green }}\n            // buttonStyle={{ backgroundColor: Colors.lightBlue }}\n            icon={{ name: \"edit\", color: Colors.white }}\n            title=\"Modifier votre profil\"\n            titleStyle={{ position: \"relative\", bottom: 80 }}\n            onPress={() => {\n              setOpen(false);\n              setEditOpen(true);\n            }}\n          />\n        </SpeedDial>\n      )}\n      {addOpen && (\n        <BiyouModal open={addOpen} setOpen={setAddOpen}>\n          <AddItem setAddOpen={setAddOpen} />\n        </BiyouModal>\n      )}\n      {editOpen && (\n        <BiyouModal open={editOpen} setOpen={setEditOpen}>\n          <EditProfile setEditOpen={setEditOpen} />\n        </BiyouModal>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    paddingTop: 20,\n  },\n  block: {\n    marginHorizontal: 20,\n    marginTop: 50,\n  },\n  loginCtaText: {\n    textAlign: \"center\",\n    fontSize: 18,\n    marginVertical: 10,\n  },\n  overlay: {\n    borderWidth: 0,\n    borderRadius: 25,\n    width: \"90%\",\n    backgroundColor: \"transparent\",\n    padding: 0,\n  },\n});\n","import * as React from \"react\";\r\nimport { Image, StyleSheet, Platform } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport AdminScreen from \"../screens/AdminScreen\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport { RootTabParamList, RootTabScreenProps } from \"../types\";\r\nimport { fetchUser, IUser, selectUser, signOutUser } from \"../redux/userSlice\";\r\nimport { SvgUri } from \"react-native-svg\";\r\nimport { View } from \"../components/Themed\";\r\nimport AccountScreen from \"../screens/AccountScreen\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n  const { user }: { user?: IUser | undefined } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isAdmin, setIsAdmin] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        dispatch(fetchUser(user));\r\n      } else {\r\n        dispatch(signOutUser());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const checkIfAdmin = React.useCallback(async () => {\r\n    if (user && user.uid) {\r\n      const docSnap = await getDoc(doc(db, \"custom\", user.uid));\r\n      if (docSnap.exists()) {\r\n        if (docSnap.data().role === \"admin\") {\r\n          setIsAdmin(true);\r\n        } else {\r\n          setIsAdmin(false);\r\n        }\r\n      } else setIsAdmin(false);\r\n    } else setIsAdmin(false);\r\n  }, [user]);\r\n\r\n  React.useEffect(() => {\r\n    checkIfAdmin();\r\n  }, [checkIfAdmin]);\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors.black,\r\n        tabBarActiveBackgroundColor: Colors.yellow,\r\n        tabBarItemStyle: {\r\n          borderRadius: 50,\r\n        },\r\n        tabBarInactiveTintColor: Colors.yellow,\r\n        tabBarShowLabel: false,\r\n        tabBarStyle: {\r\n          position: \"absolute\",\r\n          bottom: 20,\r\n          left: 15,\r\n          right: 15,\r\n          backgroundColor: Colors.gray,\r\n          borderRadius: 50,\r\n          height: 60,\r\n          ...styles.shadow,\r\n        },\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={({ navigation }: RootTabScreenProps<\"Home\">) => ({\r\n          title: \"Home\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"search\" color={color} />,\r\n          headerShown: false,\r\n        })}\r\n      />\r\n      {isAdmin && (\r\n        <BottomTab.Screen\r\n          name=\"Admin\"\r\n          component={AdminScreen}\r\n          options={{\r\n            title: \"Admin\",\r\n            headerShown: false,\r\n            tabBarIcon: ({ color }) => <TabBarIcon name=\"cogs\" color={color} />,\r\n          }}\r\n        />\r\n      )}\r\n      <BottomTab.Screen\r\n        name=\"Account\"\r\n        component={AccountScreen}\r\n        options={{\r\n          title: \"Account\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color }) => {\r\n            if (user) {\r\n              if (Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\")) {\r\n                return (\r\n                  <Image\r\n                    source={{\r\n                      uri: user.photoURL,\r\n                    }}\r\n                    style={{ borderRadius: 50, width: 35, height: 35 }}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <View style={{ backgroundColor: \"transparent\" }}>\r\n                    <SvgUri\r\n                      uri={user.photoURL}\r\n                      width={35}\r\n                      height={35}\r\n                      style={{ borderRadius: 50 }}\r\n                    />\r\n                  </View>\r\n                );\r\n              }\r\n            } else return <TabBarIcon name=\"user\" color={color} />;\r\n          },\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  shadow: {\r\n    shadowColor: Colors.yellow,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.5,\r\n    elevation: 5,\r\n  },\r\n});\r\n\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n\r\nexport default BottomTabNavigator;\r\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\n\nimport { RootStackParamList } from \"../types\";\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl(\"/\")],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          Home: {\n            screens: {\n              HomeScreen: \"home\",\n            },\n          },\n          Account: {\n            screens: {\n              AccountScreen: \"account\",\n            },\n          },\n          Admin: {\n            screens: {\n              AdminScreen: \"admin\",\n            },\n          },\n        },\n      },\n      NotFound: \"*\",\n    },\n  },\n};\n\nexport default linking;\n","import {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { ColorSchemeName } from \"react-native\";\n\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport { RootStackParamList } from \"../types\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\n    >\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport userSlice from \"./userSlice\";\r\n\r\nconst initialState = {};\r\nconst reducer = combineReducers({ user: userSlice });\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport default store;\r\n","const FirebaseConfig = {\r\n  apiKey: \"AIzaSyBM5PP4iO6svYbv6ekcB9A7Tx-idsQdlg0\",\r\n  authDomain: \"biyou-repair.firebaseapp.com\",\r\n  projectId: \"biyou-repair\",\r\n  storageBucket: \"biyou-repair.appspot.com\",\r\n  messagingSenderId: \"343143569769\",\r\n  appId: \"1:343143569769:web:168a7dc30ce967e8dd45f8\",\r\n  measurementId: \"G-74LH66PR7V\",\r\n};\r\n\r\nexport default FirebaseConfig;\r\n","import { LogBox } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport FirebaseConfig from \"./firebase.config\";\nimport { initializeApp, getApps } from \"firebase/app\";\n\n// Supress warnings\nLogBox.ignoreLogs([\"Setting a timer\"]);\nLogBox.ignoreLogs([\n  \"AsyncStorage has been extracted from react-native core and will be removed in a future release\",\n]);\n\nif (getApps().length === 0) {\n  const app = initializeApp(FirebaseConfig);\n  // const analytics = getAnalytics(app);\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <ReduxProvider store={store}>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </ReduxProvider>\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/adaptive-icon.cd34f223.png\";","module.exports = __webpack_public_path__ + \"static/media/ring.41bc6751.png\";"],"sourceRoot":""}