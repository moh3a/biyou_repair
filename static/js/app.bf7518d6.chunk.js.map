{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/NotFoundScreen.tsx","components/admin/ItemDetails.tsx","components/admin/ItemsList.tsx","components/elements/Button.tsx","components/elements/Modal.tsx","components/elements/TextInput.tsx","utils/method.ts","components/admin/Add.tsx","components/admin/Search.tsx","redux/userSlice.ts","screens/AdminScreen.tsx","components/home/ItemDetails.tsx","screens/HomeScreen.tsx","components/account/Profile.tsx","components/account/Login.tsx","components/account/Register.tsx","components/account/EditProfile.tsx","screens/AccountScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","redux/store.ts","firebase.config.ts","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["useColorScheme","_useColorScheme","light","text","background","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","NotFoundScreen","navigation","styles","container","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","StatusList","AdminItemDetails","item","setItem","openAdminItemDetails","setOpenAdminItemDetails","useState","success","setSuccesss","findIndex","e","status","statusIdx","setStatusIdx","clientPhoneNumber","phoneNumber","setPhoneNumber","model","setModel","serialNumber","setSerialNumber","prestation","setPrestation","diagnostic","setDiagnostic","db","getFirestore","updateStatus","useCallback","a","async","itemId","updateDoc","doc","useEffect","updateHandler","key","value","updatedValue","Object","defineProperty","configurable","writable","enumerable","setTimeout","Modal","animationType","transparent","visible","onRequestClose","undefined","ScrollView","centeredView","Pressable","button","FontAwesome","textAlign","size","name","modalView","modalBlock","modalText","clientName","createdAt","marginVertical","TextInput","onChangeText","placeholder","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","position","right","top","buttons","selectedIndex","containerStyle","margin","selectedButtonStyle","selectedTextStyle","toString","isNaN","parseFloat","clientNote","fontStyle","height","display","flexDirection","paddingTop","elevation","zIndex","width","listView","paddingBottom","buttoncontainer","textDesc","overflow","ItemsList","items","openList","setOpenList","map","showItemDetails","Dimensions","get","marginHorizontal","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderTopWidth","minWidth","borderStyle","BiyouButton","clickHandler","iconName","iconPosition","BiyouModal","children","open","setOpen","BiyouTextInput","setValue","condition","placeholderTextColor","createNewId","id","id_year_month","substring","id_number","parseInt","id_number_string","new_id","current_year_month","letter","Date","getMonth","getMonthByLetter","concat","localISODate","tzoffset","getTimezoneOffset","local","now","toISOString","slice","AddItem","openAddModal","setOpenAddModal","setId","setName","error","setError","getLastId","onSnapshot","exists","data","length","setDoc","marginBottom","SearchModal","setItems","openSearchModal","setOpenSearchModal","setItemId","setClientName","setStatus","queryConstraints","push","where","results","getDocs","query","collection","querySnapshot","empty","forEach","userSlice","createSlice","initialState","isAuthenticated","reducers","fetchUser","state","action","payload","user","updateUser","role","signOutUser","extraReducers","builder","selectUser","actions","AdminScreen","useSelector","displayName","actioncard","actioncardadd","actioncardsearch","newlist","unshift","actioncardlist","Search","flexWrap","ItemDetails","openItemDetails","setOpenItemDetails","note","setNote","setSuccess","marginLeft","HomeScreen","searchBar","toUpperCase","toLowerCase","Profile","dispatch","useDispatch","auth","getAuth","uid","Platform","OS","photoURL","includes","uri","Image","source","marginRight","email","signOut","then","Login","setRegisterOpen","setEmail","password","setPassword","setVisible","currentUser","secureTextEntry","signInWithEmailAndPassword","catch","Register","createUserWithEmailAndPassword","updateProfile","userId","username","EditProfile","setEditOpen","resetPasswordSuccess","setResetPasswordSuccess","verifyEmailSuccess","setVerifyEmailSuccess","updateEmail","sendEmailVerification","textDecorationLine","sendPasswordResetEmail","deleteUser","AccountScreen","loginOpen","setLoginOpen","registerOpen","editOpen","block","loginCtaText","overlayStyle","overlay","isVisible","onBackdropPress","buttonStyle","bottom","isOpen","icon","openIcon","onOpen","onClose","Action","titleStyle","BottomTab","createBottomTabNavigator","shadow","TabBarIcon","BottomTabNavigator","React","isAdmin","setIsAdmin","onAuthStateChanged","checkIfAdmin","getDoc","docSnap","Navigator","initialRouteName","screenOptions","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarItemStyle","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","left","Screen","component","options","tabBarIcon","headerShown","linking","prefixes","Linking","config","screens","Root","Home","Account","Admin","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","FirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LogBox","ignoreLogs","getApps","initializeApp","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","console","warn","useCachedResources","StatusBar","module","exports"],"mappings":"yzBAKe,SAASA,IACtB,OAAOC,c,uFCHM,GACbC,MAAO,CACLC,KAAM,OACNC,WAAY,WAKdC,KAAM,CACJF,KAAM,OACNC,WAAY,Y,kpBCHT,SAASE,EACdC,EACAC,GAEA,IAAMC,EAAQT,IACRU,EAAiBH,EAAME,GAE7B,OAAIC,GAGKC,EAAOF,GAAOD,GAYlB,SAASI,EAAKL,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,GACMU,EAAQX,EAAc,CAAEJ,MAAOY,EAAYT,KAAMU,GAAa,QAEpE,OAAO,cAAC,IAAD,GAAaF,MAAO,CAAC,CAAEI,SAASJ,IAAYG,IAG9C,SAASE,EAAKX,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,GACMY,EAAkBb,EAAc,CAAEJ,MAAOY,EAAYT,KAAMU,GAAa,cAE9E,OAAO,cAAC,IAAD,GAAaF,MAAO,CAAC,CAAEM,mBAAmBN,IAAYG,ICtChD,SAASI,EAAT,GAEuB,IADpCC,EACmC,EADnCA,WAEA,OACE,eAAC,EAAD,CAAMR,MAAOS,EAAOC,UAApB,UACE,cAAC,EAAD,CAAMV,MAAOS,EAAOE,MAApB,6BACA,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAML,EAAWM,QAAQ,SAClCd,MAAOS,EAAOM,KAFhB,SAIE,cAAC,EAAD,CAAMf,MAAOS,EAAOO,SAApB,sCAMR,IAAMP,EAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTJ,gBAAiB,UACjBa,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAAS,IAEXX,MAAO,CACLP,MAAO,QACPmB,SAAU,GACVC,WAAY,QAEdT,KAAM,CACJU,UAAW,GACXC,gBAAiB,IAEnBV,SAAU,CACRO,SAAU,GACVnB,MAAO,W,gGCxBLuB,EAAa,CACjB,aACA,eACA,QACA,mBACA,wBAGa,SAASC,GAAT,GAUX,IATFC,EASC,EATDA,KACAC,EAQC,EARDA,QACAC,EAOC,EAPDA,qBACAC,EAMC,EANDA,wBAQA,GADc7C,IACiB8C,mBAAS,KAAxC,WAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAChCN,EAAWS,WAAU,SAACC,GAAD,OAAOA,IAAMR,EAAKS,WADzC,WAAOC,EAAP,KAAkBC,EAAlB,KAGA,EAAsCP,mBACpCJ,EAAKY,kBAAoBZ,EAAKY,kBAAoB,IADpD,WAAOC,EAAP,KAAoBC,EAApB,KAGA,EAA0BV,mBAASJ,EAAKe,MAAQf,EAAKe,MAAQ,IAA7D,WAAOA,EAAP,KAAcC,EAAd,KACA,EAAwCZ,mBACtCJ,EAAKiB,aAAejB,EAAKiB,aAAe,IAD1C,WAAOA,EAAP,KAAqBC,EAArB,KAGA,EAAoCd,mBAClCJ,EAAKmB,WAAanB,EAAKmB,WAAa,GADtC,WAAOA,EAAP,KAAmBC,EAAnB,KAGA,EAAoChB,mBAClCJ,EAAKqB,WAAarB,EAAKqB,WAAa,IADtC,WAAOA,EAAP,KAAmBC,EAAnB,KAGMC,EAAKC,cAELC,EAAeC,uBAAY,oBAAAC,EAAAC,OAAA,oDAC3BlB,IAAaV,EAAK6B,OADS,kCAAAF,EAAA,MAEvBG,YAAUC,YAAIR,EAAI,QAASvB,EAAK6B,QAAS,CAC7CpB,OAAQX,EAAWY,MAHQ,8DAM9B,CAACA,IAEJsB,qBAAU,WACRP,MACC,CAACA,IAEJ,IAAMQ,EAAgB,SAAOC,EAAaC,GAApB,eAAAR,EAAAC,OAAA,oDAChBM,IAAOlC,EAAK6B,OADI,uBAEdO,EAAoB,GAFN,WAAAT,EAAA,MAGZG,YACJC,YAAIR,EAAI,QAASvB,EAAK6B,QACtBQ,OAAOC,eAAeF,EAAcF,EAAK,CACvCC,MAAOA,EACPI,cAAc,EACdC,UAAU,EACVC,YAAY,MATE,OAYlBnC,EAAY4B,GACZQ,YAAW,WACTpC,EAAY,MACX,KAfe,6DAmBtB,OACE,cAAC,EAAD,CAAMnC,MAAOS,GAAOC,UAApB,SACE,cAAC8D,EAAA,EAAD,CACEC,cAAc,QACdC,aAAa,EACbC,QAAS5C,EACT6C,eAAgB,WACd5C,GAAyBD,GACzBD,OAAQ+C,IANZ,SASE,cAACC,EAAA,EAAD,UACE,eAAC,EAAD,CAAM9E,MAAOS,GAAOsE,aAApB,UACE,cAACC,EAAA,EAAD,CACEhF,MAAOS,GAAOwE,OACdpE,QAAS,WACPmB,GAAyBD,GACzBD,OAAQ+C,IAJZ,SAOE,cAACK,EAAA,EAAD,CACElF,MAAO,CACLI,MAAO,QACPoB,WAAY,OACZ2D,UAAW,UAEbC,KAAM,GACNC,KAAK,YAGT,eAAC,EAAD,CAAMrF,MAAOS,GAAO6E,UAApB,UACE,eAAC,EAAD,CAAMtF,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,+BACA,cAAC,EAAD,CAAMxF,MAAO,CAAEuB,SAAU,GAAIC,WAAY,QAAzC,SACGK,EAAK6B,YAGV,eAAC,EAAD,CAAM1D,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,4BACA,cAAC,EAAD,CAAMxF,MAAO,CAAEuB,SAAU,GAAIC,WAAY,OAAzC,SACGK,EAAK4D,gBAGV,eAAC,EAAD,CAAMzF,MAAOS,GAAO8E,WAApB,UACE,eAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,+BACkB3D,EAAK6D,aAEvB,eAAC,EAAD,WACE,cAAC,EAAD,CAAM1F,MAAOS,GAAO+E,UAApB,2CACA,eAAC,EAAD,CAAMxF,MAAO,CAAE2F,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE5B,MAAOtB,EACPmD,aAAc,SAACxD,GAAD,OAAOM,EAAeN,IACpCyD,YAAY,GACZ9F,MAAO,CACL0B,gBAAiB,GACjBqE,YAAa,GACbC,aAAc,GACdC,aAAc,GACd3F,gBAAiB,OACjBF,MAAO,OACP8F,YAAa,OACbC,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACEnE,QAAS,kBAAMiD,EAAc,cAAepB,IAC5C1C,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAIhF,MAAM,aAE9B,gBAAZ8B,GACC,cAACgD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACNhF,MAAM,QACNJ,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,eAMzD,eAAC,EAAD,CAAMtG,MAAOS,GAAO8E,WAApB,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,wBACA,eAAC,EAAD,CAAMxF,MAAO,CAAE2F,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE5B,MAAOpB,EACPiD,aAAc,SAACxD,GAAD,OAAOQ,EAASR,IAC9ByD,YAAY,GACZ9F,MAAO,CACL0B,gBAAiB,GACjBqE,YAAa,GACbC,aAAc,GACdC,aAAc,GACd3F,gBAAiB,OACjBF,MAAO,OACP8F,YAAa,OACbC,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACEnE,QAAS,kBAAMiD,EAAc,QAASlB,IACtC5C,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAIhF,MAAM,aAE9B,UAAZ8B,GACC,cAACgD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACNhF,MAAM,QACNJ,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,YAKvD,eAAC,EAAD,WACE,cAAC,EAAD,CAAMtG,MAAOS,GAAO+E,UAApB,oCACA,eAAC,EAAD,CAAMxF,MAAO,CAAE2F,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE5B,MAAOlB,EACP+C,aAAc,SAACxD,GAAD,OAAOU,EAAgBV,IACrCyD,YAAY,GACZ9F,MAAO,CACL0B,gBAAiB,GACjBqE,YAAa,GACbC,aAAc,GACdC,aAAc,GACd3F,gBAAiB,OACjBF,MAAO,OACP8F,YAAa,OACbC,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACEnE,QAAS,kBACPiD,EAAc,eAAgBhB,IAEhC9C,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAJjD,SAME,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAIhF,MAAM,aAE9B,iBAAZ8B,GACC,cAACgD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACNhF,MAAM,QACNJ,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,YAKvD,eAAC,EAAD,WACE,cAAC,EAAD,CAAMtG,MAAOS,GAAO+E,UAApB,mBACA,cAAC,IAAD,CACEe,QAAS,CACP,aACA,eACA,QACA,mBACA,wBAEFC,cAAejE,EACf1B,QAAS,SAACmD,GACRxB,EAAawB,IAEfyC,eAAgB,CAAEC,OAAQ,GAC1BC,oBAAqB,CACL,IAAdpE,GAAmB,CAAEjC,gBAAiB,OACxB,IAAdiC,GAAmB,CAAEjC,gBAAiB,SACxB,IAAdiC,GAAmB,CAAEjC,gBAAiB,QACxB,IAAdiC,GAAmB,CAAEjC,gBAAiB,OACxB,IAAdiC,GAAmB,CAAEjC,gBAAiB,WAExCsG,kBAAmB,CAAExG,MAAO,cAGhC,eAAC,EAAD,WACE,cAAC,EAAD,CAAMJ,MAAOS,GAAO+E,UAApB,yBACA,eAAC,EAAD,CAAMxF,MAAO,CAAE2F,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE5B,MAAOhB,EAAW6D,WAClBhB,aAAc,SAACxD,GAAD,OACZY,EAAc6D,MAAMC,WAAW1E,IAAM,EAAI0E,WAAW1E,KAEtDyD,YAAY,GACZ9F,MAAO,CACL0B,gBAAiB,GACjBqE,YAAa,GACbC,aAAc,GACdC,aAAc,GACd3F,gBAAiB,OACjBF,MAAO,OACP8F,YAAa,OACbC,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACEnE,QAAS,kBAAMiD,EAAc,aAAcd,IAC3ChD,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAIhF,MAAM,aAE9B,eAAZ8B,GACC,cAACgD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACNhF,MAAM,QACNJ,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,YAKvD,eAAC,EAAD,WACE,cAAC,EAAD,CAAMtG,MAAOS,GAAO+E,UAApB,0BACA,eAAC,EAAD,CAAMxF,MAAO,CAAE2F,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE5B,MAAOd,EACP2C,aAAc,SAACxD,GAAD,OAAOc,EAAcd,IACnCyD,YAAY,GACZ9F,MAAO,CACL0B,gBAAiB,GACjBqE,YAAa,GACbC,aAAc,GACdC,aAAc,GACd3F,gBAAiB,OACjBF,MAAO,OACP8F,YAAa,OACbC,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACEnE,QAAS,kBAAMiD,EAAc,aAAcZ,IAC3ClD,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAIhF,MAAM,YAE9B,eAAZ8B,GACC,cAACgD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACNhF,MAAM,QACNJ,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,eAMxDzE,EAAKmF,YACJ,eAAC,EAAD,CAAMhH,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,8BACA,cAAC,EAAD,CAAMxF,MAAO,CAAEuB,SAAU,GAAI0F,UAAW,UAAxC,SACGpF,EAAKmF,4BAY1B,IAAMvG,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTwG,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfhG,WAAY,SACZD,KAAM,EACNkG,WAAY,IAEdtC,aAAc,CACZ5D,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZK,UAAW,IAEbwD,OAAQ,CACNmB,SAAU,WACVE,IAAK,EACLD,MAAO,GACPJ,aAAc,GACd3E,QAAS,GACTgG,UAAW,EACXhH,gBAAiB,MACjBiH,OAAQ,IAEVjC,UAAW,CACTkC,MAAO,QAEThC,UAAW,CACTjE,SAAU,IAEZgE,WAAY,CACVmB,OAAQ,MChMNjG,GAASQ,IAAWC,OAAO,CAC/BuG,SAAU,CACRtG,KAAM,EACNqG,MAAO,OACPH,WAAY,GACZK,cAAe,IAEjBC,gBAAiB,CACfR,QAAS,OACT9F,eAAgB,SAChBD,WAAY,UAEd6D,OAAQ,CACNkC,QAAS,OACT9F,eAAgB,SAChBD,WAAY,SACZ8F,OAAQ,GACRM,MAAO,GACP7B,eAAgB,GAChBM,aAAc,GACd3E,QAAS,GACTgG,UAAW,GACXhH,gBAAiB,OAEnBsH,SAAU,CACRC,SAAU,YAICC,GA/MG,SAAC,GAQZ,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YAMA,EAAwBhG,qBAAxB,WAAOJ,EAAP,KAAaC,EAAb,KACA,EAAwDG,oBAAS,GAAjE,WAAOF,EAAP,KAA6BC,EAA7B,KAOA,OACE,eAAC,EAAD,CAAMhC,MAAOS,GAAOgH,SAApB,UACE,cAAC,EAAD,CAAMzH,MAAOS,GAAOkH,gBAApB,SACE,cAAC3C,EAAA,EAAD,CAAWhF,MAAOS,GAAOwE,OAAQpE,QAAS,kBAAMoH,GAAaD,IAA7D,SACE,cAAC9C,EAAA,EAAD,CACElF,MAAO,CACLI,MAAO,QACPoB,WAAY,OACZ2D,UAAW,UAEbC,KAAM,GACNC,KAAK,cAIX,cAAC,EAAD,CAAMrF,MAAO,CAAEwH,MAAO,OAAQL,QAAS,QAAvC,SACGY,EAAMG,KAAI,SAACrG,GAAD,OACT,cAACjB,EAAA,EAAD,CAEEC,QAAS,kBAxBK,SAACgB,GACvBG,GAAwB,GACxBF,EAAQD,GAsBesG,CAAgBtG,IAFjC,SAIE,eAAC,EAAD,CACE7B,MAAO,CACLiG,aAAc,GACduB,MAAOY,IAAWC,IAAI,UAAUb,MAAQ,GACxCc,iBAAkB,OAClB3C,eAAgB,EAChBwB,QAAS,OACTC,cAAe,MACf1F,gBAAiB,GACjB6G,kBAAmB,EACnBC,YAAa,OACbC,aAAc,CAAEjB,MAAO,EAAGN,OAAQ,GAClCwB,cAAe,GACfC,aAAc,IAblB,UAgBE,cAAC,EAAD,CACE3I,MAAO,CACLmB,KAAM,EACNqG,MAAO,OACPnG,eAAgB,SAChBD,WAAY,SACZyG,SAAU,UANd,SASE,cAAC,EAAD,UAAOhG,EAAK6B,WAEd,eAAC,EAAD,CACE1D,MAAO,CACLmB,KAAM,EACNqG,MAAO,OACPL,QAAS,OACTC,cAAe,UALnB,UAQE,eAAC,EAAD,CACEpH,MAAO,CACLmB,KAAM,EACNgG,QAAS,OACTC,cAAe,MACf1F,gBAAiB,GALrB,UAQE,cAAC,EAAD,CACE1B,MAAO,CACLmB,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZyG,SAAU,UALd,SAQE,cAAC,EAAD,CAAM7H,MAAO,CAAEwB,WAAY,OAAQ2D,UAAW,UAA9C,SACGtD,EAAK4D,eAGV,cAAC,EAAD,CACEzF,MAAO,CACLmB,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZyG,SAAU,UALd,SAQE,cAAC,EAAD,UAAOhG,EAAKe,aAGhB,eAAC,EAAD,CACE5C,MAAO,CACL4I,eAAgB,EAChBzH,KAAM,EACNgG,QAAS,OACTC,cAAe,MACf1F,gBAAiB,GANrB,UASE,cAAC,EAAD,CACE1B,MAAO,CACLmB,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZyG,SAAU,UALd,SAQE,cAAC,EAAD,CAAM7H,MAAO,CAAEiH,UAAW,UAA1B,SACGpF,EAAKY,sBAGV,cAAC,EAAD,CACEzC,MAAO,CACLmB,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZyG,SAAU,UALd,SAQE,cAAC,EAAD,CACE7H,MAAO,CACL,CACEI,MAAO,QACPoB,WAAY,OACZ+G,kBAAmB,GAEL,eAAhB1G,EAAKS,QAA2B,CAC9BhC,gBAAiB,OAEH,iBAAhBuB,EAAKS,QAAuB,CAC1BhC,gBAAiB,SAEH,UAAhBuB,EAAKS,QAAsB,CACzBhC,gBAAiB,QAEH,qBAAhBuB,EAAKS,QAAiC,CACpChC,gBAAiB,OAEH,yBAAhBuB,EAAKS,QAAkC,CACrChC,gBAAiB,WApBvB,SAwBGuB,EAAKS,qBA1HXT,EAAK6B,aAmIf3B,GAAwBF,GACvB,cAAC,GAAD,CACEA,KAAMA,EACNC,QAASA,EACTC,qBAAsBA,EACtBC,wBAAyBA,QC1I7BvB,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTJ,gBAAiB,cACjB6G,QAAS,OACT9F,eAAgB,SAChBD,WAAY,UAEd6D,OAAQ,CACNkC,QAAS,OACTC,cAAe,MACf/F,eAAgB,SAChBD,WAAY,SACZuE,eAAgB,EAChB2C,iBAAkB,OAClBO,SAAU,MACVvI,gBAAiB,OACjB4F,YAAa,OACbC,YAAa,EACb2C,YAAa,QACb7C,aAAc,MAIH8C,GA/DK,SAAC,GAUd,IATLpI,EASI,EATJA,MACAqI,EAQI,EARJA,aACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,aAOMtJ,EAAQT,IACd,OACE,cAAC,EAAD,CAAMa,MAAOS,GAAOC,UAApB,SACE,eAACE,EAAA,EAAD,CAAkBZ,MAAOS,GAAOwE,OAAQpE,QAASmI,EAAjD,UACGC,GAA6B,WAAjBC,GACX,cAAChE,EAAA,EAAD,CACEE,KAAM,GACNC,KAAM4D,EACN7I,MAAiB,UAAVR,EAAoB,OAAS,UAGxC,cAAC,EAAD,CACEI,MAAO,CACLI,MAAO,QACPmB,SAAU,GACVC,WAAY,OACZF,QAAS,IALb,SAQGX,IAEFsI,GAA6B,UAAjBC,GACX,cAAChE,EAAA,EAAD,CAAaE,KAAM,GAAIC,KAAM4D,EAAiB7I,MAAM,gBCyC/C+I,GA3EI,SAAC,GAQb,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,KACAC,EAKI,EALJA,QAMA,OACE,cAAC,EAAD,CACEtJ,MAAO,CACLkH,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfhG,WAAY,SACZD,KAAM,EACNkG,WAAY,IAPhB,SAUE,cAAC7C,EAAA,EAAD,CACExE,MAAO,CAAEkH,OAAQkB,IAAWC,IAAI,UAAUnB,QAC1CzC,cAAc,QACdC,aAAa,EACbC,QAAS0E,EACTzE,eAAgB,WACd0E,GAASD,IANb,SASE,cAACvE,EAAA,EAAD,UACE,eAAC,EAAD,CACE9E,MAAO,CACLmB,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZK,UAAW,IALf,UAQE,cAACuD,EAAA,EAAD,CACEhF,MAAO,CACLoG,SAAU,WACVE,IAAK,EACLD,MAAO,GACPJ,aAAc,GACd3E,QAAS,GACTgG,UAAW,GACXC,OAAQ,GACRjH,gBAAiB,OAEnBO,QAAS,kBAAMyI,GAASD,IAX1B,SAaE,cAACnE,EAAA,EAAD,CACElF,MAAO,CACLI,MAAO,QACPoB,WAAY,OACZ2D,UAAW,UAEbC,KAAM,GACNC,KAAK,YAGT,cAAC,EAAD,CACErF,MAAO,CACLwH,MAAO,QAFX,SAKG4B,c,qkBClEf,IAuCM3I,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTJ,gBAAiB,cACjBgI,iBAAkB,GAClB3C,eAAgB,KAIL4D,GA/CQ,SAAC,GAUjB,IATLzD,EASI,EATJA,YACA9B,EAQI,EARJA,MACAwF,EAOI,EAPJA,SACAC,EAMI,EANJA,UAOctK,IACd,OACE,cAAC,EAAD,CAAMa,MAAOS,GAAOC,UAApB,SACE,cAACkF,EAAA,EAAD,CACE5F,MAAK,IACHsB,QAAS,GACT2E,aAAc,GACd3F,gBAAiB,OACjBF,MAAO,QACHqJ,EACA,CACEvD,YAAa,UACbC,YAAa,GAEf,CACED,YAAa,OACbC,YAAa,IAGrBL,YAAaA,EACb4D,qBAAsB,OACtB1F,MAAOA,EACP6B,aAAc,SAACxD,GAAD,OAAOmH,GAAYA,EAASnH,SC2BrCsH,GAAc,SAACC,GAC1B,IAAMC,EAAgBD,EAAGE,UAAU,EAAG,GAClCC,EAAYC,SAASJ,EAAGE,UAAU,IAClCG,EAAmB,GACnBC,EAAS,GACPC,EAAqB,KAnDG,WAC9B,IAAIC,EAAS,GAEb,QADc,IAAIC,MAAOC,YAEvB,KAAK,EACHF,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,GACHA,EAAS,IACT,MACF,KAAK,GACHA,EAAS,IACT,MACF,QACEA,EAAS,GAEb,OAAOA,EAQ2BG,GAclC,OAbIV,IAAkBM,KACpBJ,GACiB,IACfE,EAAmBF,EAAUlD,WACpB,IAAMkD,GAAaA,GAAa,GACzCE,EAAmB,IAAIO,OAAOT,EAAUlD,YAC/B,GAAKkD,IACdE,EAAmB,KAAKO,OAAOT,EAAUlD,aAE3CqD,EAASL,EAAgBI,GAEzBC,EAASC,EAAqB,MAEzBD,GAGIO,GAAe,WAC1B,IAAIC,EAA4C,KAAjC,IAAIL,MAAOM,oBACtBC,EAAQ,IAAIP,KAAKA,KAAKQ,MAAQH,GAAUI,cAAcC,MAAM,GAAI,GAEpE,OADWH,EAAMd,UAAU,EAAG,IAAM,IAAMc,EAAMd,UAAU,GAAI,KChFjD,SAASkB,GAAT,GAMX,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,gBAKA,EAAoBjJ,mBAAS,IAA7B,WAAO2H,EAAP,KAAWuB,EAAX,KACA,EAAwBlJ,mBAAS,IAAjC,WAAOoD,EAAP,KAAa+F,EAAb,KACA,EAAsCnJ,mBAAS,IAA/C,WAAOS,EAAP,KAAoBC,EAApB,KACA,EAA0BV,mBAAS,IAAnC,WAAOW,EAAP,KAAcC,EAAd,KACA,EAA0BZ,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KACMlI,EAAKC,cAELkI,EAAYhI,uBAAY,oBAAAC,EAAAC,OAAA,gDAC5B+H,YAAW5H,YAAIR,EAAI,YAAa,cAAc,SAACQ,GACzCA,EAAI6H,UACNN,EAAMxB,GAAY/F,EAAI8H,OAAO9B,QAHL,8DAM3B,IAEH/F,qBAAU,WACR0H,MACC,CAACA,IA8BJ,OACE,eAAC,GAAD,CAAYlC,KAAM4B,EAAc3B,QAAS4B,EAAzC,UACGG,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAM3L,MAAOS,GAAO4K,MAApB,SAA4BA,IACjD,eAAC,EAAD,CAAMrL,MAAOS,GAAO+E,UAApB,sBAAyCoE,KACzC,cAAC,GAAD,CACE9D,YAAY,gBACZ9B,MAAOqB,EACPmE,SAAU4B,EACV3B,WAAYpE,IAEd,cAAC,GAAD,CACES,YAAY,yCACZ9B,MAAOtB,EACP8G,SAAU7G,EACV8G,WAAY/G,IAEd,cAAC,GAAD,CACEoD,YAAY,uBACZ9B,MAAOpB,EACP4G,SAAU3G,EACV4G,WAAY7G,IAEd,cAAC,GAAD,CAAajC,MAAM,UAAUqI,aAlDd,oBAAAxF,EAAAC,OAAA,qDACbmG,GAAMvE,GAAQ3C,GAAeE,GADhB,mCAAAY,EAAA,MAEToI,YAAOhI,YAAIR,EAAI,QAASwG,GAAK,CACjCnE,WAAYJ,EACZ5C,kBAAmBC,EACnBgB,OAAQkG,EACRhH,QACAN,OAAQ,aACRoD,UAAW+E,QARE,yBAAAjH,EAAA,MAUToI,YAAOhI,YAAIR,EAAI,YAAa,aAAc,CAAEwG,QAVnC,OAWfsB,GAAgB,GAChBE,EAAQ,IACRzI,EAAe,IACfE,EAAS,IAdM,wBAeL+G,GAMV0B,EAAS,uBACT/G,YAAW,WACT+G,EAAS,MACR,OARHA,EAAS,mCACT/G,YAAW,WACT+G,EAAS,MACR,MAnBY,mEAuDrB,IAAM7K,GAASQ,IAAWC,OAAO,CAC/BmK,MAAO,CACL/K,gBAAiB,UACjBF,MAAO,QACPmI,kBAAmB,GACnB7G,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZ2D,UAAW,UAEbK,UAAW,CACTqG,aAAc,GACd1G,UAAW,YCOT1E,GAASQ,IAAWC,OAAO,CAC/BmK,MAAO,CACL/K,gBAAiB,UACjBF,MAAO,QACPmI,kBAAmB,GACnB7G,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZ2D,UAAW,UAEbK,UAAW,CACTqG,aAAc,GACd1G,UAAW,YAIA2G,GA/GK,SAAC,GAUd,IATLC,EASI,EATJA,SACA9D,EAQI,EARJA,YACA+D,EAOI,EAPJA,gBACAC,EAMI,EANJA,mBAOM7I,EAAKC,cAEX,EAA0BpB,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KACA,EAA4BrJ,mBAAS,IAArC,WAAOyB,EAAP,KAAewI,EAAf,KACA,EAAoCjK,mBAAS,IAA7C,WAAOwD,EAAP,KAAmB0G,EAAnB,KACA,EAA0BlK,mBAAS,IAAnC,WAAOW,EAAP,KAAcC,EAAd,KACA,EAAwCZ,mBAAS,IAAjD,WAAOa,EAAP,KAAqBC,EAArB,KACA,EAA4Bd,mBAAS,IAArC,WAAOK,EAAP,KAAe8J,EAAf,KAwCA,OACE,eAAC,GAAD,CAAY/C,KAAM2C,EAAiB1C,QAAS2C,EAA5C,UACGZ,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAM3L,MAAOS,GAAO4K,MAApB,SAA4BA,IACjD,cAAC,EAAD,CAAMrL,MAAOS,GAAO+E,UAApB,sEAGA,cAAC,GAAD,CACEM,YAAY,mBACZ9B,MAAON,EACP8F,SAAU0C,IAEZ,cAAC,GAAD,CACEpG,YAAY,gBACZ9B,MAAOyB,EACP+D,SAAU2C,IAEZ,cAAC,GAAD,CACErG,YAAY,uBACZ9B,MAAOpB,EACP4G,SAAU3G,IAEZ,cAAC,GAAD,CACEiD,YAAY,wBACZ9B,MAAOlB,EACP0G,SAAUzG,IAEZ,cAAC,GAAD,CAAgB+C,YAAY,OAAO9B,MAAO1B,EAAQkH,SAAU4C,IAC5D,cAAC,GAAD,CACEzL,MAAM,WACNqI,aAnEgB,8BAAAxF,EAAAC,OAAA,uDACd4I,EAA0B,GAC5B3I,GACF2I,EAAiBC,KAAKC,YAAM,SAAU,KAAM7I,IAE1C+B,GACF4G,EAAiBC,KAAKC,YAAM,aAAc,KAAM9G,IAE9C7C,GACFyJ,EAAiBC,KAAKC,YAAM,QAAS,KAAM3J,IAEzCE,GACFuJ,EAAiBC,KAAKC,YAAM,eAAgB,KAAMzJ,IAEhDR,GACF+J,EAAiBC,KAAKC,YAAM,SAAU,KAAMjK,IAGxCkK,EAAiB,GAlBH,WAAAhJ,EAAA,MAoBQiJ,YAC1BC,IAAK,WAAL,GAAMC,YAAWvJ,EAAI,UAArB,OAAkCiJ,MArBhB,QAoBdO,EApBc,QAuBFC,OAChBvB,EAAS,sBACT/G,YAAW,WACT+G,EAAS,MACR,OAEHsB,EAAcE,SAAQ,SAAClJ,GACrB4I,EAAQF,KAAK1I,EAAI8H,WAEnBO,GAAmB,GACnBhE,GAAY,GACZ8D,EAASS,IAlCS,8DAoEhBvD,SAAS,SACTC,aAAa,e,+kBCrFrB,IAMa6D,GAAYC,aAAY,CACnC3H,KAAM,OACN4H,aAPA,CACE3K,OAAQ,OACR4K,iBAAiB,GAMnBC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACbA,EAAOC,SACTF,EAAM/K,OAAS,WACf+K,EAAMH,iBAAkB,EACxBG,EAAMG,KAAOF,EAAOC,UAEpBF,EAAM/K,OAAS,WACf+K,EAAMH,iBAAkB,EACxBG,EAAMG,UAAO3I,IAGjB4I,WAAY,SAACJ,EAAOC,GAClBD,EAAM/K,OAAS,WACf+K,EAAMH,iBAAkB,EACxBG,EAAMG,KAAN,SACKH,EAAMG,MADX,IAEEE,KAAMJ,EAAOC,QAAQG,KACrB3F,MAAOuF,EAAOC,QAAQxF,SAG1B4F,YAAa,SAACN,GACZA,EAAM/K,OAAS,WACf+K,EAAMH,iBAAkB,EACxBG,EAAMG,UAAO3I,IAGjB+I,cAAe,SAACC,OAgBLC,GAAa,SAACT,GAAD,OAAsBA,EAAMG,MAC/C,GAA+CT,GAAUgB,QAAjDX,GAAR,GAAQA,UAAWK,GAAnB,GAAmBA,WAAYE,GAA/B,GAA+BA,YAEvBZ,MAAf,QCnDe,SAASiB,KACtB,IAAQR,EAAuCS,YAAYH,IAAnDN,KACFpK,EAAKC,cAEX,EAAwCpB,oBAAS,GAAjD,WAAOgJ,EAAP,KAAqBC,EAArB,KACA,EAA8CjJ,oBAAS,GAAvD,WAAO+J,EAAP,KAAwBC,EAAxB,KACA,EAAgChK,oBAAS,GAAzC,WAAO+F,EAAP,KAAiBC,EAAjB,KACA,EAA0BhG,qBAA1B,WAAO8F,EAAP,KAAcgE,EAAd,KAcA,OACE,mCACE,cAACjH,EAAA,EAAD,UACE,eAAC,EAAD,CAAM9E,MAAOS,GAAOC,UAApB,UACE,eAAC,EAAD,CAAMV,MAAOS,GAAOE,MAApB,kCAA2C6M,OAA3C,EAA2CA,EAAMU,eACjD,eAAC,EAAD,CAAMlO,MAAOS,GAAOsN,QAApB,UAEE,eAACnN,EAAA,EAAD,CACEC,QAAS,kBAAMqK,GAAiBD,IAChCjL,MAAO,CAACS,GAAO0N,WAAY1N,GAAO2N,eAFpC,UAIE,cAAClJ,EAAA,EAAD,CAAaE,KAAM,GAAIhF,MAAM,QAAQiF,KAAK,gBAC1C,cAAC,EAAD,CAAMrF,MAAO,CAAEI,MAAO,SAAtB,wBAIF,eAACQ,EAAA,EAAD,CACEC,QAAS,kBAAMoL,GAAoBD,IACnChM,MAAO,CAACS,GAAO0N,WAAY1N,GAAO4N,kBAFpC,UAIE,cAACnJ,EAAA,EAAD,CAAaE,KAAM,GAAIhF,MAAM,QAAQiF,KAAK,WAC1C,cAAC,EAAD,CAAMrF,MAAO,CAAEI,MAAO,SAAtB,yBAIF,eAACQ,EAAA,EAAD,CACEC,QAtCO,oBAAA2C,EAAAC,OAAA,gDACjBsI,EAAS,IACTP,YAAWkB,YAAMC,YAAWvJ,EAAI,WAAW,SAACwJ,GAC1C,IAAI0B,EAAiB,GACrB1B,EAAcE,SAAQ,SAAClJ,GACrB0K,EAAQC,QAAQ3K,EAAI8H,WAEtBzD,GAAY,GACZ8D,EAASuC,MARM,6DAuCPtO,MAAO,CAACS,GAAO0N,WAAY1N,GAAO+N,gBAFpC,UAIE,cAACtJ,EAAA,EAAD,CAAaE,KAAM,GAAIhF,MAAM,QAAQiF,KAAK,UAC1C,cAAC,EAAD,CAAMrF,MAAO,CAAEI,MAAO,SAAtB,yBAGJ,eAAC,EAAD,CAAMJ,MAAO,CAAEkH,OAAQkB,IAAWC,IAAI,UAAUnB,OAAS,KAAzD,UACGc,GACC,cAAC,EAAD,CAAMhI,MAAO,CAAE0H,cAAe,IAA9B,SACGK,EACC,cAAC,GAAD,CACEA,MAAOA,EACPC,SAAUA,EACVC,YAAaA,IAGf,cAAC,EAAD,qDAIN,cAACwG,GAAD,CACE1C,SAAUA,EACV9D,YAAaA,EACb+D,gBAAiBA,EACjBC,mBAAoBA,IAEtB,cAACjB,GAAD,CACEC,aAAcA,EACdC,gBAAiBA,cAS/B,IAAMzK,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTyG,QAAS,OACTC,cAAe,SACfhG,WAAY,SACZD,KAAM,EACNkG,WAAY,GACZK,cAAe,IAEjB/G,MAAO,CACLY,SAAU,GACVC,WAAY,OACZmE,eAAgB,GAChB2C,iBAAkB,IAEpByF,QAAS,CACPvG,MAAO,OACPL,QAAS,OACTC,cAAe,MACfsH,SAAU,OACVtN,WAAY,SACZC,eAAgB,gBAElB8M,WAAY,CACV3G,MAAO,IACPN,OAAQ,IACRf,YAAa,EACbF,aAAc,GACdkB,QAAS,OACT/F,WAAY,SACZC,eAAgB,UAElB+M,cAAe,CACblI,YAAa,UACb5F,gBAAiB,WAEnB+N,iBAAkB,CAChBnI,YAAa,UACb5F,gBAAiB,WAEnBkO,eAAgB,CACdtI,YAAa,UACb5F,gBAAiB,aC5IN,SAASqO,GAAT,GAQX,IAPF9M,EAOC,EAPDA,KACA+M,EAMC,EANDA,gBACAC,EAKC,EALDA,mBAMMjP,EAAQT,IACd,EAAwB8C,mBAASJ,EAAKmF,WAAanF,EAAKmF,WAAa,IAArE,WAAO8H,EAAP,KAAaC,EAAb,KACA,EAA8B9M,mBAAS,IAAvC,WAAOC,EAAP,KAAgB8M,EAAhB,KACM5L,EAAKC,cAcX,OACE,eAAC,GAAD,CAAYgG,KAAMuF,EAAiBtF,QAASuF,EAA5C,UACE,eAAC,EAAD,CAAM7O,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,+BACA,cAAC,EAAD,CAAMxF,MAAO,CAAEuB,SAAU,GAAIC,WAAY,QAAzC,SAAoDK,EAAK6B,YAE3D,eAAC,EAAD,CAAM1D,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAO,CAAEuB,SAAU,GAAIC,WAAY,OAAzC,SACGK,EAAK4D,aAER,eAAC,EAAD,CAAMzF,MAAOS,GAAO+E,UAApB,2CACwB3D,EAAKY,qBAE7B,eAAC,EAAD,CAAMzC,MAAOS,GAAO+E,UAApB,+BAA+C3D,EAAK6D,gBAEtD,eAAC,EAAD,CAAM1F,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAO,CAAEwB,WAAY,OAAQD,SAAU,IAA7C,SAAoDM,EAAKe,QACxDf,EAAKiB,cACJ,eAAC,EAAD,CAAM9C,MAAOS,GAAO+E,UAApB,oCACoB3D,EAAKiB,mBAI7B,eAAC,EAAD,CAAM9C,MAAO,CAACS,GAAO8E,YAArB,UACE,eAAC,EAAD,CACEvF,MAAO,CAAEmH,QAAS,OAAQC,cAAe,MAAOsH,SAAU,QAD5D,UAGE,cAAC,EAAD,CAAM1O,MAAOS,GAAO+E,UAApB,mBACA,cAAC,EAAD,CACExF,MAAO,CACLS,GAAO+E,UACP,CACElF,gBAAiB,MACjBF,MAAO,QACP6O,WAAY,EACZ1G,kBAAmB,IAPzB,SAWG1G,EAAKS,YAGTT,EAAKmB,YACJ,cAAC,EAAD,UACE,eAAC,EAAD,CAAMhD,MAAOS,GAAO+E,UAApB,yBACe3D,EAAKmB,WADpB,eAOLnB,EAAKqB,YACJ,eAAC,EAAD,CAAMlD,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,2BACA,cAAC,EAAD,CAAMxF,MAAOS,GAAO+E,UAApB,SAAgC3D,EAAKqB,gBAGzC,eAAC,EAAD,CAAMlD,MAAOS,GAAO8E,WAApB,UACE,cAAC,EAAD,CAAMvF,MAAOS,GAAO+E,UAApB,2DAGA,eAAC,EAAD,CAAMxF,MAAO,CAAE2F,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE5B,MAAO8K,EACPjJ,aAAc,SAACxD,GAAD,OAAO0M,EAAQ1M,IAC7ByD,YAAY,GACZ9F,MAAO,CACL0B,gBAAiB,GACjBqE,YAAa,GACbC,aAAc,GACdC,aAAc,GACd7F,MAAiB,UAAVR,EAAoB,OAAS,QACpCsG,YAAuB,UAAVtG,EAAoB,OAAS,QAC1CuG,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACEnE,QAzFY,oBAAA2C,EAAAC,OAAA,oDAChBqL,IAAQjN,EAAK6B,OADG,kCAAAF,EAAA,MAEZG,YAAUC,YAAIR,EAAI,QAASvB,EAAK6B,QAAS,CAC7CsD,WAAY8H,KAHI,OAKlBE,EAAW,qCACXzK,YAAW,WACTyK,EAAW,MACV,KARe,6DA0FZhP,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,GAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAIhF,MAAM,YAE1C8B,EAAQyJ,OAAS,GAChB,cAACzG,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACNhF,MAAM,QACNJ,MAAO,CAAEoG,SAAU,WAAYC,MAAO,GAAIC,IAAK,cAS7D,IAAM7F,GAASQ,IAAWC,OAAO,CAC/BsE,UAAW,CACTjE,SAAU,IAEZgE,WAAY,CACVmB,OAAQ,MC/HG,SAASwI,GAAT,GAAyC,EAAnB1O,WAAoB,IACjDZ,EAAQT,IACRiE,EAAKC,cACX,EAAwBpB,mBAAS,IAAjC,WAAOoD,EAAP,KAAa+F,EAAb,KACA,EAAoBnJ,mBAAS,IAA7B,WAAO2H,EAAP,KAAWuB,EAAX,KACA,EAA0BlJ,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KAEA,EAA8CrJ,oBAAS,GAAvD,WAAO2M,EAAP,KAAwBC,EAAxB,KACA,EAAwB5M,qBAAxB,WAAOJ,EAAP,KAAaC,EAAb,KAiCA,OACE,eAAC,EAAD,CAAM9B,MAAOS,GAAOC,UAApB,UACE,cAAC,EAAD,CAAMV,MAAOS,GAAOE,MAApB,0BACA,eAAC,EAAD,CAAMX,MAAOS,GAAO0O,UAApB,UACG9D,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAM3L,MAAOS,GAAO4K,MAApB,SAA4BA,IACjD,cAAC,GAAD,CACEvF,YAAY,qCACZ9B,MAAO4F,EACPJ,SAAU2B,EACV1B,UAAW4B,EAAMM,OAAS,IAAM/B,IAElC,cAAC,GAAD,CACE9D,YAAY,4CACZ9B,MAAOqB,EACPmE,SAAU4B,EACV3B,UAAW4B,EAAMM,OAAS,IAAMtG,IAElC,cAAC,EAAD,CAAMrF,MAAOS,GAAOkH,gBAApB,SACE,cAAC,EAAD,CACE3H,MAAO,CACLmH,QAAS,OACT9F,eAAgB,SAChBD,WAAY,SACZkH,iBAAkB,OAClB3C,eAAgB,EAChBuB,OAAQ,GACRM,MAAO,GACPvB,aAAc,GACd3F,gBAA2B,UAAVV,EAAoB,OAAS,SAVlD,SAaE,cAACgB,EAAA,EAAD,CAAkBC,QA9DN,oBAAA2C,EAAAC,OAAA,gDAChB4B,GAAQuE,EACV4B,YAAW5H,YAAIR,EAAI,QAASwG,EAAGwF,gBAAgB,SAACxL,GAC1CA,EAAI6H,SACF7H,EAAI8H,OAAOjG,WAAW4J,gBAAkBhK,EAAKgK,eAC/CvN,EAAQ8B,EAAI8H,QACZmD,GAAmB,GACnBvD,EAAS,IACTH,EAAM,IACNC,EAAQ,MAERE,EAAS,iDACT/G,YAAW,WACT+G,EAAS,MACR,OAGLA,EAAS,wBACT/G,YAAW,WACT+G,EAAS,MACR,UAIPA,EAAS,uBACT/G,YAAW,WACT+G,EAAS,MACR,MA3Be,6DA8DZ,SACE,cAACpG,EAAA,EAAD,CACEE,KAAM,GACNC,KAAK,SACLjF,MAAiB,UAAVR,EAAoB,QAAU,kBAM9CgP,GAAmB/M,GAClB,cAAC8M,GAAD,CACE9M,KAAMA,EACN+M,gBAAiBA,EACjBC,mBAAoBA,OAO9B,IAAMpO,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTwG,OAAQ,OACRC,QAAS,OACThG,KAAM,EACNC,WAAY,SACZiG,WAAY,IAEd1G,MAAO,CACLY,SAAU,GACVC,WAAY,OACZmE,eAAgB,GAChB2C,iBAAkB,IAEpB6G,UAAW,CACT3H,MAAO,OACPrG,KAAM,EACNE,eAAgB,UAElBsG,gBAAiB,CACfR,QAAS,OACT9F,eAAgB,SAChBD,WAAY,UAEdiK,MAAO,CACL/K,gBAAiB,UACjBF,MAAO,QACPmI,kBAAmB,GACnB7G,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZ2D,UAAW,Y,SCxBAmK,GAlGC,WAAO,IAAD,EACZ9B,EAASS,YAAYH,IAArBN,KACF+B,EAAWC,cACXC,EAAOC,cACPtM,EAAKC,cAEXQ,qBAAU,WACJ2J,GAAQA,EAAKmC,KACfnE,YAAW5H,YAAIR,EAAI,SAAUoK,EAAKmC,MAAM,SAAC/L,GACvC2L,EAAS9B,GAAW7J,EAAI8H,cAG3B,IAIH,OACE,mCACG8B,GACC,eAAC,EAAD,WACE,eAAC,EAAD,CACExN,MAAO,CACL2F,eAAgB,GAChBwB,QAAS,OACT9F,eAAgB,SAChBD,WAAY,UALhB,UAQmB,QAAhBwO,IAASC,IAAgB,SAACrC,EAAKsC,WAAL,EAAeC,SAAS,QAQjD,cAAC,EAAD,CAAM/P,MAAO,CAAEM,gBAAiB,eAAhC,SACE,cAAC,UAAD,CACE0P,IAAKxC,EAAKsC,SACVtI,MAAO,IACPN,OAAQ,IACRlH,MAAO,CAAEiG,aAAc,QAZ3B,cAACgK,EAAA,EAAD,CACEC,OAAQ,CACNF,IAAKxC,EAAKsC,UAEZ9P,MAAO,CAAEiG,aAAc,GAAIuB,MAAO,IAAKN,OAAQ,OAanD,cAAC,EAAD,CAAMlH,MAAO,CAAEuB,SAAU,IAAzB,SAAgCiM,EAAKU,iBAEvC,eAAC,EAAD,CAAMlO,MAAO,CAAE0G,OAAQ,IAAvB,UACE,eAAC,EAAD,CACE1G,MAAO,CAAEuB,SAAU,GAAI4F,QAAS,OAAQC,cAAe,OADzD,UAGE,cAAC,EAAD,CAAMpH,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,oBAAmE,IAClE3C,EAAK4C,SAEP5C,EAAKE,MACJ,eAAC,EAAD,CACE1N,MAAO,CAAEuB,SAAU,GAAI4F,QAAS,OAAQC,cAAe,OADzD,UAGE,cAAC,EAAD,CAAMpH,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,sBAEQ,IACP3C,EAAKE,WAIXF,EAAKzF,OAASyF,EAAKzF,MAAM4D,OAAS,GACjC,cAAC,EAAD,CAAM3L,MAAO,CAAE0G,OAAQ,IAAvB,SACG8G,EAAKzF,MAAMG,KAAI,SAACrG,GAAD,OACd,eAAC,EAAD,CAEE7B,MAAO,CACLmH,QAAS,OACTC,cAAe,MACfhG,WAAY,SACZC,eAAgB,gBANpB,UASE,cAAC,EAAD,UAAOQ,EAAK6B,SACZ,cAAC,EAAD,UAAO7B,EAAK4D,aACZ,cAAC,EAAD,UAAO5D,EAAKe,QACZ,cAAC,EAAD,UAAOf,EAAKS,WAXPT,EAAK6B,aAgBlB,cAAC,GAAD,CACE/C,MAAM,oBACNqI,aA3Ea,oBAAAxF,EAAAC,OAAA,gDACrB4M,YAAQZ,GAAMa,MAAK,kBAAMf,EAAS5B,SADb,6DA4Eb1E,SAAS,WACTC,aAAa,gB,qkBC1FzB,IA4GMzI,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTJ,gBAAiB,OACjB2F,aAAc,GACdkB,QAAS,OACT7F,QAAS,IAEX+J,MAAO,CACL/K,gBAAiB,UACjBF,MAAO,QACPmI,kBAAmB,GACnB7G,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZ2D,UAAW,YAIAoL,GA9HD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,gBACT5Q,EAAQT,IACd,EAA0B8C,mBAAS,IAAnC,WAAOmO,EAAP,KAAcK,EAAd,KACA,EAAgCxO,mBAAS,IAAzC,WAAOyO,EAAP,KAAiBC,EAAjB,KACA,EAA8B1O,oBAAS,GAAvC,WAAO0C,EAAP,KAAgBiM,EAAhB,KACA,EAA0B3O,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KACQkC,EAASS,YAAYH,IAArBN,KAEF+B,EAAWC,cACXC,EAAOC,cAEb7L,qBAAU,WACJ2J,EACFgD,GAAgB,GACPf,EAAKoB,cACdtB,EAASnC,GAAUqC,EAAKoB,cACxBL,GAAgB,MAEjB,IAuBH,OACE,eAAC,EAAD,CAAMxQ,MAAOS,GAAOC,UAApB,UACG2K,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAM3L,MAAOS,GAAO4K,MAApB,SAA4BA,IACjD,cAAC,GAAD,CACEvF,YAAY,QACZ9B,MAAOoM,EACP5G,SAAUiH,EACVhH,UAAW4B,EAAMM,OAAS,IAAMyE,IAElC,eAAC,EAAD,CACEpQ,MAAK,IACHoG,SAAU,WACVe,QAAS,OACTC,cAAe,MACf/F,eAAgB,gBAChBiH,iBAAkB,GAClB3C,eAAgB,EAChBrE,QAAS,GACT2E,aAAc,IACVoF,EAAMM,OAAS,IAAM+E,EACrB,CACExK,YAAa,UACbC,YAAa,GAEf,CACED,YAAa,UACbC,YAAa,IAjBvB,UAqBE,cAACP,EAAA,EAAD,CACE5F,MAAO,CACLmB,KAAM,EACNf,MAAiB,UAAVR,EAAoB,OAAS,SAEtCkG,YAAY,eACZgL,iBAAiBnM,EACjBkB,aAAc,SAACxD,GAAD,OAAOsO,EAAYtO,MAEnC,cAACzB,EAAA,EAAD,CACEZ,MAAO,CACLmB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBR,QAAS,kBAAM+P,GAAWjM,IAN5B,SAQGA,EACC,cAACO,EAAA,EAAD,CACElF,MAAO,CAAEI,MAAiB,UAAVR,EAAoB,OAAS,SAC7CwF,KAAM,GACNC,KAAM,QAGR,cAACH,EAAA,EAAD,CACElF,MAAO,CAAEI,MAAiB,UAAVR,EAAoB,OAAS,SAC7CwF,KAAM,GACNC,KAAM,mBAKd,cAAC,GAAD,CAAa1E,MAAM,eAAeqI,aAnFhB,oBAAAxF,EAAAC,OAAA,gDAChB2M,GAASM,EACXK,YAA2BtB,EAAMW,EAAOM,GACrCJ,MAAK,SAAC9C,GACL+B,EAASnC,GAAUI,EAAKA,OACxBgD,GAAgB,MAEjBQ,OAAM,SAAC3F,GACNC,EAAS,+BACT/G,YAAW,WACT+G,EAAS,MACR,SAGPA,EAAS,sBACT/G,YAAW,WACT+G,EAAS,MACR,MAjBe,mE,qkBCfxB,IA8HM7K,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTJ,gBAAiB,OACjB2F,aAAc,GACdkB,QAAS,OACT7F,QAAS,IAEX+J,MAAO,CACL/K,gBAAiB,UACjBF,MAAO,QACPmI,kBAAmB,GACnB7G,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZ2D,UAAW,YAIA8L,GAhJE,SAAC,GAA8B,IAA5BT,EAA2B,EAA3BA,gBACZ5Q,EAAQT,IACd,EAAwB8C,mBAAS,IAAjC,WAAOoD,EAAP,KAAa+F,EAAb,KACA,EAA0BnJ,mBAAS,IAAnC,WAAOmO,EAAP,KAAcK,EAAd,KACA,EAAgCxO,mBAAS,IAAzC,WAAOyO,EAAP,KAAiBC,EAAjB,KACA,EAA0B1O,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KACA,EAA8BrJ,oBAAS,GAAvC,WAAO0C,EAAP,KAAgBiM,EAAhB,KACQpD,EAASS,YAAYH,IAArBN,KAEF+B,EAAWC,cACXC,EAAOC,cACPtM,EAAKC,cAEXQ,qBAAU,WACJ2J,EACFgD,GAAgB,GACPf,EAAKoB,cACdtB,EAASnC,GAAUqC,EAAKoB,cACxBL,GAAgB,MAEjB,IAiCH,OACE,eAAC,EAAD,CAAMxQ,MAAOS,GAAOC,UAApB,UACG2K,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAM3L,MAAOS,GAAO4K,MAApB,SAA4BA,IACjD,cAAC,GAAD,CACEvF,YAAY,oBACZ9B,MAAOqB,EACPmE,SAAU4B,EACV3B,UAAW4B,EAAMM,OAAS,IAAMtG,IAElC,cAAC,GAAD,CACES,YAAY,QACZ9B,MAAOoM,EACP5G,SAAUiH,EACVhH,UAAW4B,EAAMM,OAAS,IAAMyE,IAElC,eAAC,EAAD,CACEpQ,MAAK,IACHoG,SAAU,WACVe,QAAS,OACTC,cAAe,MACf/F,eAAgB,gBAChBiH,iBAAkB,GAClB3C,eAAgB,EAChBrE,QAAS,GACT2E,aAAc,IACVoF,EAAMM,OAAS,IAAM+E,EACrB,CACExK,YAAa,UACbC,YAAa,GAEf,CACED,YAAa,UACbC,YAAa,IAjBvB,UAqBE,cAACP,EAAA,EAAD,CACE5F,MAAO,CACLmB,KAAM,EACNf,MAAiB,UAAVR,EAAoB,OAAS,SAEtCkG,YAAY,eACZgL,iBAAiBnM,EACjBkB,aAAc,SAACxD,GAAD,OAAOsO,EAAYtO,MAEnC,cAACzB,EAAA,EAAD,CACEZ,MAAO,CACLmB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBR,QAAS,kBAAM+P,GAAWjM,IAN5B,SAQGA,EACC,cAACO,EAAA,EAAD,CACElF,MAAO,CAAEI,MAAiB,UAAVR,EAAoB,OAAS,SAC7CwF,KAAM,GACNC,KAAM,QAGR,cAACH,EAAA,EAAD,CACElF,MAAO,CAAEI,MAAiB,UAAVR,EAAoB,OAAS,SAC7CwF,KAAM,GACNC,KAAM,mBAKd,cAAC,GAAD,CAAa1E,MAAM,qBAAkBqI,aAnGnB,oBAAAxF,EAAAC,OAAA,gDAChB4B,GAAQ+K,GAASM,EACnBQ,YAA+BzB,EAAMW,EAAOM,GACzCJ,MAAK,SAAC9C,GACL2D,YAAc3D,EAAKA,KAAM,CACvBU,YAAa7I,EACbyK,SAAS,0CAA2CzK,EAA5C,SACPiL,MAAK,oBAAA9M,EAAAC,OAAA,kEAAAD,EAAA,MACAoI,YAAOhI,YAAIR,EAAI,SAAUoK,EAAKA,KAAKmC,KAAM,CAC7CyB,OAAQ5D,EAAKA,KAAKmC,IAClB0B,SAAU7D,EAAKA,KAAKU,YACpBR,KAAM,WAJF,OAMN6B,EAASnC,GAAUI,EAAKA,OACxBgD,GAAgB,GAPV,kEAUTQ,OAAM,SAAC3F,GACNC,EAAS,uCACT/G,YAAW,WACT+G,EAAS,MACR,SAGPA,EAAS,sBACT/G,YAAW,WACT+G,EAAS,MACR,MA3Be,mEC6LTgG,GAlNK,SAAC,GAA0B,IAAD,EAAvBC,EAAuB,EAAvBA,YACb/D,EAASS,YAAYH,IAArBN,KACF+B,EAAWC,cACXC,EAAOC,cAEb,EAAwDzN,mBAAS,IAAjE,WAAOuP,EAAP,KAA6BC,EAA7B,KACA,EAAoDxP,mBAAS,IAA7D,WAAOyP,EAAP,KAA2BC,EAA3B,KACA,EAAwB1P,mBACtBuL,GAAQA,EAAKU,YAAcV,EAAKU,YAAc,IADhD,WAAO7I,EAAP,KAAa+F,EAAb,KAGA,EAA0BnJ,mBAASuL,GAAQA,EAAK4C,MAAQ5C,EAAK4C,MAAQ,IAArE,WAAOA,EAAP,KAAcK,EAAd,KA+CA,OACE,mCACGjD,GACC,eAAC,EAAD,WACE,cAACxI,EAAA,EAAD,CACEhF,MAAO,CACLoG,SAAU,WACVE,IAAK,EAELD,MAAO,GACPJ,aAAc,GACd3E,QAAS,GACTgG,UAAW,GACXC,OAAQ,GACRjH,gBAAiB,SAEnBO,QAAS,WA7BG,EAAA2C,EAAAC,OAAA,gDAChBgM,EAAKoB,cACHxL,GAAQA,IAASoK,EAAKoB,YAAY3C,aACpCiD,YAAc1B,EAAKoB,YAAa,CAAE3C,YAAa7I,IAAQiL,MAAK,kBAC1DiB,GAAY,MAGZnB,GAASA,IAAUX,EAAKoB,YAAYT,OACtCwB,YAAYnC,EAAKoB,YAAaT,GAAOE,MAAK,kBAAMiB,GAAY,OAR5C,4DA+BVA,GAAY,IAdhB,SAiBE,cAACrM,EAAA,EAAD,CACElF,MAAO,CACLI,MAAO,QACPoB,WAAY,OACZ2D,UAAW,UAEbC,KAAM,GACNC,KAAK,YAGT,cAAC,EAAD,CACErF,MAAO,CACL2F,eAAgB,GAChBwB,QAAS,OACT9F,eAAgB,SAChBD,WAAY,UALhB,SAQmB,QAAhBwO,IAASC,IAAgB,SAACrC,EAAKsC,WAAL,EAAeC,SAAS,QAQjD,cAAC,EAAD,CAAM/P,MAAO,CAAEM,gBAAiB,eAAhC,SACE,cAAC,UAAD,CACE0P,IAAKxC,EAAKsC,SACVtI,MAAO,IACPN,OAAQ,IACRlH,MAAO,CAAEiG,aAAc,QAZ3B,cAACgK,EAAA,EAAD,CACEC,OAAQ,CACNF,IAAKxC,EAAKsC,UAEZ9P,MAAO,CAAEiG,aAAc,GAAIuB,MAAO,IAAKN,OAAQ,SAarD,cAAC,EAAD,CAAMlH,MAAO,CAAEiP,WAAY,GAAItJ,eAAgB,IAA/C,SACE,eAAC,EAAD,CACE3F,MAAO,CACLuB,SAAU,GACV4F,QAAS,OACTC,cAAe,MACfhG,WAAY,UALhB,UAQE,cAAC,EAAD,CAAMpB,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,kBAAiE,IACjE,cAAC,GAAD,CACEnM,MAAOqB,EACPmE,SAAU4B,EACVtF,YAAY,uBAIlB,cAAC,EAAD,CAAM9F,MAAO,CAAEiP,WAAY,GAAItJ,eAAgB,IAA/C,SACE,eAAC,EAAD,CACE3F,MAAO,CACLuB,SAAU,GACV4F,QAAS,OACTC,cAAe,MACfhG,WAAY,UALhB,UAQE,cAAC,EAAD,CAAMpB,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,oBAAmE,IACnE,cAAC,GAAD,CACEnM,MAAOoM,EACP5G,SAAUiH,EACV3K,YAAY,kCAMlB,eAAC,EAAD,CAAM9F,MAAO,CAAEiP,WAAY,GAAItJ,eAAgB,IAA/C,UACG+L,EAAmB/F,OAAS,GAC3B,cAAC,EAAD,CAAM3L,MAAO,CAAEI,MAAO,QAASoB,WAAY,QAA3C,SACGkQ,IAGL,cAAC,EAAD,CAAM1R,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,2DAGA,cAACnL,EAAA,EAAD,CAAWnE,QAtID,oBAAA2C,EAAAC,OAAA,gDACdgM,EAAKoB,aACPgB,YAAsBpC,EAAKoB,aAAaP,MAAK,WAC3CqB,EAAsB,2DACtBpN,YAAW,WACToN,EAAsB,MACrB,QANW,6DAsIV,SACE,eAAC,EAAD,CAAM3R,MAAO,CAAEI,MAAO,OAAQ0R,mBAAoB,aAAlD,sDACsCtE,EAAK4C,cAM/C,eAAC,EAAD,CAAMpQ,MAAO,CAAEiP,WAAY,GAAItJ,eAAgB,IAA/C,UACG6L,EAAqB7F,OAAS,GAC7B,cAAC,EAAD,CAAM3L,MAAO,CAAEI,MAAO,QAASoB,WAAY,QAA3C,SACGgQ,IAGL,cAAC,EAAD,CAAMxR,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,mDAGA,cAACnL,EAAA,EAAD,CAAWnE,QApKC,oBAAA2C,EAAAC,OAAA,gDAChBgM,EAAKoB,aAAepB,EAAKoB,YAAYT,OACvC2B,YAAuBtC,EAAMA,EAAKoB,YAAYT,OAAOE,MAAK,WACxDmB,EACE,0EAEFlN,YAAW,WACTkN,EAAwB,MACvB,QARa,6DAoKZ,SACE,cAAC,EAAD,CAAMzR,MAAO,CAAEI,MAAO,OAAQ0R,mBAAoB,aAAlD,0EAOJ,eAAC,EAAD,CAAM9R,MAAO,CAAEiP,WAAY,GAAItJ,eAAgB,IAA/C,UACE,cAAC,EAAD,CAAM3F,MAAO,CAAEwB,WAAY,OAAQ2O,YAAa,GAAhD,iDAGA,cAAC,EAAD,+FAIA,cAACnL,EAAA,EAAD,CAAWnE,QA5JC,oBAAA2C,EAAAC,OAAA,gDAChBgM,EAAKoB,aACPmB,YAAWvC,EAAKoB,aAAaP,MAAK,WAChCf,EAAS5B,SAHO,6DA4JZ,SACE,cAAC,EAAD,CACE3N,MAAO,CACLI,MAAO,MACPoB,WAAY,OACZsQ,mBAAoB,aAJxB,6CCpMC,SAASG,KACtB,IAAQzE,EAASS,YAAYH,IAArBN,KACF+B,EAAWC,cACXpM,EAAKC,cAEX,EAAkCpB,oBAAS,GAA3C,WAAOiQ,EAAP,KAAkBC,EAAlB,KACA,EAAwClQ,oBAAS,GAAjD,WAAOmQ,EAAP,KAAqB5B,EAArB,KACA,EAAgCvO,oBAAS,GAAzC,WAAOoQ,EAAP,KAAiBd,EAAjB,KACA,EAAwBtP,oBAAS,GAAjC,WAAOoH,EAAP,KAAaC,EAAb,KAUA,OARAzF,qBAAU,WACJ2J,GAAQA,EAAKmC,KACfnE,YAAW5H,YAAIR,EAAI,SAAUoK,EAAKmC,MAAM,SAAC/L,GACvC2L,EAAS9B,GAAW7J,EAAI8H,cAG3B,IAGD,eAAC,EAAD,CAAM1L,MAAOS,GAAOC,UAApB,UACG8M,EACC,cAAC,GAAD,IAEA,eAAC,EAAD,CAAMxN,MAAOS,GAAO6R,MAApB,UACE,cAAC,EAAD,CAAMtS,MAAOS,GAAO8R,aAApB,8HAIA,cAAC,GAAD,CACE5R,MAAM,eACNqI,aAAc,kBAAMmJ,GAAa,IACjClJ,SAAS,UACTC,aAAa,UAEf,cAAC,GAAD,CACEvI,MAAM,qBACNqI,aAAc,kBAAMwH,GAAgB,IACpCvH,SAAS,YACTC,aAAa,UAEf,cAAC,IAAD,CACEsJ,aAAc/R,GAAOgS,QACrBC,UAAWR,EACXS,gBAAiB,kBAAMR,GAAcD,IAHvC,SAKE,cAAC,GAAD,CAAO1B,gBAAiBA,MAE1B,cAAC,IAAD,CACEgC,aAAc/R,GAAOgS,QACrBC,UAAWN,EACXO,gBAAiB,kBAAMnC,GAAiB4B,IAH1C,SAKE,cAAC,GAAD,CAAU5B,gBAAiBA,SAIhChD,GACC,eAAC,IAAD,CACEoF,YAAa,CAAEtS,gBAAiB,SAChCmG,eAAgB,CAAEoM,OAAQ,IAC1BC,OAAQzJ,EACR0J,KAAM,CAAE1N,KAAM,OAAQjF,MAAO,QAC7B4S,SAAU,CAAE3N,KAAM,QAASjF,MAAO,QAClC6S,OAAQ,kBAAM3J,GAAQ,IACtB4J,QAAS,kBAAM5J,GAAQ,IAPzB,UASE,cAAC,IAAU6J,OAAX,CACEnT,MAAO,CAAE6S,OAAQ,IACjBD,YAAa,CAAEtS,gBAAiB,SAChCyS,KAAM,CAAE1N,KAAM,MAAOjF,MAAO,QAC5BO,MAAM,qBACNyS,WAAY,CAAEhN,SAAU,WAAYyM,OAAQ,IAC5ChS,QAAS,WACPyI,GAAQ,MAGZ,cAAC,IAAU6J,OAAX,CACEnT,MAAO,CAAE6S,OAAQ,IACjBD,YAAa,CAAEtS,gBAAiB,SAChCyS,KAAM,CAAE1N,KAAM,OAAQjF,MAAO,QAC7BO,MAAM,wBACNyS,WAAY,CAAEhN,SAAU,WAAYyM,OAAQ,IAC5ChS,QAAS,WACPyI,GAAQ,GACRiI,GAAY,SAKnBc,GACC,cAAC,GAAD,CAAYhJ,KAAMgJ,EAAU/I,QAASiI,EAArC,SACE,cAAC,GAAD,CAAaA,YAAaA,SAOpC,IAAM9Q,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTyG,QAAS,OACThG,KAAM,EACNkG,WAAY,IAEdiL,MAAO,CACLhK,iBAAkB,GAClB7G,UAAW,IAEb8Q,aAAc,CACZpN,UAAW,SACX5D,SAAU,GACVoE,eAAgB,IAElB8M,QAAS,CACPtM,YAAa,EACbF,aAAc,GACduB,MAAO,MACPlH,gBAAiB,iB,qkBCpHrB,IAAM+S,GAAYC,cAqHlB,IAAM7S,GAASQ,IAAWC,OAAO,CAC/BqS,OAAQ,CACN/K,YAAa,UACbC,aAAc,CACZjB,MAAO,EACPN,OAAQ,IAEVwB,cAAe,IACfC,aAAc,IACdrB,UAAW,KAOf,SAASkM,GAAW9T,GAIlB,OAAO,cAACwF,EAAA,EAAD,IAAaE,KAAM,GAAIpF,MAAO,CAAE6L,cAAe,IAASnM,IAGlD+T,OA1If,WACE,IAAMhE,EAAOC,cACPtM,EAAKC,cACHmK,EAAuCS,YAAYH,IAAnDN,KACF+B,EAAWC,cAEjB,EAA8BkE,YAAe,GAA7C,WAAOC,EAAP,KAAgBC,EAAhB,KAEAF,aAAgB,WACdG,YAAmBpE,GAAM,SAACjC,GAEtB+B,EADE/B,EACOJ,GAAUI,GAEVG,WAGZ,IAEH,IAAMmG,EAAeJ,eAAkB,0BAAAlQ,EAAAC,OAAA,oDACjC+J,IAAQA,EAAKmC,IADoB,kCAAAnM,EAAA,MAEbuQ,YAAOnQ,YAAIR,EAAI,SAAUoK,EAAKmC,OAFjB,QAE7BqE,EAF6B,QAGvBvI,UACkB,UAAxBuI,EAAQtI,OAAOgC,KACjBkG,GAAW,GAIRA,GAAW,GATiB,sBAU9BA,GAAW,GAVmB,8DAWpC,CAACpG,IAMJ,OAJAkG,aAAgB,WACdI,MACC,CAACA,IAGF,eAACT,GAAUY,UAAX,CACEC,iBAAiB,OACjBC,cAAe,CACbC,sBAAuB,OACvBC,4BAA6B,OAC7BC,gBAAiB,CACfrO,aAAc,IAEhBsO,wBAAyB,OACzBC,iBAAiB,EACjBC,YAAY,IACVrO,SAAU,WACVyM,OAAQ,GACR6B,KAAM,GACNrO,MAAO,GACP/F,gBAAiB,QACjB2F,aAAc,GACdiB,OAAQ,IACLzG,GAAO8S,SAlBhB,UAsBE,cAACF,GAAUsB,OAAX,CACEtP,KAAK,OACLuP,UAAW1F,GACX2F,QAAS,cAAGrU,WAAH,MAAiD,CACxDG,MAAO,OACPmU,WAAY,gBAAG1U,EAAH,EAAGA,MAAH,OAAe,cAACoT,GAAD,CAAYnO,KAAK,SAASjF,MAAOA,KAC5D2U,aAAa,MAGhBpB,GACC,cAACN,GAAUsB,OAAX,CACEtP,KAAK,QACLuP,UAAW5G,GACX6G,QAAS,CACPlU,MAAO,QACPoU,aAAa,EACbD,WAAY,gBAAG1U,EAAH,EAAGA,MAAH,OAAe,cAACoT,GAAD,CAAYnO,KAAK,OAAOjF,MAAOA,QAIhE,cAACiT,GAAUsB,OAAX,CACEtP,KAAK,UACLuP,UAAW3C,GACX4C,QAAS,CACPlU,MAAO,UACPoU,aAAa,EACbD,WAAY,YAAgB,IAChB,EADG1U,EAAY,EAAZA,MACb,OAAIoN,EACkB,QAAhBoC,IAASC,IAAgB,SAACrC,EAAKsC,WAAL,EAAeC,SAAS,QAWlD,cAAC,EAAD,CAAM/P,MAAO,CAAEM,gBAAiB,eAAhC,SACE,cAAC,UAAD,CACE0P,IAAKxC,EAAKsC,SACVtI,MAAO,GACPN,OAAQ,GACRlH,MAAO,CAAEiG,aAAc,QAd3B,cAACgK,EAAA,EAAD,CACEC,OAAQ,CACNF,IAAKxC,EAAKsC,UAEZ9P,MAAO,CAAEiG,aAAc,GAAIuB,MAAO,GAAIN,OAAQ,MAexC,cAACsM,GAAD,CAAYnO,KAAK,OAAOjF,MAAOA,YCtF1C4U,GA5BqC,CAClDC,SAAU,C,OAACC,EAAgB,MAC3BC,OAAQ,CACNC,QAAS,CACPC,KAAM,CACJD,QAAS,CACPE,KAAM,CACJF,QAAS,CACPlG,WAAY,SAGhBqG,QAAS,CACPH,QAAS,CACPnD,cAAe,YAGnBuD,MAAO,CACLJ,QAAS,CACPpH,YAAa,YAKrByH,SAAU,OCpBD,SAASC,GAAT,GAIX,IAHFC,EAGC,EAHDA,YAIA,OACE,cAACC,EAAA,EAAD,CACEZ,QAASa,GACTjW,MAAuB,SAAhB+V,EAAyBG,IAAYC,IAF9C,SAIE,cAACC,GAAD,MASN,IAAMC,GAAQC,cAEd,SAASF,KACP,OACE,eAACC,GAAMhC,UAAP,WACE,cAACgC,GAAMtB,OAAP,CACEtP,KAAK,OACLuP,UAAWnB,GACXoB,QAAS,CAAEE,aAAa,KAE1B,cAACkB,GAAMtB,OAAP,CACEtP,KAAK,WACLuP,UAAWrU,EACXsU,QAAS,CAAElU,MAAO,c,iCCxCpBwV,GAAUC,2BAAgB,CAAE5I,KAAMT,KAClCsJ,GAAa,CAACC,MAQLC,GAPDC,uBACZL,GAJmB,GAMnBM,+BAAoBC,mBAAe,WAAf,EAAmBL,MCD1BM,GAVQ,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,UCajB,GALAC,IAAOC,WAAW,CAAC,oBACnBD,IAAOC,WAAW,CAChB,mGAGuB,IAArBC,eAAU1L,OACA2L,aAAcX,IAIb,SAASY,KACtB,IAAMC,ECrBO,WACb,MAAgDvV,oBAAS,GAAzD,WAAOuV,EAAP,KAA0BC,EAA1B,KAyBA,OAtBA5T,qBAAU,WACR,EAAAL,EAAAC,OAAA,gEAEIiU,MAFJ,WAAAlU,EAAA,MAKUmU,IAAA,OACDzS,IAAY0S,MADX,IAEJ,aAAcC,EAAQ,SAP5B,sDAWIC,QAAQC,KAAR,MAXJ,uBAaIN,GAAmB,GACnBC,MAdJ,mFAmBC,IAEIF,EDLmBQ,GACpBrC,EAAcxW,IAEpB,OAAKqY,EAID,cAAC,IAAD,UACE,eAAC,IAAD,CAAejB,MAAOA,GAAtB,UACE,cAACb,GAAD,CAAYC,YAAaA,IACzB,cAACsC,EAAA,EAAD,SANC,O,0DE9BXC,EAAOC,QAAU,IAA0B,iC","file":"static/js/app.bf7518d6.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = \"#2f95dc\";\nconst tintColorDark = \"#fff\";\n\nexport default {\n  light: {\n    text: \"#fff\",\n    background: \"#17567B\",\n    // tint: tintColorLight,\n    // tabIconDefault: \"#ccc\",\n    // tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: \"#fff\",\n    background: \"#17567B\",\n    // tint: tintColorDark,\n    // tabIconDefault: \"#ccc\",\n    // tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport { Text, View } from \"../components/Themed\";\nimport { RootStackScreenProps } from \"../types\";\n\nexport default function NotFoundScreen({\n  navigation,\n}: RootStackScreenProps<\"NotFound\">) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>404 - NOT FOUND</Text>\n      <TouchableOpacity\n        onPress={() => navigation.replace(\"Root\")}\n        style={styles.link}\n      >\n        <Text style={styles.linkText}>Lost? Go back home!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#17567B\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  title: {\n    color: \"white\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 15,\n    color: \"white\",\n  },\n});\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport React, { Dispatch, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Pressable,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { ButtonGroup } from \"react-native-elements\";\r\n\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nconst StatusList = [\r\n  \"En attente\",\r\n  \"Réparé\",\r\n  \"Devis\",\r\n  \"Retour au client\",\r\n  \"Attente de pièces\",\r\n];\r\n\r\nexport default function AdminItemDetails({\r\n  item,\r\n  setItem,\r\n  openAdminItemDetails,\r\n  setOpenAdminItemDetails,\r\n}: {\r\n  item: IItem;\r\n  setItem: Dispatch<React.SetStateAction<IItem | undefined>>;\r\n  openAdminItemDetails: boolean;\r\n  setOpenAdminItemDetails: Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const theme = useColorScheme();\r\n  const [success, setSuccesss] = useState(\"\");\r\n  const [statusIdx, setStatusIdx] = useState(\r\n    StatusList.findIndex((e) => e === item.status)\r\n  );\r\n  const [phoneNumber, setPhoneNumber] = useState(\r\n    item.clientPhoneNumber ? item.clientPhoneNumber : \"\"\r\n  );\r\n  const [model, setModel] = useState(item.model ? item.model : \"\");\r\n  const [serialNumber, setSerialNumber] = useState(\r\n    item.serialNumber ? item.serialNumber : \"\"\r\n  );\r\n  const [prestation, setPrestation] = useState(\r\n    item.prestation ? item.prestation : 0\r\n  );\r\n  const [diagnostic, setDiagnostic] = useState(\r\n    item.diagnostic ? item.diagnostic : \"\"\r\n  );\r\n  const db = getFirestore();\r\n\r\n  const updateStatus = useCallback(async () => {\r\n    if (statusIdx && item.itemId) {\r\n      await updateDoc(doc(db, \"items\", item.itemId), {\r\n        status: StatusList[statusIdx],\r\n      });\r\n    }\r\n  }, [statusIdx]);\r\n\r\n  useEffect(() => {\r\n    updateStatus();\r\n  }, [updateStatus]);\r\n\r\n  const updateHandler = async (key: string, value: string | number) => {\r\n    if (key && item.itemId) {\r\n      let updatedValue: any = {};\r\n      await updateDoc(\r\n        doc(db, \"items\", item.itemId),\r\n        Object.defineProperty(updatedValue, key, {\r\n          value: value,\r\n          configurable: true,\r\n          writable: true,\r\n          enumerable: true,\r\n        })\r\n      );\r\n      setSuccesss(key);\r\n      setTimeout(() => {\r\n        setSuccesss(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={openAdminItemDetails}\r\n        onRequestClose={() => {\r\n          setOpenAdminItemDetails(!openAdminItemDetails);\r\n          setItem(undefined);\r\n        }}\r\n      >\r\n        <ScrollView>\r\n          <View style={styles.centeredView}>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setOpenAdminItemDetails(!openAdminItemDetails);\r\n                setItem(undefined);\r\n              }}\r\n            >\r\n              <FontAwesome\r\n                style={{\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                size={25}\r\n                name=\"close\"\r\n              />\r\n            </Pressable>\r\n            <View style={styles.modalView}>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>Numéro de bon:</Text>\r\n                <Text style={{ fontSize: 45, fontWeight: \"bold\" }}>\r\n                  {item.itemId}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>Nom du client:</Text>\r\n                <Text style={{ fontSize: 30, fontWeight: \"600\" }}>\r\n                  {item.clientName}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>\r\n                  Date d'entrée: {item.createdAt}\r\n                </Text>\r\n                <View>\r\n                  <Text style={styles.modalText}>Numéro de téléphone:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={phoneNumber}\r\n                      onChangeText={(e) => setPhoneNumber(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: \"#001\",\r\n                        color: \"#fff\",\r\n                        borderColor: \"#fff\",\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"phoneNumber\", phoneNumber)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"phoneNumber\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <View>\r\n                  <Text style={styles.modalText}>Modèle:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={model}\r\n                      onChangeText={(e) => setModel(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: \"#001\",\r\n                        color: \"#fff\",\r\n                        borderColor: \"#fff\",\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"model\", model)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"model\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Numéro de série:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={serialNumber}\r\n                      onChangeText={(e) => setSerialNumber(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: \"#001\",\r\n                        color: \"#fff\",\r\n                        borderColor: \"#fff\",\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() =>\r\n                        updateHandler(\"serialNumber\", serialNumber)\r\n                      }\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"serialNumber\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Etat:</Text>\r\n                  <ButtonGroup\r\n                    buttons={[\r\n                      \"En attente\",\r\n                      \"Réparé\",\r\n                      \"Devis\",\r\n                      \"Retour au client\",\r\n                      \"Attente de pièces\",\r\n                    ]}\r\n                    selectedIndex={statusIdx}\r\n                    onPress={(value) => {\r\n                      setStatusIdx(value);\r\n                    }}\r\n                    containerStyle={{ margin: 0 }}\r\n                    selectedButtonStyle={[\r\n                      statusIdx === 0 && { backgroundColor: \"red\" },\r\n                      statusIdx === 1 && { backgroundColor: \"green\" },\r\n                      statusIdx === 2 && { backgroundColor: \"blue\" },\r\n                      statusIdx === 3 && { backgroundColor: \"red\" },\r\n                      statusIdx === 4 && { backgroundColor: \"orange\" },\r\n                    ]}\r\n                    selectedTextStyle={{ color: \"white\" }}\r\n                  />\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Prestation:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={prestation.toString()}\r\n                      onChangeText={(e) =>\r\n                        setPrestation(isNaN(parseFloat(e)) ? 0 : parseFloat(e))\r\n                      }\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: \"#001\",\r\n                        color: \"#fff\",\r\n                        borderColor: \"#fff\",\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"prestation\", prestation)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"prestation\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Diagnostique</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={diagnostic}\r\n                      onChangeText={(e) => setDiagnostic(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: \"#001\",\r\n                        color: \"#fff\",\r\n                        borderColor: \"#fff\",\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"diagnostic\", diagnostic)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"send\" size={25} color=\"green\" />\r\n                    </Pressable>\r\n                    {success === \"diagnostic\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              {item.clientNote && (\r\n                <View style={styles.modalBlock}>\r\n                  <Text style={styles.modalText}>Note laissée:</Text>\r\n                  <Text style={{ fontSize: 15, fontStyle: \"italic\" }}>\r\n                    {item.clientNote}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    paddingTop: 20,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    top: 5,\r\n    right: 10,\r\n    borderRadius: 50,\r\n    padding: 10,\r\n    elevation: 9,\r\n    backgroundColor: \"red\",\r\n    zIndex: 90,\r\n  },\r\n  modalView: {\r\n    width: \"100%\",\r\n  },\r\n  modalText: {\r\n    fontSize: 15,\r\n  },\r\n  modalBlock: {\r\n    margin: 30,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  Pressable,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport ItemDetails from \"./ItemDetails\";\r\nimport { Text, View } from \"../Themed\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nconst ItemsList = ({\r\n  items,\r\n  openList,\r\n  setOpenList,\r\n}: {\r\n  items: IItem[];\r\n  openList: boolean;\r\n  setOpenList: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const [item, setItem] = useState<IItem>();\r\n  const [openAdminItemDetails, setOpenAdminItemDetails] = useState(false);\r\n\r\n  const showItemDetails = (item: IItem) => {\r\n    setOpenAdminItemDetails(true);\r\n    setItem(item);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.listView}>\r\n      <View style={styles.buttoncontainer}>\r\n        <Pressable style={styles.button} onPress={() => setOpenList(!openList)}>\r\n          <FontAwesome\r\n            style={{\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n            }}\r\n            size={20}\r\n            name=\"close\"\r\n          />\r\n        </Pressable>\r\n      </View>\r\n      <View style={{ width: \"100%\", display: \"flex\" }}>\r\n        {items.map((item: IItem) => (\r\n          <TouchableOpacity\r\n            key={item.itemId}\r\n            onPress={() => showItemDetails(item)}\r\n          >\r\n            <View\r\n              style={{\r\n                borderRadius: 15,\r\n                width: Dimensions.get(\"window\").width - 10,\r\n                marginHorizontal: \"auto\",\r\n                marginVertical: 5,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 5,\r\n                shadowColor: \"#001\",\r\n                shadowOffset: { width: 0, height: 1 },\r\n                shadowOpacity: 0.4,\r\n                shadowRadius: 40,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <Text>{item.itemId}</Text>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  flex: 6,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    paddingVertical: 5,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\r\n                      {item.clientName}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text>{item.model}</Text>\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    borderTopWidth: 1,\r\n                    flex: 1,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    paddingVertical: 5,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontStyle: \"italic\" }}>\r\n                      {item.clientPhoneNumber}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={[\r\n                        {\r\n                          color: \"white\",\r\n                          fontWeight: \"bold\",\r\n                          paddingHorizontal: 3,\r\n                        },\r\n                        item.status === \"En attente\" && {\r\n                          backgroundColor: \"red\",\r\n                        },\r\n                        item.status === \"Réparé\" && {\r\n                          backgroundColor: \"green\",\r\n                        },\r\n                        item.status === \"Devis\" && {\r\n                          backgroundColor: \"blue\",\r\n                        },\r\n                        item.status === \"Retour au client\" && {\r\n                          backgroundColor: \"red\",\r\n                        },\r\n                        item.status === \"Attente de pièces\" && {\r\n                          backgroundColor: \"orange\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      {item.status}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      {openAdminItemDetails && item && (\r\n        <ItemDetails\r\n          item={item}\r\n          setItem={setItem}\r\n          openAdminItemDetails={openAdminItemDetails}\r\n          setOpenAdminItemDetails={setOpenAdminItemDetails}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  listView: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    paddingTop: 30,\r\n    paddingBottom: 10,\r\n  },\r\n  buttoncontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 40,\r\n    width: 40,\r\n    marginVertical: 10,\r\n    borderRadius: 50,\r\n    padding: 10,\r\n    elevation: 10,\r\n    backgroundColor: \"red\",\r\n  },\r\n  textDesc: {\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nexport default ItemsList;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../Themed\";\r\n\r\nconst BiyouButton = ({\r\n  title,\r\n  clickHandler,\r\n  iconName,\r\n  iconPosition,\r\n}: {\r\n  title: string;\r\n  clickHandler: any;\r\n  iconName?: string;\r\n  iconPosition?: \"before\" | \"after\";\r\n}) => {\r\n  const theme = useColorScheme();\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.button} onPress={clickHandler}>\r\n        {iconName && iconPosition === \"before\" && (\r\n          <FontAwesome\r\n            size={20}\r\n            name={iconName as any}\r\n            color={theme === \"light\" ? \"#001\" : \"white\"}\r\n          />\r\n        )}\r\n        <Text\r\n          style={{\r\n            color: \"white\",\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            padding: 10,\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        {iconName && iconPosition === \"after\" && (\r\n          <FontAwesome size={20} name={iconName as any} color=\"white\" />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"transparent\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginVertical: 4,\r\n    marginHorizontal: \"auto\",\r\n    minWidth: \"50%\",\r\n    backgroundColor: \"#000\",\r\n    borderColor: \"#000\",\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 15,\r\n  },\r\n});\r\n\r\nexport default BiyouButton;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\nimport { Dimensions, Modal, Pressable, ScrollView } from \"react-native\";\r\nimport { View } from \"../Themed\";\r\n\r\nconst BiyouModal = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n}: {\r\n  children: React.ReactNode;\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        paddingTop: 16,\r\n      }}\r\n    >\r\n      <Modal\r\n        style={{ height: Dimensions.get(\"window\").height }}\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={open}\r\n        onRequestClose={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <ScrollView>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          >\r\n            <Pressable\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 5,\r\n                right: 10,\r\n                borderRadius: 50,\r\n                padding: 10,\r\n                elevation: 10,\r\n                zIndex: 50,\r\n                backgroundColor: \"red\",\r\n              }}\r\n              onPress={() => setOpen(!open)}\r\n            >\r\n              <FontAwesome\r\n                style={{\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                size={25}\r\n                name=\"close\"\r\n              />\r\n            </Pressable>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {children}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BiyouModal;\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput } from \"react-native\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { View } from \"../Themed\";\r\n\r\nconst BiyouTextInput = ({\r\n  placeholder,\r\n  value,\r\n  setValue,\r\n  condition,\r\n}: {\r\n  placeholder: string;\r\n  value?: string;\r\n  setValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  condition?: boolean;\r\n}) => {\r\n  const theme = useColorScheme();\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={{\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          backgroundColor: \"#001\",\r\n          color: \"#fff\",\r\n          ...(condition\r\n            ? {\r\n                borderColor: \"#dd1111\",\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: \"#fff\",\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n        placeholder={placeholder}\r\n        placeholderTextColor={\"#777\"}\r\n        value={value}\r\n        onChangeText={(e) => setValue && setValue(e)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"transparent\",\r\n    marginHorizontal: 15,\r\n    marginVertical: 4,\r\n  },\r\n});\r\n\r\nexport default BiyouTextInput;\r\n","export interface IItem {\r\n  clientName?: string;\r\n  clientPhoneNumber?: string;\r\n  itemId?: string;\r\n  model?: string;\r\n  serialNumber?: string;\r\n  status:\r\n    | \"En attente\"\r\n    | \"Réparé\"\r\n    | \"Devis\"\r\n    | \"Retour au client\"\r\n    | \"Attente de pièces\";\r\n  prestation?: number;\r\n  diagnostic?: string;\r\n  createdAt?: string;\r\n  modifiedAt?: string;\r\n  clientNote?: string;\r\n}\r\n\r\nexport const getMonthByLetter = () => {\r\n  let letter = \"\";\r\n  const month = new Date().getMonth();\r\n  switch (month) {\r\n    case 0:\r\n      letter = \"A\";\r\n      break;\r\n    case 1:\r\n      letter = \"B\";\r\n      break;\r\n    case 2:\r\n      letter = \"C\";\r\n      break;\r\n    case 3:\r\n      letter = \"D\";\r\n      break;\r\n    case 4:\r\n      letter = \"E\";\r\n      break;\r\n    case 5:\r\n      letter = \"F\";\r\n      break;\r\n    case 6:\r\n      letter = \"G\";\r\n      break;\r\n    case 7:\r\n      letter = \"H\";\r\n      break;\r\n    case 8:\r\n      letter = \"I\";\r\n      break;\r\n    case 9:\r\n      letter = \"J\";\r\n      break;\r\n    case 10:\r\n      letter = \"K\";\r\n      break;\r\n    case 11:\r\n      letter = \"L\";\r\n      break;\r\n    default:\r\n      letter = \"\";\r\n  }\r\n  return letter;\r\n};\r\n\r\nexport const createNewId = (id: string) => {\r\n  const id_year_month = id.substring(0, 3);\r\n  let id_number = parseInt(id.substring(3));\r\n  let id_number_string = \"\";\r\n  let new_id = \"\";\r\n  const current_year_month = \"22\" + getMonthByLetter();\r\n  if (id_year_month === current_year_month) {\r\n    id_number++;\r\n    if (id_number >= 100) {\r\n      id_number_string = id_number.toString();\r\n    } else if (100 > id_number && id_number >= 10) {\r\n      id_number_string = \"0\".concat(id_number.toString());\r\n    } else if (10 > id_number) {\r\n      id_number_string = \"00\".concat(id_number.toString());\r\n    }\r\n    new_id = id_year_month + id_number_string;\r\n  } else {\r\n    new_id = current_year_month + \"001\";\r\n  }\r\n  return new_id;\r\n};\r\n\r\nexport const localISODate = () => {\r\n  let tzoffset = new Date().getTimezoneOffset() * 60000;\r\n  let local = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\r\n  let date = local.substring(0, 10) + \" \" + local.substring(11, 16);\r\n  return date;\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { doc, getFirestore, onSnapshot, setDoc } from \"firebase/firestore\";\r\n\r\nimport { Text } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport BiyouModal from \"../elements/Modal\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport { createNewId, localISODate } from \"../../utils/method\";\r\n\r\nexport default function AddItem({\r\n  openAddModal,\r\n  setOpenAddModal,\r\n}: {\r\n  openAddModal: boolean;\r\n  setOpenAddModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const db = getFirestore();\r\n\r\n  const getLastId = useCallback(async () => {\r\n    onSnapshot(doc(db, \"currentId\", \"currentId\"), (doc) => {\r\n      if (doc.exists()) {\r\n        setId(createNewId(doc.data().id));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLastId();\r\n  }, [getLastId]);\r\n\r\n  const addHandler = async () => {\r\n    if (id && name && phoneNumber && model) {\r\n      await setDoc(doc(db, \"items\", id), {\r\n        clientName: name,\r\n        clientPhoneNumber: phoneNumber,\r\n        itemId: id,\r\n        model,\r\n        status: \"En attente\",\r\n        createdAt: localISODate(),\r\n      });\r\n      await setDoc(doc(db, \"currentId\", \"currentId\"), { id });\r\n      setOpenAddModal(false);\r\n      setName(\"\");\r\n      setPhoneNumber(\"\");\r\n      setModel(\"\");\r\n    } else if (!id) {\r\n      setError(\"Erreur avec le numéro de bon\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      setError(\"Champs obligatoire!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openAddModal} setOpen={setOpenAddModal}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <Text style={styles.modalText}>Ajouter: {id}</Text>\r\n      <BiyouTextInput\r\n        placeholder=\"nom du client\"\r\n        value={name}\r\n        setValue={setName}\r\n        condition={!name}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"numéro de téléphone du client\"\r\n        value={phoneNumber}\r\n        setValue={setPhoneNumber}\r\n        condition={!phoneNumber}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"modèle du produit\"\r\n        value={model}\r\n        setValue={setModel}\r\n        condition={!model}\r\n      />\r\n      <BiyouButton title=\"Ajouter\" clickHandler={addHandler} />\r\n    </BiyouModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    backgroundColor: \"#dd1111\",\r\n    color: \"white\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  getFirestore,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nimport { Text } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport BiyouModal from \"../elements/Modal\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\n\r\nconst SearchModal = ({\r\n  setItems,\r\n  setOpenList,\r\n  openSearchModal,\r\n  setOpenSearchModal,\r\n}: {\r\n  setItems: any;\r\n  setOpenList: any;\r\n  openSearchModal: boolean;\r\n  setOpenSearchModal: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const db = getFirestore();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [itemId, setItemId] = useState(\"\");\r\n  const [clientName, setClientName] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const searchHandler = async () => {\r\n    const queryConstraints: any[] = [];\r\n    if (itemId) {\r\n      queryConstraints.push(where(\"itemId\", \"==\", itemId));\r\n    }\r\n    if (clientName) {\r\n      queryConstraints.push(where(\"clientName\", \"==\", clientName));\r\n    }\r\n    if (model) {\r\n      queryConstraints.push(where(\"model\", \"==\", model));\r\n    }\r\n    if (serialNumber) {\r\n      queryConstraints.push(where(\"serialNumber\", \"==\", serialNumber));\r\n    }\r\n    if (status) {\r\n      queryConstraints.push(where(\"status\", \"==\", status));\r\n    }\r\n\r\n    const results: any[] = [];\r\n\r\n    const querySnapshot = await getDocs(\r\n      query(collection(db, \"items\"), ...queryConstraints)\r\n    );\r\n    if (querySnapshot.empty) {\r\n      setError(\"Aucun résultat!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      querySnapshot.forEach((doc) => {\r\n        results.push(doc.data());\r\n      });\r\n      setOpenSearchModal(false);\r\n      setOpenList(true);\r\n      setItems(results);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openSearchModal} setOpen={setOpenSearchModal}>\r\n      {error.length > 0 && <Text style={styles.error}>{error}</Text>}\r\n      <Text style={styles.modalText}>\r\n        Séléctionnez les paramètres de votre requête\r\n      </Text>\r\n      <BiyouTextInput\r\n        placeholder=\"Numéro de bon\"\r\n        value={itemId}\r\n        setValue={setItemId}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Nom du client\"\r\n        value={clientName}\r\n        setValue={setClientName}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Modèle du produit\"\r\n        value={model}\r\n        setValue={setModel}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Numéro de série\"\r\n        value={serialNumber}\r\n        setValue={setSerialNumber}\r\n      />\r\n      <BiyouTextInput placeholder=\"Etat\" value={status} setValue={setStatus} />\r\n      <BiyouButton\r\n        title=\"Chercher\"\r\n        clickHandler={searchHandler}\r\n        iconName=\"search\"\r\n        iconPosition=\"before\"\r\n      />\r\n    </BiyouModal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    backgroundColor: \"#dd1111\",\r\n    color: \"white\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default SearchModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../utils/method\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport interface IUser {\r\n  uid?: string;\r\n  email?: string;\r\n  emailVerified?: boolean;\r\n  displayName?: string;\r\n  isAnonymous?: boolean;\r\n  photoURL?: string;\r\n  createdAt?: string;\r\n  lastLoginAt?: string;\r\n  apiKey?: string;\r\n  appName?: string;\r\n  role?: string;\r\n  items?: IItem[];\r\n}\r\n\r\nconst initialState: { status: string; isAuthenticated: boolean; user?: IUser } =\r\n  {\r\n    status: \"idle\",\r\n    isAuthenticated: false,\r\n  };\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    fetchUser: (state, action?) => {\r\n      if (action.payload) {\r\n        state.status = \"complete\";\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      } else {\r\n        state.status = \"complete\";\r\n        state.isAuthenticated = false;\r\n        state.user = undefined;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      state.status = \"complete\";\r\n      state.isAuthenticated = true;\r\n      state.user = {\r\n        ...state.user,\r\n        role: action.payload.role,\r\n        items: action.payload.items,\r\n      };\r\n    },\r\n    signOutUser: (state) => {\r\n      state.status = \"complete\";\r\n      state.isAuthenticated = false;\r\n      state.user = undefined;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // builder\r\n    //   .addCase(fetchUser.pending, (state, action) => {\r\n    //     state.status = \"loading\";\r\n    //   })\r\n    //   .addCase(fetchUser.fulfilled, (state, action) => {\r\n    //     state.status = \"complete\";\r\n    //     state.currentUser = action.payload;\r\n    //   })\r\n    //   .addCase(fetchUser.rejected, (state, action) => {\r\n    //     state.status = \"failed\";\r\n    //     state.error = action.error;\r\n    //   })\r\n  },\r\n});\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const { fetchUser, updateUser, signOutUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  onSnapshot,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Text, View } from \"../components/Themed\";\r\nimport ItemsList from \"../components/admin/ItemsList\";\r\nimport AddItem from \"../components/admin/Add\";\r\nimport SearchModal from \"../components/admin/Search\";\r\nimport { IUser, selectUser } from \"../redux/userSlice\";\r\nimport { IItem } from \"../utils/method\";\r\n\r\nexport default function AdminScreen() {\r\n  const { user }: { user?: IUser | undefined } = useSelector(selectUser);\r\n  const db = getFirestore();\r\n\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n  const [openSearchModal, setOpenSearchModal] = useState(false);\r\n  const [openList, setOpenList] = useState(false);\r\n  const [items, setItems] = useState<IItem[]>();\r\n\r\n  const fetchItems = async () => {\r\n    setItems([]);\r\n    onSnapshot(query(collection(db, \"items\")), (querySnapshot) => {\r\n      let newlist: any[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        newlist.unshift(doc.data());\r\n      });\r\n      setOpenList(true);\r\n      setItems(newlist);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Text style={styles.title}>Bienvenu admin {user?.displayName}</Text>\r\n          <View style={styles.actions}>\r\n            {/* Ajouter */}\r\n            <TouchableOpacity\r\n              onPress={() => setOpenAddModal(!openAddModal)}\r\n              style={[styles.actioncard, styles.actioncardadd]}\r\n            >\r\n              <FontAwesome size={25} color=\"white\" name=\"plus-circle\" />\r\n              <Text style={{ color: \"white\" }}>Ajouter</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Chercher */}\r\n            <TouchableOpacity\r\n              onPress={() => setOpenSearchModal(!openSearchModal)}\r\n              style={[styles.actioncard, styles.actioncardsearch]}\r\n            >\r\n              <FontAwesome size={25} color=\"white\" name=\"search\" />\r\n              <Text style={{ color: \"white\" }}>Chercher</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Liste */}\r\n            <TouchableOpacity\r\n              onPress={fetchItems}\r\n              style={[styles.actioncard, styles.actioncardlist]}\r\n            >\r\n              <FontAwesome size={25} color=\"white\" name=\"tasks\" />\r\n              <Text style={{ color: \"white\" }}>Liste</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: Dimensions.get(\"window\").height - 190 }}>\r\n            {openList && (\r\n              <View style={{ paddingBottom: 75 }}>\r\n                {items ? (\r\n                  <ItemsList\r\n                    items={items}\r\n                    openList={openList}\r\n                    setOpenList={setOpenList}\r\n                  />\r\n                ) : (\r\n                  <Text>Récupération des données...</Text>\r\n                )}\r\n              </View>\r\n            )}\r\n            <SearchModal\r\n              setItems={setItems}\r\n              setOpenList={setOpenList}\r\n              openSearchModal={openSearchModal}\r\n              setOpenSearchModal={setOpenSearchModal}\r\n            />\r\n            <AddItem\r\n              openAddModal={openAddModal}\r\n              setOpenAddModal={setOpenAddModal}\r\n            />\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    paddingBottom: 50,\r\n  },\r\n  title: {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    marginVertical: 30,\r\n    marginHorizontal: 20,\r\n  },\r\n  actions: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  actioncard: {\r\n    width: 100,\r\n    height: 100,\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  actioncardadd: {\r\n    borderColor: \"#0E131F\",\r\n    backgroundColor: \"#0E131F\",\r\n  },\r\n  actioncardsearch: {\r\n    borderColor: \"#38405F\",\r\n    backgroundColor: \"#38405F\",\r\n  },\r\n  actioncardlist: {\r\n    borderColor: \"#FF0035\",\r\n    backgroundColor: \"#FF0035\",\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState } from \"react\";\r\nimport { Pressable, StyleSheet, TextInput } from \"react-native\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouModal from \"../../components/elements/Modal\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nexport default function ItemDetails({\r\n  item,\r\n  openItemDetails,\r\n  setOpenItemDetails,\r\n}: {\r\n  item: IItem;\r\n  openItemDetails: boolean;\r\n  setOpenItemDetails: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const theme = useColorScheme();\r\n  const [note, setNote] = useState(item.clientNote ? item.clientNote : \"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const db = getFirestore();\r\n\r\n  const submitHandler = async () => {\r\n    if (note && item.itemId) {\r\n      await updateDoc(doc(db, \"items\", item.itemId), {\r\n        clientNote: note,\r\n      });\r\n      setSuccess(\"Successfully submitted your note.\");\r\n      setTimeout(() => {\r\n        setSuccess(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openItemDetails} setOpen={setOpenItemDetails}>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={styles.modalText}>Numéro de bon:</Text>\r\n        <Text style={{ fontSize: 45, fontWeight: \"bold\" }}>{item.itemId}</Text>\r\n      </View>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={{ fontSize: 35, fontWeight: \"700\" }}>\r\n          {item.clientName}\r\n        </Text>\r\n        <Text style={styles.modalText}>\r\n          Numéro de téléphone: {item.clientPhoneNumber}\r\n        </Text>\r\n        <Text style={styles.modalText}>Date d'entrée: {item.createdAt}</Text>\r\n      </View>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={{ fontWeight: \"bold\", fontSize: 22 }}>{item.model}</Text>\r\n        {item.serialNumber && (\r\n          <Text style={styles.modalText}>\r\n            Numéro de série: {item.serialNumber}\r\n          </Text>\r\n        )}\r\n      </View>\r\n      <View style={[styles.modalBlock]}>\r\n        <View\r\n          style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\r\n        >\r\n          <Text style={styles.modalText}>Etat:</Text>\r\n          <Text\r\n            style={[\r\n              styles.modalText,\r\n              {\r\n                backgroundColor: \"red\",\r\n                color: \"white\",\r\n                marginLeft: 5,\r\n                paddingHorizontal: 3,\r\n              },\r\n            ]}\r\n          >\r\n            {item.status}\r\n          </Text>\r\n        </View>\r\n        {item.prestation && (\r\n          <View>\r\n            <Text style={styles.modalText}>\r\n              Prestation: {item.prestation} DZD\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n\r\n      {item.diagnostic && (\r\n        <View style={styles.modalBlock}>\r\n          <Text style={styles.modalText}>Diagnostique:</Text>\r\n          <Text style={styles.modalText}>{item.diagnostic}</Text>\r\n        </View>\r\n      )}\r\n      <View style={styles.modalBlock}>\r\n        <Text style={styles.modalText}>\r\n          Vous pouvez laisser une note au réparateur\r\n        </Text>\r\n        <View style={{ marginVertical: 5 }}>\r\n          <TextInput\r\n            value={note}\r\n            onChangeText={(e) => setNote(e)}\r\n            placeholder=\"\"\r\n            style={{\r\n              paddingVertical: 10,\r\n              paddingLeft: 10,\r\n              paddingRight: 40,\r\n              borderRadius: 15,\r\n              color: theme === \"light\" ? \"#001\" : \"white\",\r\n              borderColor: theme === \"light\" ? \"#001\" : \"white\",\r\n              borderWidth: 1,\r\n            }}\r\n          />\r\n          <Pressable\r\n            onPress={submitHandler}\r\n            style={{ position: \"absolute\", right: 10, top: 8 }}\r\n          >\r\n            <FontAwesome name=\"send\" size={25} color=\"green\" />\r\n          </Pressable>\r\n          {success.length > 0 && (\r\n            <FontAwesome\r\n              name=\"check\"\r\n              size={25}\r\n              color=\"green\"\r\n              style={{ position: \"absolute\", right: 40, top: 8 }}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </BiyouModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalText: {\r\n    fontSize: 15,\r\n  },\r\n  modalBlock: {\r\n    margin: 30,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport { Text, View } from \"../components/Themed\";\nimport BiyouTextInput from \"../components/elements/TextInput\";\nimport ItemDetails from \"../components/home/ItemDetails\";\n\nexport default function HomeScreen({ navigation }: any) {\n  const theme = useColorScheme();\n  const db = getFirestore();\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [openItemDetails, setOpenItemDetails] = useState(false);\n  const [item, setItem] = useState<any>();\n\n  const submitHandler = async () => {\n    if (name && id) {\n      onSnapshot(doc(db, \"items\", id.toUpperCase()), (doc) => {\n        if (doc.exists()) {\n          if (doc.data().clientName.toLowerCase() === name.toLowerCase()) {\n            setItem(doc.data());\n            setOpenItemDetails(true);\n            setError(\"\");\n            setId(\"\");\n            setName(\"\");\n          } else {\n            setError(\"Veuillez entrer le nom affiché sur le bon!\");\n            setTimeout(() => {\n              setError(\"\");\n            }, 3000);\n          }\n        } else {\n          setError(\"Ce bon n'existe pas!\");\n          setTimeout(() => {\n            setError(\"\");\n          }, 3000);\n        }\n      });\n    } else {\n      setError(\"Champs obligatoire!\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Biyou Repair</Text>\n      <View style={styles.searchBar}>\n        {error.length > 1 && <Text style={styles.error}>{error}</Text>}\n        <BiyouTextInput\n          placeholder=\"numéro de bon - exemple: 22A008\"\n          value={id}\n          setValue={setId}\n          condition={error.length > 0 && !id}\n        />\n        <BiyouTextInput\n          placeholder=\"nom sur le bon - exemple: Mohamed Mohamed\"\n          value={name}\n          setValue={setName}\n          condition={error.length > 0 && !name}\n        />\n        <View style={styles.buttoncontainer}>\n          <View\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginHorizontal: \"auto\",\n              marginVertical: 4,\n              height: 50,\n              width: 50,\n              borderRadius: 50,\n              backgroundColor: theme === \"light\" ? \"#001\" : \"white\",\n            }}\n          >\n            <TouchableOpacity onPress={submitHandler}>\n              <FontAwesome\n                size={30}\n                name=\"search\"\n                color={theme === \"light\" ? \"white\" : \"#001\"}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n      {openItemDetails && item && (\n        <ItemDetails\n          item={item}\n          openItemDetails={openItemDetails}\n          setOpenItemDetails={setOpenItemDetails}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    marginVertical: 30,\n    marginHorizontal: 20,\n  },\n  searchBar: {\n    width: \"100%\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  buttoncontainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  error: {\n    backgroundColor: \"#dd1111\",\n    color: \"white\",\n    paddingHorizontal: 10,\n    paddingVertical: 20,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n","import { useEffect } from \"react\";\r\nimport { Image, Platform } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { SvgUri } from \"react-native-svg\";\r\n\r\nimport { Text, View } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport { selectUser, signOutUser, updateUser } from \"../../redux/userSlice\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nconst Profile = () => {\r\n  const { user } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    if (user && user.uid) {\r\n      onSnapshot(doc(db, \"custom\", user.uid), (doc) => {\r\n        dispatch(updateUser(doc.data()));\r\n      });\r\n    }\r\n  }, []);\r\n  const signOutHandler = async () => {\r\n    signOut(auth).then(() => dispatch(signOutUser()));\r\n  };\r\n  return (\r\n    <>\r\n      {user && (\r\n        <View>\r\n          <View\r\n            style={{\r\n              marginVertical: 50,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\") ? (\r\n              <Image\r\n                source={{\r\n                  uri: user.photoURL,\r\n                }}\r\n                style={{ borderRadius: 50, width: 100, height: 100 }}\r\n              />\r\n            ) : (\r\n              <View style={{ backgroundColor: \"transparent\" }}>\r\n                <SvgUri\r\n                  uri={user.photoURL}\r\n                  width={100}\r\n                  height={100}\r\n                  style={{ borderRadius: 50 }}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <Text style={{ fontSize: 20 }}>{user.displayName}</Text>\r\n          </View>\r\n          <View style={{ margin: 30 }}>\r\n            <Text\r\n              style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n              {user.email}\r\n            </Text>\r\n            {user.role && (\r\n              <Text\r\n                style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n              >\r\n                <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                  Rôle:\r\n                </Text>{\" \"}\r\n                {user.role}\r\n              </Text>\r\n            )}\r\n          </View>\r\n          {user.items && user.items.length > 0 && (\r\n            <View style={{ margin: 30 }}>\r\n              {user.items.map((item: IItem) => (\r\n                <View\r\n                  key={item.itemId}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>{item.itemId}</Text>\r\n                  <Text>{item.clientName}</Text>\r\n                  <Text>{item.model}</Text>\r\n                  <Text>{item.status}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          )}\r\n          <BiyouButton\r\n            title=\"Se déconnecter\"\r\n            clickHandler={signOutHandler}\r\n            iconName=\"sign-out\"\r\n            iconPosition=\"after\"\r\n          />\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouButton from \"../../components/elements/Button\";\r\nimport BiyouTextInput from \"../../components/elements/TextInput\";\r\nimport { fetchUser, selectUser } from \"../../redux/userSlice\";\r\n\r\nconst Login = ({ setRegisterOpen }: any) => {\r\n  const theme = useColorScheme();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { user } = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setRegisterOpen(false);\r\n    } else if (auth.currentUser) {\r\n      dispatch(fetchUser(auth.currentUser));\r\n      setRegisterOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async () => {\r\n    if (email && password) {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then((user) => {\r\n          dispatch(fetchUser(user.user));\r\n          setRegisterOpen(false);\r\n        })\r\n        .catch((error) => {\r\n          setError(\"Impossible de se connecter!\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 3000);\r\n        });\r\n    } else {\r\n      setError(\"Champs obligatoir!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <BiyouTextInput\r\n        placeholder=\"email\"\r\n        value={email}\r\n        setValue={setEmail}\r\n        condition={error.length > 1 && !email}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          marginHorizontal: 15,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          ...(error.length > 1 && !password\r\n            ? {\r\n                borderColor: \"#dd1111\",\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: \"#1b1f23\",\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            flex: 9,\r\n            color: theme === \"light\" ? \"#001\" : \"white\",\r\n          }}\r\n          placeholder=\"mot de passe\"\r\n          secureTextEntry={visible ? false : true}\r\n          onChangeText={(e) => setPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => setVisible(visible ? false : true)}\r\n        >\r\n          {visible ? (\r\n            <FontAwesome\r\n              style={{ color: theme === \"light\" ? \"#001\" : \"white\" }}\r\n              size={15}\r\n              name={\"eye\"}\r\n            />\r\n          ) : (\r\n            <FontAwesome\r\n              style={{ color: theme === \"light\" ? \"#001\" : \"white\" }}\r\n              size={15}\r\n              name={\"eye-slash\"}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <BiyouButton title=\"S'identifier\" clickHandler={submitHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#211\",\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    padding: 20,\r\n  },\r\n  error: {\r\n    backgroundColor: \"#dd1111\",\r\n    color: \"white\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default Login;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { doc, getFirestore, setDoc } from \"firebase/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouTextInput from \"../../components/elements/TextInput\";\r\nimport BiyouButton from \"../../components/elements/Button\";\r\nimport { fetchUser, selectUser } from \"../../redux/userSlice\";\r\n\r\nconst Register = ({ setRegisterOpen }: any) => {\r\n  const theme = useColorScheme();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const { user } = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setRegisterOpen(false);\r\n    } else if (auth.currentUser) {\r\n      dispatch(fetchUser(auth.currentUser));\r\n      setRegisterOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async () => {\r\n    if (name && email && password) {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then((user) => {\r\n          updateProfile(user.user, {\r\n            displayName: name,\r\n            photoURL: `https://avatars.dicebear.com/api/gridy/${name}.svg`,\r\n          }).then(async () => {\r\n            await setDoc(doc(db, \"custom\", user.user.uid), {\r\n              userId: user.user.uid,\r\n              username: user.user.displayName,\r\n              role: \"basic\",\r\n            });\r\n            dispatch(fetchUser(user.user));\r\n            setRegisterOpen(false);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setError(\"Un problème avec vos entrées!\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 3000);\r\n        });\r\n    } else {\r\n      setError(\"Champs obligatoir!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <BiyouTextInput\r\n        placeholder=\"nom d'utilisateur\"\r\n        value={name}\r\n        setValue={setName}\r\n        condition={error.length > 1 && !name}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"email\"\r\n        value={email}\r\n        setValue={setEmail}\r\n        condition={error.length > 1 && !email}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          marginHorizontal: 15,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          ...(error.length > 1 && !password\r\n            ? {\r\n                borderColor: \"#dd1111\",\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: \"#1b1f23\",\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            flex: 9,\r\n            color: theme === \"light\" ? \"#001\" : \"white\",\r\n          }}\r\n          placeholder=\"mot de passe\"\r\n          secureTextEntry={visible ? false : true}\r\n          onChangeText={(e) => setPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => setVisible(visible ? false : true)}\r\n        >\r\n          {visible ? (\r\n            <FontAwesome\r\n              style={{ color: theme === \"light\" ? \"#001\" : \"white\" }}\r\n              size={15}\r\n              name={\"eye\"}\r\n            />\r\n          ) : (\r\n            <FontAwesome\r\n              style={{ color: theme === \"light\" ? \"#001\" : \"white\" }}\r\n              size={15}\r\n              name={\"eye-slash\"}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <BiyouButton title=\"Créer un compte\" clickHandler={submitHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#211\",\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    padding: 20,\r\n  },\r\n  error: {\r\n    backgroundColor: \"#dd1111\",\r\n    color: \"white\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default Register;\r\n","import { useState } from \"react\";\r\nimport { Image, Platform, Pressable } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteUser,\r\n  getAuth,\r\n  sendEmailVerification,\r\n  sendPasswordResetEmail,\r\n  updateEmail,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { SvgUri } from \"react-native-svg\";\r\n\r\nimport { Text, View } from \"../Themed\";\r\nimport { selectUser, signOutUser } from \"../../redux/userSlice\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nconst EditProfile = ({ setEditOpen }: any) => {\r\n  const { user } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n\r\n  const [resetPasswordSuccess, setResetPasswordSuccess] = useState(\"\");\r\n  const [verifyEmailSuccess, setVerifyEmailSuccess] = useState(\"\");\r\n  const [name, setName] = useState(\r\n    user && user.displayName ? user.displayName : \"\"\r\n  );\r\n  const [email, setEmail] = useState(user && user.email ? user.email : \"\");\r\n\r\n  const resetPassword = async () => {\r\n    if (auth.currentUser && auth.currentUser.email) {\r\n      sendPasswordResetEmail(auth, auth.currentUser.email).then(() => {\r\n        setResetPasswordSuccess(\r\n          \"Email de réinitialisation de mot de passe envoyé avec succès!\"\r\n        );\r\n        setTimeout(() => {\r\n          setResetPasswordSuccess(\"\");\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const verifyEmail = async () => {\r\n    if (auth.currentUser) {\r\n      sendEmailVerification(auth.currentUser).then(() => {\r\n        setVerifyEmailSuccess(\"Un email de vérification vous a été envoyé!\");\r\n        setTimeout(() => {\r\n          setVerifyEmailSuccess(\"\");\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteAccount = async () => {\r\n    if (auth.currentUser) {\r\n      deleteUser(auth.currentUser).then(() => {\r\n        dispatch(signOutUser());\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    if (auth.currentUser) {\r\n      if (name && name !== auth.currentUser.displayName) {\r\n        updateProfile(auth.currentUser, { displayName: name }).then(() =>\r\n          setEditOpen(false)\r\n        );\r\n      }\r\n      if (email && email !== auth.currentUser.email) {\r\n        updateEmail(auth.currentUser, email).then(() => setEditOpen(false));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <View>\r\n          <Pressable\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              //   top: 40,\r\n              right: 10,\r\n              borderRadius: 50,\r\n              padding: 10,\r\n              elevation: 10,\r\n              zIndex: 50,\r\n              backgroundColor: \"green\",\r\n            }}\r\n            onPress={() => {\r\n              submitHandler();\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            <FontAwesome\r\n              style={{\r\n                color: \"white\",\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n              }}\r\n              size={25}\r\n              name=\"check\"\r\n            />\r\n          </Pressable>\r\n          <View\r\n            style={{\r\n              marginVertical: 50,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\") ? (\r\n              <Image\r\n                source={{\r\n                  uri: user.photoURL,\r\n                }}\r\n                style={{ borderRadius: 50, width: 100, height: 100 }}\r\n              />\r\n            ) : (\r\n              <View style={{ backgroundColor: \"transparent\" }}>\r\n                <SvgUri\r\n                  uri={user.photoURL}\r\n                  width={100}\r\n                  height={100}\r\n                  style={{ borderRadius: 50 }}\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Nom:</Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={name}\r\n                setValue={setName}\r\n                placeholder=\"Nom du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={email}\r\n                setValue={setEmail}\r\n                placeholder=\"Addresse email du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n\r\n          {/* email verification */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            {verifyEmailSuccess.length > 0 && (\r\n              <Text style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                {verifyEmailSuccess}\r\n              </Text>\r\n            )}\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Votre addresse email n'est pas vérifée.\r\n            </Text>\r\n            <Pressable onPress={verifyEmail}>\r\n              <Text style={{ color: \"gray\", textDecorationLine: \"underline\" }}>\r\n                Envoyez un email de vérification à {user.email}\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n\r\n          {/* reset password */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            {resetPasswordSuccess.length > 0 && (\r\n              <Text style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                {resetPasswordSuccess}\r\n              </Text>\r\n            )}\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Vous avez oubliez votre mot de passe?\r\n            </Text>\r\n            <Pressable onPress={resetPassword}>\r\n              <Text style={{ color: \"gray\", textDecorationLine: \"underline\" }}>\r\n                Envoyez un email de réinitialisation de mot de passe\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n\r\n          {/* delete account */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Voulez vous supprimer votre compte?\r\n            </Text>\r\n            <Text>\r\n              Cela supprimera tous vos données. Vos données seront\r\n              irrécupérables.\r\n            </Text>\r\n            <Pressable onPress={deleteAccount}>\r\n              <Text\r\n                style={{\r\n                  color: \"red\",\r\n                  fontWeight: \"bold\",\r\n                  textDecorationLine: \"underline\",\r\n                }}\r\n              >\r\n                SUPPRIMER MON COMPTE\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import { useEffect, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SpeedDial, Overlay } from \"react-native-elements\";\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\n\nimport { Text, View } from \"../components/Themed\";\nimport BiyouButton from \"../components/elements/Button\";\nimport Profile from \"../components/account/Profile\";\nimport Login from \"../components/account/Login\";\nimport Register from \"../components/account/Register\";\nimport { selectUser, updateUser } from \"../redux/userSlice\";\nimport BiyouModal from \"../components/elements/Modal\";\nimport EditProfile from \"../components/account/EditProfile\";\n\nexport default function AccountScreen() {\n  const { user } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const db = getFirestore();\n\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [registerOpen, setRegisterOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (user && user.uid) {\n      onSnapshot(doc(db, \"custom\", user.uid), (doc) => {\n        dispatch(updateUser(doc.data()));\n      });\n    }\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {user ? (\n        <Profile />\n      ) : (\n        <View style={styles.block}>\n          <Text style={styles.loginCtaText}>\n            Avoir un compte vous permets de suivre votre produit et recevoir une\n            notification dès qu'il est réparé.\n          </Text>\n          <BiyouButton\n            title=\"S'identifier\"\n            clickHandler={() => setLoginOpen(true)}\n            iconName=\"sign-in\"\n            iconPosition=\"after\"\n          />\n          <BiyouButton\n            title=\"Créer un compte\"\n            clickHandler={() => setRegisterOpen(true)}\n            iconName=\"user-plus\"\n            iconPosition=\"after\"\n          />\n          <Overlay\n            overlayStyle={styles.overlay}\n            isVisible={loginOpen}\n            onBackdropPress={() => setLoginOpen(!loginOpen)}\n          >\n            <Login setRegisterOpen={setRegisterOpen} />\n          </Overlay>\n          <Overlay\n            overlayStyle={styles.overlay}\n            isVisible={registerOpen}\n            onBackdropPress={() => setRegisterOpen(!registerOpen)}\n          >\n            <Register setRegisterOpen={setRegisterOpen} />\n          </Overlay>\n        </View>\n      )}\n      {user && (\n        <SpeedDial\n          buttonStyle={{ backgroundColor: \"black\" }}\n          containerStyle={{ bottom: 80 }}\n          isOpen={open}\n          icon={{ name: \"edit\", color: \"#fff\" }}\n          openIcon={{ name: \"close\", color: \"#fff\" }}\n          onOpen={() => setOpen(true)}\n          onClose={() => setOpen(false)}\n        >\n          <SpeedDial.Action\n            style={{ bottom: 80 }}\n            buttonStyle={{ backgroundColor: \"black\" }}\n            icon={{ name: \"add\", color: \"#fff\" }}\n            title=\"Ajouter un produit\"\n            titleStyle={{ position: \"relative\", bottom: 80 }}\n            onPress={() => {\n              setOpen(false);\n            }}\n          />\n          <SpeedDial.Action\n            style={{ bottom: 80 }}\n            buttonStyle={{ backgroundColor: \"black\" }}\n            icon={{ name: \"edit\", color: \"#fff\" }}\n            title=\"Modifier votre profil\"\n            titleStyle={{ position: \"relative\", bottom: 80 }}\n            onPress={() => {\n              setOpen(false);\n              setEditOpen(true);\n            }}\n          />\n        </SpeedDial>\n      )}\n      {editOpen && (\n        <BiyouModal open={editOpen} setOpen={setEditOpen}>\n          <EditProfile setEditOpen={setEditOpen} />\n        </BiyouModal>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    paddingTop: 20,\n  },\n  block: {\n    marginHorizontal: 20,\n    marginTop: 50,\n  },\n  loginCtaText: {\n    textAlign: \"center\",\n    fontSize: 18,\n    marginVertical: 10,\n  },\n  overlay: {\n    borderWidth: 0,\n    borderRadius: 25,\n    width: \"90%\",\n    backgroundColor: \"transparent\",\n  },\n});\n","import * as React from \"react\";\r\nimport { Image, StyleSheet, Platform } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport AdminScreen from \"../screens/AdminScreen\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport { RootTabParamList, RootTabScreenProps } from \"../types\";\r\nimport { fetchUser, IUser, selectUser, signOutUser } from \"../redux/userSlice\";\r\nimport { SvgUri } from \"react-native-svg\";\r\nimport { View } from \"../components/Themed\";\r\nimport AccountScreen from \"../screens/AccountScreen\";\r\n\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n  const { user }: { user?: IUser | undefined } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isAdmin, setIsAdmin] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        dispatch(fetchUser(user));\r\n      } else {\r\n        dispatch(signOutUser());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const checkIfAdmin = React.useCallback(async () => {\r\n    if (user && user.uid) {\r\n      const docSnap = await getDoc(doc(db, \"custom\", user.uid));\r\n      if (docSnap.exists()) {\r\n        if (docSnap.data().role === \"admin\") {\r\n          setIsAdmin(true);\r\n        } else {\r\n          setIsAdmin(false);\r\n        }\r\n      } else setIsAdmin(false);\r\n    } else setIsAdmin(false);\r\n  }, [user]);\r\n\r\n  React.useEffect(() => {\r\n    checkIfAdmin();\r\n  }, [checkIfAdmin]);\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: \"#001\",\r\n        tabBarActiveBackgroundColor: \"#aaf\",\r\n        tabBarItemStyle: {\r\n          borderRadius: 50,\r\n        },\r\n        tabBarInactiveTintColor: \"#aaf\",\r\n        tabBarShowLabel: false,\r\n        tabBarStyle: {\r\n          position: \"absolute\",\r\n          bottom: 20,\r\n          left: 15,\r\n          right: 15,\r\n          backgroundColor: \"white\",\r\n          borderRadius: 50,\r\n          height: 60,\r\n          ...styles.shadow,\r\n        },\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={({ navigation }: RootTabScreenProps<\"Home\">) => ({\r\n          title: \"Home\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"search\" color={color} />,\r\n          headerShown: false,\r\n        })}\r\n      />\r\n      {isAdmin && (\r\n        <BottomTab.Screen\r\n          name=\"Admin\"\r\n          component={AdminScreen}\r\n          options={{\r\n            title: \"Admin\",\r\n            headerShown: false,\r\n            tabBarIcon: ({ color }) => <TabBarIcon name=\"cogs\" color={color} />,\r\n          }}\r\n        />\r\n      )}\r\n      <BottomTab.Screen\r\n        name=\"Account\"\r\n        component={AccountScreen}\r\n        options={{\r\n          title: \"Account\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color }) => {\r\n            if (user) {\r\n              if (Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\")) {\r\n                return (\r\n                  <Image\r\n                    source={{\r\n                      uri: user.photoURL,\r\n                    }}\r\n                    style={{ borderRadius: 50, width: 35, height: 35 }}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <View style={{ backgroundColor: \"transparent\" }}>\r\n                    <SvgUri\r\n                      uri={user.photoURL}\r\n                      width={35}\r\n                      height={35}\r\n                      style={{ borderRadius: 50 }}\r\n                    />\r\n                  </View>\r\n                );\r\n              }\r\n            } else return <TabBarIcon name=\"user\" color={color} />;\r\n          },\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  shadow: {\r\n    shadowColor: \"#7F5DF0\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.5,\r\n    elevation: 5,\r\n  },\r\n});\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n\r\nexport default BottomTabNavigator;\r\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\n\nimport { RootStackParamList } from \"../types\";\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl(\"/\")],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          Home: {\n            screens: {\n              HomeScreen: \"home\",\n            },\n          },\n          Account: {\n            screens: {\n              AccountScreen: \"account\",\n            },\n          },\n          Admin: {\n            screens: {\n              AdminScreen: \"admin\",\n            },\n          },\n        },\n      },\n      NotFound: \"*\",\n    },\n  },\n};\n\nexport default linking;\n","import {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { ColorSchemeName } from \"react-native\";\n\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport { RootStackParamList } from \"../types\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\n    >\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport userSlice from \"./userSlice\";\r\n\r\nconst initialState = {};\r\nconst reducer = combineReducers({ user: userSlice });\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport default store;\r\n","const FirebaseConfig = {\r\n  apiKey: \"AIzaSyBM5PP4iO6svYbv6ekcB9A7Tx-idsQdlg0\",\r\n  authDomain: \"biyou-repair.firebaseapp.com\",\r\n  projectId: \"biyou-repair\",\r\n  storageBucket: \"biyou-repair.appspot.com\",\r\n  messagingSenderId: \"343143569769\",\r\n  appId: \"1:343143569769:web:168a7dc30ce967e8dd45f8\",\r\n  measurementId: \"G-74LH66PR7V\",\r\n};\r\n\r\nexport default FirebaseConfig;\r\n","import { LogBox } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport FirebaseConfig from \"./firebase.config\";\nimport { initializeApp, getApps } from \"firebase/app\";\n\n// Supress warnings\nLogBox.ignoreLogs([\"Setting a timer\"]);\nLogBox.ignoreLogs([\n  \"AsyncStorage has been extracted from react-native core and will be removed in a future release\",\n]);\n\nif (getApps().length === 0) {\n  const app = initializeApp(FirebaseConfig);\n  // const analytics = getAnalytics(app);\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <ReduxProvider store={store}>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </ReduxProvider>\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}