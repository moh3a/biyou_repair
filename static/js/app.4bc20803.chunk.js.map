{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/NotFoundScreen.tsx","utils/method.ts","components/admin/ItemDetails.tsx","components/admin/ItemsList.tsx","components/elements/Button.tsx","components/elements/Modal.tsx","components/elements/TextInput.tsx","components/admin/Add.tsx","components/admin/Search.tsx","redux/userSlice.ts","screens/AdminScreen.tsx","components/home/ItemDetails.tsx","screens/HomeScreen.tsx","components/account/Profile.tsx","components/account/Login.tsx","components/account/Register.tsx","components/account/EditProfile.tsx","components/account/AddItem.tsx","screens/AccountScreen.tsx","screens/InfoScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","redux/store.ts","firebase.config.ts","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/adaptive-icon.png","assets/images/ring.png"],"names":["useColorScheme","_useColorScheme","light","text","background","dark","black","gray","green","white","yellow","violet","red","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","NotFoundScreen","navigation","useEffect","navigate","styles","container","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","createNewId","id","id_year_month","substring","id_number","parseInt","id_number_string","new_id","current_year_month","letter","Date","getMonth","getMonthByLetter","toString","concat","localISODate","tzoffset","getTimezoneOffset","local","now","toISOString","slice","StatusList","AdminItemDetails","item","setItem","openAdminItemDetails","setOpenAdminItemDetails","useState","success","setSuccesss","finishedAt","finishedCheck","setFinishedCheck","findIndex","e","status","statusIdx","setStatusIdx","clientPhoneNumber","phoneNumber","setPhoneNumber","model","setModel","serialNumber","setSerialNumber","prestation","setPrestation","diagnostic","setDiagnostic","db","getFirestore","updateStatus","useCallback","a","async","itemId","updateDoc","doc","updateFinishedDate","updateHandler","key","value","updatedValue","Object","defineProperty","toLowerCase","configurable","writable","enumerable","setTimeout","Modal","animationType","transparent","visible","onRequestClose","undefined","ScrollView","centeredView","Pressable","button","FontAwesome","textAlign","size","name","modalView","modalBlock","modalText","clientName","createdAt","marginVertical","TextInput","onChangeText","placeholder","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","position","right","top","buttons","selectedIndex","containerStyle","margin","selectedButtonStyle","selectedTextStyle","isNaN","parseFloat","clientNote","fontStyle","center","checkedColor","checked","height","display","flexDirection","paddingTop","elevation","zIndex","width","marginHorizontal","listView","paddingBottom","buttoncontainer","textDesc","overflow","ItemsList","items","openList","setOpenList","map","showItemDetails","Dimensions","get","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderTopWidth","borderTopColor","minWidth","borderStyle","BiyouButton","clickHandler","iconName","iconPosition","BiyouModal","children","open","setOpen","BiyouTextInput","setValue","condition","placeholderTextColor","AddItem","openAddModal","setOpenAddModal","setId","setName","error","setError","getLastId","onSnapshot","exists","data","length","setDoc","marginBottom","SearchModal","setItems","openSearchModal","setOpenSearchModal","setItemId","setClientName","setStatus","openStatusPicker","setOpenStatusPicker","isVisible","el","i","Content","Title","queryConstraints","push","where","results","getDocs","query","collection","querySnapshot","empty","forEach","userSlice","createSlice","initialState","isAuthenticated","reducers","fetchUser","state","action","payload","user","updateUser","role","signOutUser","extraReducers","builder","selectUser","actions","AdminScreen","useSelector","displayName","actioncard","actioncardadd","actioncardsearch","newlist","unshift","actioncardlist","Search","flexWrap","ItemDetails","openItemDetails","setOpenItemDetails","note","setNote","setSuccess","marginLeft","HomeScreen","Image","source","require","searchBar","toUpperCase","Profile","dispatch","useDispatch","auth","getAuth","uid","Platform","OS","photoURL","includes","uri","marginRight","email","signOut","then","Login","setRegisterOpen","setEmail","password","setPassword","setVisible","currentUser","secureTextEntry","signInWithEmailAndPassword","catch","Register","createUserWithEmailAndPassword","updateProfile","userId","username","EditProfile","setEditOpen","resetPasswordSuccess","setResetPasswordSuccess","verifyEmailSuccess","setVerifyEmailSuccess","updateEmail","sendEmailVerification","textDecorationLine","sendPasswordResetEmail","deleteUser","setAddOpen","AccountScreen","loginOpen","setLoginOpen","registerOpen","editOpen","addOpen","block","loginCtaText","overlayStyle","overlay","onBackdropPress","buttonStyle","bottom","isOpen","icon","openIcon","onOpen","onClose","Action","titleStyle","box","contactbutton","InfoScreen","overlayOpen","setOverlayOpen","Linking","openURL","BottomTab","createBottomTabNavigator","shadow","TabBarIcon","BottomTabNavigator","React","isAdmin","setIsAdmin","onAuthStateChanged","checkIfAdmin","getDoc","docSnap","Navigator","initialRouteName","screenOptions","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarItemStyle","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","left","Screen","component","options","tabBarIcon","headerShown","linking","prefixes","config","screens","Root","Home","Admin","Account","Info","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","FirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LogBox","ignoreLogs","getApps","initializeApp","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","console","warn","useCachedResources","StatusBar","module","exports"],"mappings":"yzBAKe,SAASA,IACtB,OAAOC,c,uFCYM,GACbC,MAAO,CACLC,KAAM,UACNC,WAAY,WAEdC,KAAM,CACJF,KAAM,UACNC,WAAY,WAEdE,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,IAAK,W,kpBCvBA,SAASC,EACdC,EACAC,GAEA,IAAMC,EAAQhB,IACRiB,EAAiBH,EAAME,GAE7B,OAAIC,GAGKC,EAAOF,GAAOD,GAYlB,SAASI,EAAKL,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,GACMU,EAAQX,EAAc,CAAEX,MAAOmB,EAAYhB,KAAMiB,GAAa,QAEpE,OAAO,cAAC,IAAD,GAAaF,MAAO,CAAC,CAAEI,SAASJ,IAAYG,IAG9C,SAASE,EAAKX,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,GACMY,EAAkBb,EAAc,CAAEX,MAAOmB,EAAYhB,KAAMiB,GAAa,cAE9E,OAAO,cAAC,IAAD,GAAaF,MAAO,CAAC,CAAEM,mBAAmBN,IAAYG,ICpChD,SAASI,EAAT,GAEuB,IADpCC,EACmC,EADnCA,WAKA,OAHAC,qBAAU,WACRD,EAAWE,SAAS,UACnB,IAED,eAAC,EAAD,CAAMV,MAAOW,EAAOC,UAApB,UACE,cAAC,EAAD,CAAMZ,MAAOW,EAAOE,MAApB,6BACA,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAMP,EAAWQ,QAAQ,SAClChB,MAAOW,EAAOM,KAFhB,SAIE,cAAC,EAAD,CAAMjB,MAAOW,EAAOO,SAApB,sCAMR,IAAMP,EAASQ,IAAWC,OAAO,CAC/BR,UAAW,CAETS,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAAS,IAEXX,MAAO,CACLT,MAAON,EAAOT,MACdoC,SAAU,GACVC,WAAY,QAEdT,KAAM,CACJU,UAAW,GACXC,gBAAiB,IAEnBV,SAAU,CACRO,SAAU,GACVrB,MAAON,EAAOT,S,gGCqBLwC,EAAc,SAACC,GAC1B,IAAMC,EAAgBD,EAAGE,UAAU,EAAG,GAClCC,EAAYC,SAASJ,EAAGE,UAAU,IAClCG,EAAmB,GACnBC,EAAS,GACPC,EAAqB,KAnDG,WAC9B,IAAIC,EAAS,GAEb,QADc,IAAIC,MAAOC,YAEvB,KAAK,EACHF,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,EACHA,EAAS,IACT,MACF,KAAK,GACHA,EAAS,IACT,MACF,KAAK,GACHA,EAAS,IACT,MACF,QACEA,EAAS,GAEb,OAAOA,EAQ2BG,GAclC,OAbIV,IAAkBM,KACpBJ,GACiB,IACfE,EAAmBF,EAAUS,WACpB,IAAMT,GAAaA,GAAa,GACzCE,EAAmB,IAAIQ,OAAOV,EAAUS,YAC/B,GAAKT,IACdE,EAAmB,KAAKQ,OAAOV,EAAUS,aAE3CN,EAASL,EAAgBI,GAEzBC,EAASC,EAAqB,MAEzBD,GAGIQ,GAAe,WAC1B,IAAIC,EAA4C,KAAjC,IAAIN,MAAOO,oBACtBC,EAAQ,IAAIR,KAAKA,KAAKS,MAAQH,GAAUI,cAAcC,MAAM,GAAI,GAEpE,OADWH,EAAMf,UAAU,EAAG,IAAM,IAAMe,EAAMf,UAAU,GAAI,KC1E1DmB,GAAa,CACjB,aACA,eACA,QACA,mBACA,wBAGa,SAASC,GAAT,GAUX,IATFC,EASC,EATDA,KACAC,EAQC,EARDA,QACAC,EAOC,EAPDA,qBACAC,EAMC,EANDA,wBAQA,GADc5E,IACiB6E,mBAAS,KAAxC,WAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0CF,qBACxCJ,EAAKO,YADP,WAAOC,EAAP,KAAsBC,EAAtB,KAGA,EAAkCL,mBAChCN,GAAWY,WAAU,SAACC,GAAD,OAAOA,IAAMX,EAAKY,WADzC,WAAOC,EAAP,KAAkBC,EAAlB,KAGA,EAAsCV,mBACpCJ,EAAKe,kBAAoBf,EAAKe,kBAAoB,IADpD,WAAOC,EAAP,KAAoBC,EAApB,KAGA,EAA0Bb,mBAASJ,EAAKkB,MAAQlB,EAAKkB,MAAQ,IAA7D,WAAOA,EAAP,KAAcC,EAAd,KACA,EAAwCf,mBACtCJ,EAAKoB,aAAepB,EAAKoB,aAAe,IAD1C,WAAOA,EAAP,KAAqBC,EAArB,KAGA,EAAoCjB,mBAClCJ,EAAKsB,WAAatB,EAAKsB,WAAa,GADtC,WAAOA,EAAP,KAAmBC,EAAnB,KAGA,EAAoCnB,mBAClCJ,EAAKwB,WAAaxB,EAAKwB,WAAa,IADtC,WAAOA,EAAP,KAAmBC,EAAnB,KAGMC,EAAKC,cAELC,EAAeC,uBAAY,oBAAAC,EAAAC,OAAA,oDAC3BlB,IAAab,EAAKgC,OADS,kCAAAF,EAAA,MAEvBG,YAAUC,YAAIR,EAAI,QAAS1B,EAAKgC,QAAS,CAC7CpB,OAAQd,GAAWe,MAHQ,8DAM9B,CAACA,IAEJzD,qBAAU,WACRwE,MACC,CAACA,IAEJ,IAAMO,GAAqBN,uBAAY,oBAAAC,EAAAC,OAAA,oDACjC/B,EAAKgC,OAD4B,oBAE/BxB,EAF+B,kCAAAsB,EAAA,MAG3BG,YAAUC,YAAIR,EAAI,QAAS1B,EAAKgC,QAAS,CAC7CzB,WAAYhB,QAJmB,+CAAAuC,EAAA,MAO3BG,YAAUC,YAAIR,EAAI,QAAS1B,EAAKgC,QAAS,CAC7CzB,WAAY,QARmB,8DAYpC,CAACC,IAEJpD,qBAAU,WACR+E,OACC,CAACA,KAEJ,IAAMC,GAAgB,SAAOC,EAAaC,GAApB,eAAAR,EAAAC,OAAA,oDAChBM,IAAOrC,EAAKgC,OADI,uBAEdO,EAAoB,GAFN,WAAAT,EAAA,MAGZG,YACJC,YAAIR,EAAI,QAAS1B,EAAKgC,QACtBQ,OAAOC,eAAeF,EAAcF,EAAK,CACvCC,MAAwB,kBAAVA,EAAqBA,EAAMI,cAAgBJ,EACzDK,cAAc,EACdC,UAAU,EACVC,YAAY,MATE,OAYlBvC,EAAY+B,GACZS,YAAW,WACTxC,EAAY,MACX,KAfe,6DAmBtB,OACE,cAAC,EAAD,CAAM3D,MAAOW,GAAOC,UAApB,SACE,cAACwF,EAAA,EAAD,CACEC,cAAc,QACdC,aAAa,EACbC,QAAShD,EACTiD,eAAgB,WACdhD,GAAyBD,GACzBD,OAAQmD,IANZ,SASE,cAACC,EAAA,EAAD,UACE,eAAC,EAAD,CAAM1G,MAAOW,GAAOgG,aAApB,UACE,cAACC,EAAA,EAAD,CACE5G,MAAOW,GAAOkG,OACd9F,QAAS,WACPyC,GAAyBD,GACzBD,OAAQmD,IAJZ,SAOE,cAACK,EAAA,EAAD,CACE9G,MAAO,CACLI,MAAON,EAAOT,MACdqC,WAAY,OACZqF,UAAW,UAEbC,KAAM,GACNC,KAAK,YAGT,eAAC,EAAD,CAAMjH,MAAOW,GAAOuG,UAApB,UACE,eAAC,EAAD,CAAMlH,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,+BACA,cAAC,EAAD,CAAMpH,MAAO,CAAEyB,SAAU,GAAIC,WAAY,QAAzC,SACG2B,EAAKgC,YAGV,eAAC,EAAD,CAAMrF,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,4BACA,cAAC,EAAD,CAAMpH,MAAO,CAAEyB,SAAU,GAAIC,WAAY,OAAzC,SACG2B,EAAKgE,gBAGV,eAAC,EAAD,CAAMrH,MAAOW,GAAOwG,WAApB,UACE,eAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,+BACkB/D,EAAKiE,aAEvB,eAAC,EAAD,WACE,cAAC,EAAD,CAAMtH,MAAOW,GAAOyG,UAApB,2CACA,eAAC,EAAD,CAAMpH,MAAO,CAAEuH,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE7B,MAAOtB,EACPoD,aAAc,SAACzD,GAAD,OAAOM,EAAeN,IACpC0D,YAAY,GACZ1H,MAAO,CACL4B,gBAAiB,GACjB+F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdvH,gBAAiBR,EAAOZ,MACxBkB,MAAON,EAAOT,MACdyI,YAAahI,EAAOT,MACpB0I,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACE7F,QAAS,kBAAM0E,GAAc,cAAepB,IAC5CrE,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAI5G,MAAM,aAE9B,gBAAZsD,GACC,cAACoD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACN5G,MAAM,QACNJ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,eAMzD,eAAC,EAAD,CAAMlI,MAAOW,GAAOwG,WAApB,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,wBACA,eAAC,EAAD,CAAMpH,MAAO,CAAEuH,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE7B,MAAOpB,EACPkD,aAAc,SAACzD,GAAD,OAAOQ,EAASR,IAC9B0D,YAAY,GACZ1H,MAAO,CACL4B,gBAAiB,GACjB+F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdvH,gBAAiBR,EAAOZ,MACxBkB,MAAON,EAAOT,MACdyI,YAAahI,EAAOT,MACpB0I,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACE7F,QAAS,kBAAM0E,GAAc,QAASlB,IACtCvE,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAI5G,MAAM,aAE9B,UAAZsD,GACC,cAACoD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACN5G,MAAM,QACNJ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,YAKvD,eAAC,EAAD,WACE,cAAC,EAAD,CAAMlI,MAAOW,GAAOyG,UAApB,oCACA,eAAC,EAAD,CAAMpH,MAAO,CAAEuH,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE7B,MAAOlB,EACPgD,aAAc,SAACzD,GAAD,OAAOU,EAAgBV,IACrC0D,YAAY,GACZ1H,MAAO,CACL4B,gBAAiB,GACjB+F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdvH,gBAAiBR,EAAOZ,MACxBkB,MAAON,EAAOT,MACdyI,YAAahI,EAAOT,MACpB0I,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACE7F,QAAS,kBACP0E,GAAc,eAAgBhB,IAEhCzE,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAJjD,SAME,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAI5G,MAAM,aAE9B,iBAAZsD,GACC,cAACoD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACN5G,MAAM,QACNJ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,YAKvD,eAAC,EAAD,WACE,cAAC,EAAD,CAAMlI,MAAOW,GAAOyG,UAApB,mBACA,cAAC,IAAD,CACEe,QAAS,CACP,aACA,eACA,QACA,mBACA,wBAEFC,cAAelE,EACfnD,QAAS,SAAC4E,GACRxB,EAAawB,IAEf0C,eAAgB,CAAEC,OAAQ,GAC1BC,oBAAqB,CACL,IAAdrE,GAAmB,CAAE5D,gBAAiBR,EAAON,KAC/B,IAAd0E,GAAmB,CAAE5D,gBAAiB,SACxB,IAAd4D,GAAmB,CAAE5D,gBAAiBR,EAAOP,QAC/B,IAAd2E,GAAmB,CAAE5D,gBAAiBR,EAAON,KAC/B,IAAd0E,GAAmB,CAAE5D,gBAAiBR,EAAOR,SAE/CkJ,kBAAmB,CAAEpI,MAAON,EAAOT,YAGvC,eAAC,EAAD,WACE,cAAC,EAAD,CAAMW,MAAOW,GAAOyG,UAApB,yBACA,eAAC,EAAD,CAAMpH,MAAO,CAAEuH,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE7B,MAAOhB,EAAWjC,WAClB+E,aAAc,SAACzD,GAAD,OACZY,EAAc6D,MAAMC,WAAW1E,IAAM,EAAI0E,WAAW1E,KAEtD0D,YAAY,GACZ1H,MAAO,CACL4B,gBAAiB,GACjB+F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdvH,gBAAiBR,EAAOZ,MACxBkB,MAAON,EAAOT,MACdyI,YAAahI,EAAOT,MACpB0I,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACE7F,QAAS,kBAAM0E,GAAc,aAAcd,IAC3C3E,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAI5G,MAAM,aAE9B,eAAZsD,GACC,cAACoD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACN5G,MAAM,QACNJ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,YAKvD,eAAC,EAAD,WACE,cAAC,EAAD,CAAMlI,MAAOW,GAAOyG,UAApB,0BACA,eAAC,EAAD,CAAMpH,MAAO,CAAEuH,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE7B,MAAOd,EACP4C,aAAc,SAACzD,GAAD,OAAOc,EAAcd,IACnC0D,YAAY,GACZ1H,MAAO,CACL4B,gBAAiB,GACjB+F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdvH,gBAAiBR,EAAOZ,MACxBkB,MAAON,EAAOT,MACdyI,YAAahI,EAAOT,MACpB0I,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACE7F,QAAS,kBAAM0E,GAAc,aAAcZ,IAC3C7E,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,IAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAI5G,MAAON,EAAOV,UAEtC,eAAZsE,GACC,cAACoD,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACN5G,MAAM,QACNJ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,eAMxD7E,EAAKsF,YACJ,eAAC,EAAD,CAAM3I,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,8BACA,cAAC,EAAD,CAAMpH,MAAO,CAAEyB,SAAU,GAAImH,UAAW,UAAxC,SACGvF,EAAKsF,gBAIZ,eAAC,EAAD,CAAM3I,MAAOW,GAAOwG,WAApB,UACE,cAAC,IAAD,CACE0B,QAAM,EACNhI,MAAM,yBACNiI,aAAchJ,EAAOV,MACrBiJ,eAAgB,CAAE/H,gBAAiBR,EAAOT,OAC1C0J,QAASlF,EACT9C,QAAS,kBAAM+C,GAAkBD,MAElCR,EAAKO,YACJ,eAAC,EAAD,CAAM5D,MAAO,CAACW,GAAOyG,UAAW,CAAEL,UAAW,WAA7C,wBACc1D,EAAKO,6BAYrC,IAAMjD,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACToI,OAAQ,OACRC,QAAS,OACTC,cAAe,SACf5H,WAAY,SACZD,KAAM,EACN8H,WAAY,IAEdxC,aAAc,CACZtF,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZK,UAAW,IAEbkF,OAAQ,CACNmB,SAAU,WACVE,IAAK,EACLD,MAAO,GACPJ,aAAc,GACdrG,QAAS,GACT4H,UAAW,EACX9I,gBAAiBR,EAAON,IACxB6J,OAAQ,IAEVnC,UAAW,CACToC,MAAO,QAETlC,UAAW,CACT3F,SAAU,IAEZ0F,WAAY,CACVoC,iBAAkB,GAClBhC,eAAgB,MC3Nd5G,GAASQ,IAAWC,OAAO,CAC/BoI,SAAU,CACRnI,KAAM,EACNiI,MAAO,OACPH,WAAY,GACZM,cAAe,IAEjBC,gBAAiB,CACfT,QAAS,OACT1H,eAAgB,SAChBD,WAAY,UAEduF,OAAQ,CACNoC,QAAS,OACT1H,eAAgB,SAChBD,WAAY,SACZ0H,OAAQ,GACRM,MAAO,GACP/B,eAAgB,GAChBM,aAAc,GACdrG,QAAS,GACT4H,UAAW,GACX9I,gBAAiBR,EAAON,KAE1BmK,SAAU,CACRC,SAAU,YAICC,GAzNG,SAAC,GAQZ,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YAMA,EAAwBvG,qBAAxB,WAAOJ,EAAP,KAAaC,EAAb,KACA,EAAwDG,oBAAS,GAAjE,WAAOF,EAAP,KAA6BC,EAA7B,KAOA,OACE,eAAC,EAAD,CAAMxD,MAAOW,GAAO6I,SAApB,UACE,cAAC,EAAD,CAAMxJ,MAAOW,GAAO+I,gBAApB,SACE,cAAC9C,EAAA,EAAD,CAAW5G,MAAOW,GAAOkG,OAAQ9F,QAAS,kBAAMiJ,GAAaD,IAA7D,SACE,cAACjD,EAAA,EAAD,CACE9G,MAAO,CACLI,MAAON,EAAOT,MACdqC,WAAY,OACZqF,UAAW,UAEbC,KAAM,GACNC,KAAK,cAIX,cAAC,EAAD,CAAMjH,MAAO,CAAEsJ,MAAO,OAAQL,QAAS,QAAvC,SACGa,EAAMG,KAAI,SAAC5G,GAAD,OACT,cAACvC,EAAA,EAAD,CAEEC,QAAS,kBAxBK,SAACsC,GACvBG,GAAwB,GACxBF,EAAQD,GAsBe6G,CAAgB7G,IAFjC,SAIE,eAAC,EAAD,CACErD,MAAO,CACL6H,aAAc,GACdvH,gBAAiBR,EAAOX,KACxBmK,MAAOa,IAAWC,IAAI,UAAUd,MAAQ,GACxCC,iBAAkB,OAClBhC,eAAgB,EAChB0B,QAAS,OACTC,cAAe,MACftH,gBAAiB,GACjByI,kBAAmB,EACnBC,YAAaxK,EAAOZ,MACpBqL,aAAc,CAAEjB,MAAO,EAAGN,OAAQ,GAClCwB,cAAe,GACfC,aAAc,IAdlB,UAiBE,cAAC,EAAD,CACEzK,MAAO,CACLqB,KAAM,EACNiI,MAAO,OACPhJ,gBAAiB,cACjBiB,eAAgB,SAChBD,WAAY,SACZsI,SAAU,UAPd,SAUE,cAAC,EAAD,UAAOvG,EAAKgC,WAEd,eAAC,EAAD,CACErF,MAAO,CACLqB,KAAM,EACNf,gBAAiB,cACjBgJ,MAAO,OACPL,QAAS,OACTC,cAAe,UANnB,UASE,eAAC,EAAD,CACElJ,MAAO,CACLqB,KAAM,EACN4H,QAAS,OACT3I,gBAAiB,cACjB4I,cAAe,MACftH,gBAAiB,GANrB,UASE,cAAC,EAAD,CACE5B,MAAO,CACLqB,KAAM,EACNf,gBAAiB,cACjBiB,eAAgB,SAChBD,WAAY,SACZsI,SAAU,UANd,SASE,cAAC,EAAD,CAAM5J,MAAO,CAAE0B,WAAY,OAAQqF,UAAW,UAA9C,SACG1D,EAAKgE,eAGV,cAAC,EAAD,CACErH,MAAO,CACLqB,KAAM,EACNf,gBAAiB,cACjBiB,eAAgB,SAChBD,WAAY,SACZsI,SAAU,UANd,SASE,cAAC,EAAD,UAAOvG,EAAKkB,aAGhB,eAAC,EAAD,CACEvE,MAAO,CACL0K,eAAgB,EAChBC,eAAgB7K,EAAOR,OACvB+B,KAAM,EACN4H,QAAS,OACTC,cAAe,MACftH,gBAAiB,EACjBtB,gBAAiB,eARrB,UAWE,cAAC,EAAD,CACEN,MAAO,CACLqB,KAAM,EACNf,gBAAiB,cACjBiB,eAAgB,SAChBD,WAAY,SACZsI,SAAU,UANd,SASE,cAAC,EAAD,CAAM5J,MAAO,CAAE4I,UAAW,UAA1B,SACGvF,EAAKe,sBAGV,cAAC,EAAD,CACEpE,MAAO,CACLM,gBAAiB,cACjBe,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZsI,SAAU,UANd,SASE,cAAC,EAAD,CACE5J,MAAO,CACL,CACEI,MAAON,EAAOT,MACdqC,WAAY,OACZ2I,kBAAmB,GAEL,eAAhBhH,EAAKY,QAA2B,CAC9B3D,gBAAiBR,EAAON,KAEV,iBAAhB6D,EAAKY,QAAuB,CAC1B3D,gBAAiB,SAEH,UAAhB+C,EAAKY,QAAsB,CACzB3D,gBAAiBR,EAAOP,QAEV,qBAAhB8D,EAAKY,QAAiC,CACpC3D,gBAAiBR,EAAON,KAEV,yBAAhB6D,EAAKY,QAAkC,CACrC3D,gBAAiBR,EAAOR,SApB9B,SAwBG+D,EAAKY,qBApIXZ,EAAKgC,aA6If9B,GAAwBF,GACvB,cAAC,GAAD,CACEA,KAAMA,EACNC,QAASA,EACTC,qBAAsBA,EACtBC,wBAAyBA,QC1J7B7C,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTN,gBAAiB,cACjB2I,QAAS,OACT1H,eAAgB,SAChBD,WAAY,UAEduF,OAAQ,CACNoC,QAAS,OACTC,cAAe,MACf3H,eAAgB,SAChBD,WAAY,SACZiG,eAAgB,EAChBgC,iBAAkB,OAClBqB,SAAU,MACVtK,gBAAiBR,EAAOV,MACxB0I,YAAahI,EAAOV,MACpB2I,YAAa,EACb8C,YAAa,QACbhD,aAAc,MAIHiD,GA1DK,SAAC,GAUd,IATLjK,EASI,EATJA,MACAkK,EAQI,EARJA,aACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,aAOA,OACE,cAAC,EAAD,CAAMjL,MAAOW,GAAOC,UAApB,SACE,eAACE,EAAA,EAAD,CAAkBd,MAAOW,GAAOkG,OAAQ9F,QAASgK,EAAjD,UACGC,GAA6B,WAAjBC,GACX,cAACnE,EAAA,EAAD,CAAaE,KAAM,GAAIC,KAAM+D,EAAiB5K,MAAON,EAAOT,QAE9D,cAAC,EAAD,CACEW,MAAO,CACLI,MAAON,EAAOT,MACdoC,SAAU,GACVC,WAAY,OACZF,QAAS,IALb,SAQGX,IAEFmK,GAA6B,UAAjBC,GACX,cAACnE,EAAA,EAAD,CAAaE,KAAM,GAAIC,KAAM+D,EAAiB5K,MAAON,EAAOT,cCgDvD6L,GA5EI,SAAC,GAQb,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,KACAC,EAKI,EALJA,QAMA,OACE,cAAC,EAAD,CACErL,MAAO,CACLgJ,OAAQ,OACRC,QAAS,OACTC,cAAe,SACf5H,WAAY,SACZD,KAAM,EACN8H,WAAY,IAPhB,SAUE,cAAC/C,EAAA,EAAD,CACEC,cAAc,QACdC,aAAa,EACbC,QAAS6E,EACT5E,eAAgB,WACd6E,GAASD,IALb,SAQE,cAAC,EAAD,CAAMpL,MAAO,CAAEqB,KAAM,GAArB,SACE,cAACqF,EAAA,EAAD,UACE,eAAC,EAAD,CACE1G,MAAO,CACLgJ,OAAQmB,IAAWC,IAAI,UAAUpB,OAAS,GAC1CzH,eAAgB,SAChBD,WAAY,SACZK,UAAW,IALf,UAQE,cAACiF,EAAA,EAAD,CACE5G,MAAO,CACLgI,SAAU,WACVE,IAAK,EACLD,MAAO,GACPJ,aAAc,GACdrG,QAAS,GACT4H,UAAW,GACXC,OAAQ,GACR/I,gBAAiBR,EAAON,KAE1BuB,QAAS,kBAAMsK,GAASD,IAX1B,SAaE,cAACtE,EAAA,EAAD,CACE9G,MAAO,CACLI,MAAON,EAAOT,MACdqC,WAAY,OACZqF,UAAW,UAEbC,KAAM,GACNC,KAAK,YAGT,cAAC,EAAD,CACEjH,MAAO,CACLsJ,MAAO,QAFX,SAKG6B,gB,qkBClEjB,IAsCMxK,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTN,gBAAiB,cACjBiJ,iBAAkB,GAClBhC,eAAgB,KAIL+D,GA9CQ,SAAC,GAUjB,IATL5D,EASI,EATJA,YACA/B,EAQI,EARJA,MACA4F,EAOI,EAPJA,SACAC,EAMI,EANJA,UAOA,OACE,cAAC,EAAD,CAAMxL,MAAOW,GAAOC,UAApB,SACE,cAAC4G,EAAA,EAAD,CACExH,MAAK,IACHwB,QAAS,GACTqG,aAAc,GACdvH,gBAAiBR,EAAOX,KACxBiB,MAAON,EAAOZ,OACVsM,EACA,CACE1D,YAAahI,EAAON,IACpBuI,YAAa,GAEf,CACED,YAAahI,EAAOZ,MACpB6I,YAAa,IAGrBL,YAAaA,EACb+D,qBAAsB,OACtB9F,MAAOA,EACP8B,aAAc,SAACzD,GAAD,OAAOuH,GAAYA,EAASvH,SC3BnC,SAAS0H,GAAT,GAMX,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,gBAKA,EAAoBnI,mBAAS,IAA7B,WAAO3B,EAAP,KAAW+J,EAAX,KACA,EAAwBpI,mBAAS,IAAjC,WAAOwD,EAAP,KAAa6E,EAAb,KACA,EAAsCrI,mBAAS,IAA/C,WAAOY,EAAP,KAAoBC,EAApB,KACA,EAA0Bb,mBAAS,IAAnC,WAAOc,EAAP,KAAcC,EAAd,KACA,EAA0Bf,mBAAS,IAAnC,WAAOsI,EAAP,KAAcC,EAAd,KACMjH,EAAKC,cAELiH,EAAY/G,uBAAY,oBAAAC,EAAAC,OAAA,gDAC5B8G,YAAW3G,YAAIR,EAAI,YAAa,cAAc,SAACQ,GACzCA,EAAI4G,UACNN,EAAMhK,EAAY0D,EAAI6G,OAAOtK,QAHL,8DAM3B,IAEHrB,qBAAU,WACRwL,MACC,CAACA,IA8BJ,OACE,eAAC,GAAD,CAAYb,KAAMO,EAAcN,QAASO,EAAzC,UACGG,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAMrM,MAAOW,GAAOoL,MAApB,SAA4BA,IACjD,eAAC,EAAD,CAAM/L,MAAOW,GAAOyG,UAApB,sBAAyCtF,KACzC,cAAC,GAAD,CACE4F,YAAY,gBACZ/B,MAAOsB,EACPsE,SAAUO,EACVN,WAAYvE,IAEd,cAAC,GAAD,CACES,YAAY,yCACZ/B,MAAOtB,EACPkH,SAAUjH,EACVkH,WAAYnH,IAEd,cAAC,GAAD,CACEqD,YAAY,uBACZ/B,MAAOpB,EACPgH,SAAU/G,EACVgH,WAAYjH,IAEd,cAAC,GAAD,CAAa1D,MAAM,UAAUkK,aAlDd,oBAAA5F,EAAAC,OAAA,qDACbtD,GAAMmF,GAAQ5C,GAAeE,GADhB,mCAAAY,EAAA,MAETmH,YAAO/G,YAAIR,EAAI,QAASjD,GAAK,CACjCuF,WAAYJ,EAAKlB,cACjB3B,kBAAmBC,EACnBgB,OAAQvD,EACRyC,QACAN,OAAQ,aACRqD,UAAW1E,QARE,yBAAAuC,EAAA,MAUTmH,YAAO/G,YAAIR,EAAI,YAAa,aAAc,CAAEjD,QAVnC,OAWf8J,GAAgB,GAChBE,EAAQ,IACRxH,EAAe,IACfE,EAAS,IAdM,wBAeL1C,GAMVkK,EAAS,uBACT7F,YAAW,WACT6F,EAAS,MACR,OARHA,EAAS,mCACT7F,YAAW,WACT6F,EAAS,MACR,MAnBY,mEAuDrB,IAAMrL,GAASQ,IAAWC,OAAO,CAC/B2K,MAAO,CACLzL,gBAAiBR,EAAON,IACxBY,MAAON,EAAOT,MACdgL,kBAAmB,GACnBzI,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZqF,UAAW,UAEbK,UAAW,CACTmF,aAAc,GACdxF,UAAW,YCvFT5D,GAAa,CACjB,GACA,aACA,eACA,QACA,mBACA,wBA6IIxC,GAASQ,IAAWC,OAAO,CAC/B2K,MAAO,CACLzL,gBAAiBR,EAAON,IACxBY,MAAON,EAAOT,MACdgL,kBAAmB,GACnBzI,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZqF,UAAW,UAEbK,UAAW,CACTmF,aAAc,GACdxF,UAAW,YAIAyF,GA1JK,SAAC,GAUd,IATLC,EASI,EATJA,SACAzC,EAQI,EARJA,YACA0C,EAOI,EAPJA,gBACAC,EAMI,EANJA,mBAOM5H,EAAKC,cAEX,EAA0BvB,mBAAS,IAAnC,WAAOsI,EAAP,KAAcC,EAAd,KACA,EAA4BvI,mBAAS,IAArC,WAAO4B,EAAP,KAAeuH,EAAf,KACA,EAAoCnJ,mBAAS,IAA7C,WAAO4D,EAAP,KAAmBwF,EAAnB,KACA,EAA0BpJ,mBAAS,IAAnC,WAAOc,EAAP,KAAcC,EAAd,KACA,EAAwCf,mBAAS,IAAjD,WAAOgB,EAAP,KAAqBC,EAArB,KAEA,EAA4BjB,mBAASN,GAAW,IAAhD,WAAOc,EAAP,KAAe6I,EAAf,KACA,EAAgDrJ,oBAAS,GAAzD,WAAOsJ,EAAP,KAAyBC,EAAzB,KAiDA,OACE,eAAC,GAAD,CAAY5B,KAAMsB,EAAiBrB,QAASsB,EAA5C,UACGZ,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAMrM,MAAOW,GAAOoL,MAApB,SAA4BA,IACjD,cAAC,EAAD,CAAM/L,MAAOW,GAAOyG,UAApB,sEAGA,cAAC,GAAD,CACEM,YAAY,mBACZ/B,MAAON,EACPkG,SAAUqB,IAEZ,cAAC,GAAD,CACElF,YAAY,gBACZ/B,MAAO0B,EACPkE,SAAUsB,IAEZ,cAAC,GAAD,CACEnF,YAAY,uBACZ/B,MAAOpB,EACPgH,SAAU/G,IAEZ,cAAC,GAAD,CACEkD,YAAY,wBACZ/B,MAAOlB,EACP8G,SAAU7G,IAEZ,cAACkC,EAAA,EAAD,CACE7F,QAAS,kBAAMiM,GAAoB,IACnChN,MAAO,CACLuJ,iBAAkB,GAClBhC,eAAgB,EAChB/F,QAAS,GACTqG,aAAc,GACdvH,gBAAiBR,EAAOX,KACxB2I,YAAahI,EAAOZ,MACpB6I,YAAa,GATjB,SAYG9D,EACC,cAAC,EAAD,CAAMjE,MAAO,CAAEI,MAAON,EAAOZ,OAA7B,SAAuC+E,IAEvC,cAAC,EAAD,CAAMjE,MAAO,CAAEI,MAAO,QAAtB,oBAGJ,cAAC,IAAD,CAAa6M,UAAWF,EAAxB,SACG5J,GAAW8G,KAAI,SAACiD,EAAIC,GAAL,OACd,cAAC,IAAD,CAEEpM,QAAS,WACP+L,EAAUI,GACVF,GAAoB,IAJxB,SAOE,cAAC,IAASI,QAAV,UACE,cAAC,IAASC,MAAV,UAAiBH,EAAGb,OAAS,EAAIa,EAAK,SAPnCC,QAYX,cAAC,GAAD,CACEtM,MAAM,WACNkK,aA5GgB,8BAAA5F,EAAAC,OAAA,uDACdkI,EAA0B,GAC5BjI,GACFiI,EAAiBC,KAAKC,YAAM,SAAU,KAAMnI,EAAOU,gBAEjDsB,GACFiG,EAAiBC,KACfC,YAAM,aAAc,KAAMnG,EAAWtB,gBAGrCxB,GACF+I,EAAiBC,KAAKC,YAAM,QAAS,KAAMjJ,EAAMwB,gBAE/CtB,GACF6I,EAAiBC,KACfC,YAAM,eAAgB,KAAM/I,EAAasB,gBAGzC9B,GACFqJ,EAAiBC,KAAKC,YAAM,SAAU,KAAMvJ,IAGxCwJ,EAAiB,GAtBH,WAAAtI,EAAA,MAwBQuI,YAC1BC,IAAK,WAAL,GAAMC,YAAW7I,EAAI,UAArB,OAAkCuI,MAzBhB,QAwBdO,EAxBc,QA2BFC,OAChB9B,EAAS,sBACT7F,YAAW,WACT6F,EAAS,MACR,OAEH6B,EAAcE,SAAQ,SAACxI,GACrBkI,EAAQF,KAAKhI,EAAI6G,WAEnBO,GAAmB,GACnBE,EAAc,IACdD,EAAU,IACVpI,EAAS,IACTE,EAAgB,IAChBoI,EAAU3J,GAAW,IACrB6G,GAAY,GACZyC,EAASgB,IA3CS,8DA6GhBzC,SAAS,SACTC,aAAa,e,+kBCzIrB,IAMa+C,GAAYC,aAAY,CACnChH,KAAM,OACNiH,aAPA,CACEjK,OAAQ,OACRkK,iBAAiB,GAMnBC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACbA,EAAOC,SACTF,EAAMrK,OAAS,WACfqK,EAAMH,iBAAkB,EACxBG,EAAMG,KAAOF,EAAOC,UAEpBF,EAAMrK,OAAS,WACfqK,EAAMH,iBAAkB,EACxBG,EAAMG,UAAOhI,IAGjBiI,WAAY,SAACJ,EAAOC,GAClBD,EAAMrK,OAAS,WACfqK,EAAMH,iBAAkB,EACxBG,EAAMG,KAAN,SACKH,EAAMG,MADX,IAEEE,KAAMJ,EAAOC,QAAQG,KACrB7E,MAAOyE,EAAOC,QAAQ1E,MACtBzF,YAAakK,EAAOC,QAAQnK,eAGhCuK,YAAa,SAACN,GACZA,EAAMrK,OAAS,WACfqK,EAAMH,iBAAkB,EACxBG,EAAMG,UAAOhI,IAGjBoI,cAAe,SAACC,OAgBLC,GAAa,SAACT,GAAD,OAAsBA,EAAMG,MAC/C,GAA+CT,GAAUgB,QAAjDX,GAAR,GAAQA,UAAWK,GAAnB,GAAmBA,WAAYE,GAA/B,GAA+BA,YAEvBZ,MAAf,QCrDe,SAASiB,KACtB,IAAQR,EAAuCS,YAAYH,IAAnDN,KACF1J,EAAKC,cAEX,EAAwCvB,oBAAS,GAAjD,WAAOkI,EAAP,KAAqBC,EAArB,KACA,EAA8CnI,oBAAS,GAAvD,WAAOiJ,EAAP,KAAwBC,EAAxB,KACA,EAAgClJ,oBAAS,GAAzC,WAAOsG,EAAP,KAAiBC,EAAjB,KACA,EAA0BvG,qBAA1B,WAAOqG,EAAP,KAAc2C,EAAd,KAcA,OACE,mCACE,cAAC/F,EAAA,EAAD,UACE,eAAC,EAAD,CAAM1G,MAAOW,GAAOC,UAApB,UACE,eAAC,EAAD,CAAMZ,MAAOW,GAAOE,MAApB,kCAA2C4N,OAA3C,EAA2CA,EAAMU,eACjD,eAAC,EAAD,CAAMnP,MAAOW,GAAOqO,QAApB,UAEE,eAAClO,EAAA,EAAD,CACEC,QAAS,kBAAM6K,GAAiBD,IAChC3L,MAAO,CAACW,GAAOyO,WAAYzO,GAAO0O,eAFpC,UAIE,cAACvI,EAAA,EAAD,CAAaE,KAAM,GAAI5G,MAAON,EAAOT,MAAO4H,KAAK,gBACjD,cAAC,EAAD,CAAMjH,MAAO,CAAEI,MAAON,EAAOT,OAA7B,wBAIF,eAACyB,EAAA,EAAD,CACEC,QAAS,kBAAM4L,GAAoBD,IACnC1M,MAAO,CAACW,GAAOyO,WAAYzO,GAAO2O,kBAFpC,UAIE,cAACxI,EAAA,EAAD,CAAaE,KAAM,GAAI5G,MAAON,EAAOT,MAAO4H,KAAK,WACjD,cAAC,EAAD,CAAMjH,MAAO,CAAEI,MAAON,EAAOT,OAA7B,yBAIF,eAACyB,EAAA,EAAD,CACEC,QAtCO,oBAAAoE,EAAAC,OAAA,gDACjBqH,EAAS,IACTP,YAAWyB,YAAMC,YAAW7I,EAAI,WAAW,SAAC8I,GAC1C,IAAI0B,EAAiB,GACrB1B,EAAcE,SAAQ,SAACxI,GACrBgK,EAAQC,QAAQjK,EAAI6G,WAEtBpC,GAAY,GACZyC,EAAS8C,MARM,6DAuCPvP,MAAO,CAACW,GAAOyO,WAAYzO,GAAO8O,gBAFpC,UAIE,cAAC3I,EAAA,EAAD,CAAaE,KAAM,GAAI5G,MAAON,EAAOT,MAAO4H,KAAK,UACjD,cAAC,EAAD,CAAMjH,MAAO,CAAEI,MAAON,EAAOT,OAA7B,yBAGJ,eAAC,EAAD,CAAMW,MAAO,CAAEgJ,OAAQmB,IAAWC,IAAI,UAAUpB,OAAS,KAAzD,UACGe,GACC,cAAC,EAAD,CAAM/J,MAAO,CAAEyJ,cAAe,IAA9B,SACGK,EACC,cAAC,GAAD,CACEA,MAAOA,EACPC,SAAUA,EACVC,YAAaA,IAGf,cAAC,EAAD,qDAIN,cAAC0F,GAAD,CACEjD,SAAUA,EACVzC,YAAaA,EACb0C,gBAAiBA,EACjBC,mBAAoBA,IAEtB,cAAC,GAAD,CACEhB,aAAcA,EACdC,gBAAiBA,cAS/B,IAAMjL,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTqI,QAAS,OACTC,cAAe,SACf5H,WAAY,SACZD,KAAM,EACN8H,WAAY,GACZM,cAAe,IAEjB5I,MAAO,CACLY,SAAU,GACVC,WAAY,OACZ6F,eAAgB,GAChBgC,iBAAkB,IAEpByF,QAAS,CACP1F,MAAO,OACPL,QAAS,OACTC,cAAe,MACfyG,SAAU,OACVrO,WAAY,SACZC,eAAgB,gBAElB6N,WAAY,CACV9F,MAAO,IACPN,OAAQ,IACRjB,YAAa,EACbF,aAAc,GACdoB,QAAS,OACT3H,WAAY,SACZC,eAAgB,UAElB8N,cAAe,CACbvH,YAAahI,EAAOZ,MACpBoB,gBAAiBR,EAAOZ,OAE1BoQ,iBAAkB,CAChBxH,YAAahI,EAAOP,OACpBe,gBAAiBR,EAAOP,QAE1BkQ,eAAgB,CACd3H,YAAahI,EAAON,IACpBc,gBAAiBR,EAAON,OC5Ib,SAASoQ,GAAT,GAQX,IAPFvM,EAOC,EAPDA,KACAwM,EAMC,EANDA,gBACAC,EAKC,EALDA,mBAOA,GADclR,IACU6E,mBAASJ,EAAKsF,WAAatF,EAAKsF,WAAa,KAArE,WAAOoH,EAAP,KAAaC,EAAb,KACA,EAA8BvM,mBAAS,IAAvC,WAAOC,EAAP,KAAgBuM,EAAhB,KACMlL,EAAKC,cAcX,OACE,eAAC,GAAD,CAAYoG,KAAMyE,EAAiBxE,QAASyE,EAA5C,UACE,eAAC,EAAD,CAAM9P,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,+BACA,cAAC,EAAD,CAAMpH,MAAO,CAAEyB,SAAU,GAAIC,WAAY,QAAzC,SAAoD2B,EAAKgC,YAE3D,eAAC,EAAD,CAAMrF,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAO,CAAEyB,SAAU,GAAIC,WAAY,OAAzC,SACG2B,EAAKgE,aAER,eAAC,EAAD,CAAMrH,MAAOW,GAAOyG,UAApB,2CACwB/D,EAAKe,qBAE7B,eAAC,EAAD,CAAMpE,MAAOW,GAAOyG,UAApB,+BAA+C/D,EAAKiE,gBAEtD,eAAC,EAAD,CAAMtH,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAO,CAAE0B,WAAY,OAAQD,SAAU,IAA7C,SAAoD4B,EAAKkB,QACxDlB,EAAKoB,cACJ,eAAC,EAAD,CAAMzE,MAAOW,GAAOyG,UAApB,oCACoB/D,EAAKoB,mBAI7B,eAAC,EAAD,CAAMzE,MAAO,CAACW,GAAOwG,YAArB,UACE,eAAC,EAAD,CACEnH,MAAO,CAAEiJ,QAAS,OAAQC,cAAe,MAAOyG,SAAU,QAD5D,UAGE,cAAC,EAAD,CAAM3P,MAAOW,GAAOyG,UAApB,mBACA,cAAC,EAAD,CACEpH,MAAO,CACLW,GAAOyG,UACP,CACE9G,gBAAiBR,EAAON,IACxBY,MAAON,EAAOT,MACd6Q,WAAY,EACZ7F,kBAAmB,IAPzB,SAWGhH,EAAKY,YAGTZ,EAAKsB,YACJ,cAAC,EAAD,UACE,eAAC,EAAD,CAAM3E,MAAOW,GAAOyG,UAApB,yBACe/D,EAAKsB,WADpB,eAOLtB,EAAKwB,YACJ,eAAC,EAAD,CAAM7E,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,2BACA,cAAC,EAAD,CAAMpH,MAAOW,GAAOyG,UAApB,SAAgC/D,EAAKwB,gBAGzC,eAAC,EAAD,CAAM7E,MAAOW,GAAOwG,WAApB,UACE,cAAC,EAAD,CAAMnH,MAAOW,GAAOyG,UAApB,2DAGA,eAAC,EAAD,CAAMpH,MAAO,CAAEuH,eAAgB,GAA/B,UACE,cAACC,EAAA,EAAD,CACE7B,MAAOoK,EACPtI,aAAc,SAACzD,GAAD,OAAOgM,EAAQhM,IAC7B0D,YAAY,GACZ1H,MAAO,CACL4B,gBAAiB,GACjB+F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdvH,gBAAiBR,EAAOZ,MACxBkB,MAAON,EAAOT,MACdyI,YAAahI,EAAOT,MACpB0I,YAAa,KAGjB,cAACnB,EAAA,EAAD,CACE7F,QA1FY,oBAAAoE,EAAAC,OAAA,oDAChB2K,IAAQ1M,EAAKgC,OADG,kCAAAF,EAAA,MAEZG,YAAUC,YAAIR,EAAI,QAAS1B,EAAKgC,QAAS,CAC7CsD,WAAYoH,KAHI,OAKlBE,EAAW,qCACX9J,YAAW,WACT8J,EAAW,MACV,KARe,6DA2FZjQ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,GAFjD,SAIE,cAACpB,EAAA,EAAD,CAAaG,KAAK,OAAOD,KAAM,GAAI5G,MAAM,YAE1CsD,EAAQ2I,OAAS,GAChB,cAACvF,EAAA,EAAD,CACEG,KAAK,QACLD,KAAM,GACN5G,MAAM,QACNJ,MAAO,CAAEgI,SAAU,WAAYC,MAAO,GAAIC,IAAK,cAS7D,IAAMvH,GAASQ,IAAWC,OAAO,CAC/BgG,UAAW,CACT3F,SAAU,IAEZ0F,WAAY,CACVmB,OAAQ,MChIG,SAAS6H,KACtB,IAAMpL,EAAKC,cACX,EAAwBvB,mBAAS,IAAjC,WAAOwD,EAAP,KAAa6E,EAAb,KACA,EAAoBrI,mBAAS,IAA7B,WAAO3B,EAAP,KAAW+J,EAAX,KACA,EAA0BpI,mBAAS,IAAnC,WAAOsI,EAAP,KAAcC,EAAd,KAEA,EAA8CvI,oBAAS,GAAvD,WAAOoM,EAAP,KAAwBC,EAAxB,KACA,EAAwBrM,qBAAxB,WAAOJ,EAAP,KAAaC,EAAb,KAiCA,OACE,eAAC,EAAD,CAAMtD,MAAOW,GAAOC,UAApB,UACE,cAACwP,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBtQ,MAAO,CAAEgJ,OAAQ,IAAKM,MAAO,OAE/B,eAAC,EAAD,CAAMtJ,MAAOW,GAAO4P,UAApB,UACGxE,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAMrM,MAAOW,GAAOoL,MAApB,SAA4BA,IACjD,cAAC,GAAD,CACErE,YAAY,qCACZ/B,MAAO7D,EACPyJ,SAAUM,EACVL,UAAWO,EAAMM,OAAS,IAAMvK,IAElC,cAAC,GAAD,CACE4F,YAAY,4CACZ/B,MAAOsB,EACPsE,SAAUO,EACVN,UAAWO,EAAMM,OAAS,IAAMpF,IAElC,cAAC,EAAD,CAAMjH,MAAOW,GAAO+I,gBAApB,SACE,cAAC,EAAD,CACE1J,MAAO,CACLiJ,QAAS,OACT1H,eAAgB,SAChBD,WAAY,SACZiI,iBAAkB,OAClBhC,eAAgB,EAChByB,OAAQ,GACRM,MAAO,GACPzB,aAAc,GAEdvH,gBAAiBR,EAAOV,OAX5B,SAcE,cAAC0B,EAAA,EAAD,CAAkBC,QAlEN,oBAAAoE,EAAAC,OAAA,gDAChB6B,GAAQnF,EACVoK,YAAW3G,YAAIR,EAAI,QAASjD,EAAG0O,gBAAgB,SAACjL,GAC1CA,EAAI4G,SACF5G,EAAI6G,OAAO/E,WAAWtB,gBAAkBkB,EAAKlB,eAC/CzC,EAAQiC,EAAI6G,QACZ0D,GAAmB,GACnB9D,EAAS,IACTH,EAAM,IACNC,EAAQ,MAERE,EAAS,iDACT7F,YAAW,WACT6F,EAAS,MACR,OAGLA,EAAS,wBACT7F,YAAW,WACT6F,EAAS,MACR,UAIPA,EAAS,uBACT7F,YAAW,WACT6F,EAAS,MACR,MA3Be,6DAkEZ,SACE,cAAClF,EAAA,EAAD,CAAaE,KAAM,GAAIC,KAAK,SAAS7G,MAAON,EAAOT,iBAK1DwQ,GAAmBxM,GAClB,cAACuM,GAAD,CACEvM,KAAMA,EACNwM,gBAAiBA,EACjBC,mBAAoBA,OAO9B,IAAMnP,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACToI,OAAQ,OACRC,QAAS,OACT5H,KAAM,EACNC,WAAY,SACZ6H,WAAY,IAGdtI,MAAO,CACLY,SAAU,GACVC,WAAY,OACZ6F,eAAgB,GAChBgC,iBAAkB,IAEpBgH,UAAW,CACTjH,MAAO,OACPjI,KAAM,EACNE,eAAgB,SAChBjB,gBAAiB,eAEnBoJ,gBAAiB,CACfT,QAAS,OACT1H,eAAgB,SAChBD,WAAY,SACZhB,gBAAiB,eAEnByL,MAAO,CACLzL,gBAAiBR,EAAON,IACxBY,MAAON,EAAOT,MACdgL,kBAAmB,GACnBzI,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZqF,UAAW,Y,SCPA0J,GAtHC,WAAO,IAAD,EACZhC,EAASS,YAAYH,IAArBN,KACFiC,EAAWC,cACXC,EAAOC,cACP9L,EAAKC,cAEXvE,qBAAU,WACJgO,GAAQA,EAAKqC,KACf5E,YAAW3G,YAAIR,EAAI,SAAU0J,EAAKqC,MAAM,SAACvL,GACvCmL,EAAShC,GAAWnJ,EAAI6G,cAG3B,IAIH,OACE,mCACGqC,GACC,eAAC,EAAD,CAAMzO,MAAO,CAAEmJ,WAAY,IAA3B,UACE,eAAC,EAAD,CACEnJ,MAAO,CACLgI,SAAU,WACVT,eAAgB,GAChB0B,QAAS,OACT1H,eAAgB,SAChBD,WAAY,UANhB,UASE,cAAC8O,EAAA,EAAD,CACEpQ,MAAO,CACLgI,SAAU,WACVC,MAAOkC,IAAWC,IAAI,UAAUd,MAAQ,EAAI,IAC5CN,OAAQ,IACRM,MAAO,KAET+G,OAAQC,EAAQ,OAED,QAAhBS,IAASC,IAAgB,SAACvC,EAAKwC,WAAL,EAAeC,SAAS,QAQjD,cAAC,EAAD,CAAMlR,MAAO,CAAEM,gBAAiB,eAAhC,SACE,cAAC,UAAD,CACE6Q,IAAK1C,EAAKwC,SACV3H,MAAO,IACPN,OAAQ,IACRhJ,MAAO,CAAE6H,aAAc,QAZ3B,cAACuI,EAAA,EAAD,CACEC,OAAQ,CACNc,IAAK1C,EAAKwC,UAEZjR,MAAO,CAAE6H,aAAc,GAAIyB,MAAO,IAAKN,OAAQ,OAanD,cAAC,EAAD,CAAMhJ,MAAO,CAAEyB,SAAU,IAAzB,SAAgCgN,EAAKU,iBAEvC,eAAC,EAAD,CAAMnP,MAAO,CAAEsI,OAAQ,IAAvB,UACE,eAAC,EAAD,CACEtI,MAAO,CAAEyB,SAAU,GAAIwH,QAAS,OAAQC,cAAe,OADzD,UAGE,cAAC,EAAD,CAAMlJ,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,oBAAmE,IAClE3C,EAAK4C,SAEP5C,EAAKpK,aACJ,eAAC,EAAD,CACErE,MAAO,CAAEyB,SAAU,GAAIwH,QAAS,OAAQC,cAAe,OADzD,UAGE,cAAC,EAAD,CAAMlJ,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,gCAEQ,IACP3C,EAAKpK,eAGToK,EAAKE,MACJ,eAAC,EAAD,CACE3O,MAAO,CAAEyB,SAAU,GAAIwH,QAAS,OAAQC,cAAe,OADzD,UAGE,cAAC,EAAD,CAAMlJ,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,sBAEQ,IACP3C,EAAKE,WAIXF,EAAK3E,OAAS2E,EAAK3E,MAAMuC,OAAS,GACjC,cAAC,EAAD,CAAMrM,MAAO,CAAEsI,OAAQ,IAAvB,SACGmG,EAAK3E,MAAMG,KAAI,SAAC5G,GAAD,OACd,eAAC,EAAD,CAEErD,MAAO,CACLiJ,QAAS,OACTC,cAAe,MACf5H,WAAY,SACZC,eAAgB,gBANpB,UASE,cAAC,EAAD,UAAO8B,EAAKgC,SACZ,cAAC,EAAD,UAAOhC,EAAKgE,aACZ,cAAC,EAAD,UAAOhE,EAAKkB,QACZ,cAAC,EAAD,UAAOlB,EAAKY,WAXPZ,EAAKgC,aAgBlB,cAAC,GAAD,CACExE,MAAM,oBACNkK,aA/Fa,oBAAA5F,EAAAC,OAAA,gDACrBkM,YAAQV,GAAMW,MAAK,kBAAMb,EAAS9B,SADb,6DAgGb5D,SAAS,WACTC,aAAa,gB,qkBC7GzB,IA8GMtK,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTN,gBAAiBR,EAAOT,MACxBwI,aAAc,GACdoB,QAAS,OACTzH,QAAS,IAEXuK,MAAO,CACLzL,gBAAiBR,EAAON,IACxBY,MAAON,EAAOT,MACdgL,kBAAmB,GACnBzI,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZqF,UAAW,YAIAyK,GAhID,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,gBAEf,GADc7S,IACY6E,mBAAS,KAAnC,WAAO4N,EAAP,KAAcK,EAAd,KACA,EAAgCjO,mBAAS,IAAzC,WAAOkO,EAAP,KAAiBC,EAAjB,KACA,EAA8BnO,oBAAS,GAAvC,WAAO8C,EAAP,KAAgBsL,EAAhB,KACA,EAA0BpO,mBAAS,IAAnC,WAAOsI,EAAP,KAAcC,EAAd,KACQyC,EAASS,YAAYH,IAArBN,KAEFiC,EAAWC,cACXC,EAAOC,cAEbpQ,qBAAU,WACJgO,EACFgD,GAAgB,GACPb,EAAKkB,cACdpB,EAASrC,GAAUuC,EAAKkB,cACxBL,GAAgB,MAEjB,IAuBH,OACE,eAAC,EAAD,CAAMzR,MAAOW,GAAOC,UAApB,UACGmL,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAMrM,MAAOW,GAAOoL,MAApB,SAA4BA,IACjD,cAAC,GAAD,CACErE,YAAY,QACZ/B,MAAO0L,EACP9F,SAAUmG,EACVlG,UAAWO,EAAMM,OAAS,IAAMgF,IAElC,eAAC,EAAD,CACErR,MAAK,IACHgI,SAAU,WACViB,QAAS,OACTC,cAAe,MACf3H,eAAgB,gBAChBgI,iBAAkB,GAClBjJ,gBAAiBR,EAAOX,KACxBoI,eAAgB,EAChB/F,QAAS,GACTqG,aAAc,IACVkE,EAAMM,OAAS,IAAMsF,EACrB,CACE7J,YAAahI,EAAON,IACpBuI,YAAa,GAEf,CACED,YAAahI,EAAOZ,MACpB6I,YAAa,IAlBvB,UAsBE,cAACP,EAAA,EAAD,CACExH,MAAO,CACLqB,KAAM,EACNjB,MAAON,EAAOZ,OAEhBwI,YAAY,eACZ+D,qBAAsB,OACtBsG,iBAAiBxL,EACjBkB,aAAc,SAACzD,GAAD,OAAO4N,EAAY5N,MAEnC,cAAClD,EAAA,EAAD,CACEd,MAAO,CACLqB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBR,QAAS,kBAAM8Q,GAAWtL,IAN5B,SAQGA,EACC,cAACO,EAAA,EAAD,CACE9G,MAAO,CAAEI,MAAON,EAAOZ,OACvB8H,KAAM,GACNC,KAAM,QAGR,cAACH,EAAA,EAAD,CACE9G,MAAO,CAAEI,MAAON,EAAOZ,OACvB8H,KAAM,GACNC,KAAM,mBAKd,cAAC,GAAD,CAAapG,MAAM,eAAekK,aArFhB,oBAAA5F,EAAAC,OAAA,gDAChBiM,GAASM,EACXK,YAA2BpB,EAAMS,EAAOM,GACrCJ,MAAK,SAAC9C,GACLiC,EAASrC,GAAUI,EAAKA,OACxBgD,GAAgB,MAEjBQ,OAAM,SAAClG,GACNC,EAAS,+BACT7F,YAAW,WACT6F,EAAS,MACR,SAGPA,EAAS,sBACT7F,YAAW,WACT6F,EAAS,MACR,MAjBe,mE,qkBCfxB,IAgIMrL,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTN,gBAAiBR,EAAOT,MACxBwI,aAAc,GACdoB,QAAS,OACTzH,QAAS,IAEXuK,MAAO,CACLzL,gBAAiBR,EAAON,IACxBY,MAAON,EAAOT,MACdgL,kBAAmB,GACnBzI,gBAAiB,GACjBH,SAAU,GACVC,WAAY,OACZqF,UAAW,YAIAmL,GAlJE,SAAC,GAA8B,IAA5BT,EAA2B,EAA3BA,gBAElB,GADc7S,IACU6E,mBAAS,KAAjC,WAAOwD,EAAP,KAAa6E,EAAb,KACA,EAA0BrI,mBAAS,IAAnC,WAAO4N,EAAP,KAAcK,EAAd,KACA,EAAgCjO,mBAAS,IAAzC,WAAOkO,EAAP,KAAiBC,EAAjB,KACA,EAA0BnO,mBAAS,IAAnC,WAAOsI,EAAP,KAAcC,EAAd,KACA,EAA8BvI,oBAAS,GAAvC,WAAO8C,EAAP,KAAgBsL,EAAhB,KACQpD,EAASS,YAAYH,IAArBN,KAEFiC,EAAWC,cACXC,EAAOC,cACP9L,EAAKC,cAEXvE,qBAAU,WACJgO,EACFgD,GAAgB,GACPb,EAAKkB,cACdpB,EAASrC,GAAUuC,EAAKkB,cACxBL,GAAgB,MAEjB,IAiCH,OACE,eAAC,EAAD,CAAMzR,MAAOW,GAAOC,UAApB,UACGmL,EAAMM,OAAS,GAAK,cAAC,EAAD,CAAMrM,MAAOW,GAAOoL,MAApB,SAA4BA,IACjD,cAAC,GAAD,CACErE,YAAY,oBACZ/B,MAAOsB,EACPsE,SAAUO,EACVN,UAAWO,EAAMM,OAAS,IAAMpF,IAElC,cAAC,GAAD,CACES,YAAY,QACZ/B,MAAO0L,EACP9F,SAAUmG,EACVlG,UAAWO,EAAMM,OAAS,IAAMgF,IAElC,eAAC,EAAD,CACErR,MAAK,IACHgI,SAAU,WACViB,QAAS,OACTC,cAAe,MACf3H,eAAgB,gBAChBjB,gBAAiBR,EAAOX,KACxBoK,iBAAkB,GAClBhC,eAAgB,EAChB/F,QAAS,GACTqG,aAAc,IACVkE,EAAMM,OAAS,IAAMsF,EACrB,CACE7J,YAAahI,EAAON,IACpBuI,YAAa,GAEf,CACED,YAAahI,EAAOZ,MACpB6I,YAAa,IAlBvB,UAsBE,cAACP,EAAA,EAAD,CACExH,MAAO,CACLqB,KAAM,EACNjB,MAAON,EAAOZ,OAEhBwI,YAAY,eACZ+D,qBAAsB,OACtBsG,iBAAiBxL,EACjBkB,aAAc,SAACzD,GAAD,OAAO4N,EAAY5N,MAEnC,cAAClD,EAAA,EAAD,CACEd,MAAO,CACLqB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBR,QAAS,kBAAM8Q,GAAWtL,IAN5B,SAQGA,EACC,cAACO,EAAA,EAAD,CACE9G,MAAO,CAAEI,MAAON,EAAOZ,OACvB8H,KAAM,GACNC,KAAM,QAGR,cAACH,EAAA,EAAD,CACE9G,MAAO,CAAEI,MAAON,EAAOZ,OACvB8H,KAAM,GACNC,KAAM,mBAKd,cAAC,GAAD,CAAapG,MAAM,qBAAkBkK,aArGnB,oBAAA5F,EAAAC,OAAA,gDAChB6B,GAAQoK,GAASM,EACnBQ,YAA+BvB,EAAMS,EAAOM,GACzCJ,MAAK,SAAC9C,GACL2D,YAAc3D,EAAKA,KAAM,CACvBU,YAAalI,EACbgK,SAAS,0CAA2ChK,EAA5C,SACPsK,MAAK,oBAAApM,EAAAC,OAAA,kEAAAD,EAAA,MACAmH,YAAO/G,YAAIR,EAAI,SAAU0J,EAAKA,KAAKqC,KAAM,CAC7CuB,OAAQ5D,EAAKA,KAAKqC,IAClBwB,SAAU7D,EAAKA,KAAKU,YACpBR,KAAM,WAJF,OAMN+B,EAASrC,GAAUI,EAAKA,OACxBgD,GAAgB,GAPV,kEAUTQ,OAAM,SAAClG,GACNC,EAAS,uCACT7F,YAAW,WACT6F,EAAS,MACR,SAGPA,EAAS,sBACT7F,YAAW,WACT6F,EAAS,MACR,MA3Be,mEC2NTuG,GA/OK,SAAC,GAA0B,IAAD,EAAvBC,EAAuB,EAAvBA,YACb/D,EAASS,YAAYH,IAArBN,KACFiC,EAAWC,cACXC,EAAOC,cACP9L,EAAKC,cAEX,EAAwDvB,mBAAS,IAAjE,WAAOgP,EAAP,KAA6BC,EAA7B,KACA,EAAoDjP,mBAAS,IAA7D,WAAOkP,EAAP,KAA2BC,EAA3B,KACA,EAAwBnP,mBACtBgL,GAAQA,EAAKU,YAAcV,EAAKU,YAAc,IADhD,WAAOlI,EAAP,KAAa6E,EAAb,KAGA,EAA0BrI,mBAASgL,GAAQA,EAAK4C,MAAQ5C,EAAK4C,MAAQ,IAArE,WAAOA,EAAP,KAAcK,EAAd,KACA,EAAsCjO,mBACpCgL,GAAQA,EAAKpK,YAAcoK,EAAKpK,YAAc,IADhD,WAAOA,EAAP,KAAoBC,EAApB,KAuDA,OACE,mCACGmK,GACC,eAAC,EAAD,WACE,cAAC7H,EAAA,EAAD,CACE5G,MAAO,CACLgI,SAAU,WACVE,IAAK,EAELD,MAAO,GACPJ,aAAc,GACdrG,QAAS,GACT4H,UAAW,GACXC,OAAQ,GACR/I,gBAAiB,SAEnBS,QAAS,WAnCG,EAAAoE,EAAAC,OAAA,oDAChBwL,EAAKkB,YADW,mBAEd7K,GAAQA,IAAS2J,EAAKkB,YAAY3C,aACpCiD,YAAcxB,EAAKkB,YAAa,CAAE3C,YAAalI,IAAQsK,MAAK,kBAC1DiB,GAAY,MAGZnB,GAASA,IAAUT,EAAKkB,YAAYT,OACtCwB,YAAYjC,EAAKkB,YAAaT,GAAOE,MAAK,kBAAMiB,GAAY,OAE1DnO,EAVc,kCAAAc,EAAA,MAWVG,YAAUC,YAAIR,EAAI,SAAU6L,EAAKkB,YAAYhB,KAAM,CACvDzM,iBAZc,OAchBmO,GAAY,GAdI,4DAqCVA,GAAY,IAdhB,SAiBE,cAAC1L,EAAA,EAAD,CACE9G,MAAO,CACLI,MAAON,EAAOT,MACdqC,WAAY,OACZqF,UAAW,UAEbC,KAAM,GACNC,KAAK,YAGT,cAAC,EAAD,CACEjH,MAAO,CACLuH,eAAgB,GAChB0B,QAAS,OACT1H,eAAgB,SAChBD,WAAY,UALhB,SAQmB,QAAhByP,IAASC,IAAgB,SAACvC,EAAKwC,WAAL,EAAeC,SAAS,QAQjD,cAAC,EAAD,CAAMlR,MAAO,CAAEM,gBAAiB,eAAhC,SACE,cAAC,UAAD,CACE6Q,IAAK1C,EAAKwC,SACV3H,MAAO,IACPN,OAAQ,IACRhJ,MAAO,CAAE6H,aAAc,QAZ3B,cAACuI,EAAA,EAAD,CACEC,OAAQ,CACNc,IAAK1C,EAAKwC,UAEZjR,MAAO,CAAE6H,aAAc,GAAIyB,MAAO,IAAKN,OAAQ,SAarD,cAAC,EAAD,CAAMhJ,MAAO,CAAEkQ,WAAY,GAAI3I,eAAgB,IAA/C,SACE,eAAC,EAAD,CACEvH,MAAO,CACLyB,SAAU,GACVwH,QAAS,OACTC,cAAe,MACf5H,WAAY,UALhB,UAQE,cAAC,EAAD,CAAMtB,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,kBAAiE,IACjE,cAAC,GAAD,CACEzL,MAAOsB,EACPsE,SAAUO,EACVpE,YAAY,uBAIlB,cAAC,EAAD,CAAM1H,MAAO,CAAEkQ,WAAY,GAAI3I,eAAgB,IAA/C,SACE,eAAC,EAAD,CACEvH,MAAO,CACLyB,SAAU,GACVwH,QAAS,OACTC,cAAe,MACf5H,WAAY,UALhB,UAQE,cAAC,EAAD,CAAMtB,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,oBAAmE,IACnE,cAAC,GAAD,CACEzL,MAAO0L,EACP9F,SAAUmG,EACVhK,YAAY,kCAIlB,cAAC,EAAD,CAAM1H,MAAO,CAAEkQ,WAAY,GAAI3I,eAAgB,IAA/C,SACE,eAAC,EAAD,CACEvH,MAAO,CACLyB,SAAU,GACVwH,QAAS,OACTC,cAAe,MACf5H,WAAY,UALhB,UAQE,cAAC,EAAD,CAAMtB,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,gCAEQ,IACR,cAAC,GAAD,CACEzL,MAAOtB,EACPkH,SAAUjH,EACVoD,YAAY,gDAMlB,eAAC,EAAD,CAAM1H,MAAO,CAAEkQ,WAAY,GAAI3I,eAAgB,IAA/C,UACGoL,EAAmBtG,OAAS,GAC3B,cAAC,EAAD,CAAMrM,MAAO,CAAEI,MAAO,QAASsB,WAAY,QAA3C,SACGiR,IAGL,cAAC,EAAD,CAAM3S,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,2DAGA,cAACxK,EAAA,EAAD,CAAW7F,QA/JD,oBAAAoE,EAAAC,OAAA,gDACdwL,EAAKkB,aACPgB,YAAsBlC,EAAKkB,aAAaP,MAAK,WAC3CqB,EAAsB,2DACtBzM,YAAW,WACTyM,EAAsB,MACrB,QANW,6DA+JV,SACE,eAAC,EAAD,CAAM5S,MAAO,CAAEI,MAAO,OAAQ2S,mBAAoB,aAAlD,sDACsCtE,EAAK4C,cAM/C,eAAC,EAAD,CAAMrR,MAAO,CAAEkQ,WAAY,GAAI3I,eAAgB,IAA/C,UACGkL,EAAqBpG,OAAS,GAC7B,cAAC,EAAD,CAAMrM,MAAO,CAAEI,MAAO,QAASsB,WAAY,QAA3C,SACG+Q,IAGL,cAAC,EAAD,CAAMzS,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,mDAGA,cAACxK,EAAA,EAAD,CAAW7F,QA7LC,oBAAAoE,EAAAC,OAAA,gDAChBwL,EAAKkB,aAAelB,EAAKkB,YAAYT,OACvC2B,YAAuBpC,EAAMA,EAAKkB,YAAYT,OAAOE,MAAK,WACxDmB,EACE,0EAEFvM,YAAW,WACTuM,EAAwB,MACvB,QARa,6DA6LZ,SACE,cAAC,EAAD,CAAM1S,MAAO,CAAEI,MAAO,OAAQ2S,mBAAoB,aAAlD,0EAOJ,eAAC,EAAD,CAAM/S,MAAO,CAAEkQ,WAAY,GAAI3I,eAAgB,IAA/C,UACE,cAAC,EAAD,CAAMvH,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,iDAGA,cAAC,EAAD,+FAIA,cAACxK,EAAA,EAAD,CAAW7F,QArLC,oBAAAoE,EAAAC,OAAA,gDAChBwL,EAAKkB,aACPmB,YAAWrC,EAAKkB,aAAaP,MAAK,WAChCb,EAAS9B,SAHO,6DAqLZ,SACE,cAAC,EAAD,CACE5O,MAAO,CACLI,MAAON,EAAON,IACdkC,WAAY,OACZqR,mBAAoB,aAJxB,6CCxNCrH,GApBC,SAAC,GAIV,IAHLwH,EAGI,EAHJA,WAIQzE,EAASS,YAAYH,IAArBN,KACR,OACE,mCACGA,GACC,qCACE,cAAC,EAAD,CAAMzO,MAAO,CAAEuM,aAAc,GAAIxF,UAAW,UAA5C,gCAGA,cAAC,GAAD,CAAalG,MAAM,SAASkK,aAAc,kBAAMmI,GAAW,YCFtD,SAASC,KACtB,IAAQ1E,EAASS,YAAYH,IAArBN,KACFiC,EAAWC,cACX5L,EAAKC,cAEX,EAAkCvB,oBAAS,GAA3C,WAAO2P,EAAP,KAAkBC,EAAlB,KACA,EAAwC5P,oBAAS,GAAjD,WAAO6P,EAAP,KAAqB7B,EAArB,KACA,EAAgChO,oBAAS,GAAzC,WAAO8P,EAAP,KAAiBf,EAAjB,KACA,EAA8B/O,oBAAS,GAAvC,WAAO+P,EAAP,KAAgBN,EAAhB,KACA,EAAwBzP,oBAAS,GAAjC,WAAO2H,EAAP,KAAaC,EAAb,KAUA,OARA5K,qBAAU,WACJgO,GAAQA,EAAKqC,KACf5E,YAAW3G,YAAIR,EAAI,SAAU0J,EAAKqC,MAAM,SAACvL,GACvCmL,EAAShC,GAAWnJ,EAAI6G,cAG3B,IAGD,eAAC,EAAD,CAAMpM,MAAOW,GAAOC,UAApB,UACG6N,EACC,cAAC,GAAD,IAEA,eAAC,EAAD,CAAMzO,MAAOW,GAAO8S,MAApB,UACE,cAAC,EAAD,CAAMzT,MAAOW,GAAO+S,aAApB,8HAIA,cAAC,GAAD,CACE7S,MAAM,eACNkK,aAAc,kBAAMsI,GAAa,IACjCrI,SAAS,UACTC,aAAa,UAEf,cAAC,GAAD,CACEpK,MAAM,qBACNkK,aAAc,kBAAM0G,GAAgB,IACpCzG,SAAS,YACTC,aAAa,UAEf,cAAC,IAAD,CACE0I,aAAchT,GAAOiT,QACrB3G,UAAWmG,EACXS,gBAAiB,kBAAMR,GAAcD,IAHvC,SAKE,cAAC,GAAD,CAAO3B,gBAAiBA,MAE1B,cAAC,IAAD,CACEkC,aAAchT,GAAOiT,QACrB3G,UAAWqG,EACXO,gBAAiB,kBAAMpC,GAAiB6B,IAH1C,SAKE,cAAC,GAAD,CAAU7B,gBAAiBA,SAIhChD,GACC,eAAC,IAAD,CACEqF,YAAa,CAAExT,gBAAiBR,EAAOV,OAEvCiJ,eAAgB,CAAE0L,OAAQ,IAC1BC,OAAQ5I,EACR6I,KAAM,CAAEhN,KAAM,OAAQ7G,MAAON,EAAOT,OACpC6U,SAAU,CAAEjN,KAAM,QAAS7G,MAAON,EAAOT,OACzC0B,QAAS,kBAAMsK,GAASD,IACxB+I,OAAQ,kBAAM9I,GAAQ,IACtB+I,QAAS,kBAAM/I,GAAQ,IATzB,UAWE,cAAC,IAAUgJ,OAAX,CACErU,MAAO,CAAE+T,OAAQ,IACjBD,YAAa,CAAExT,gBAAiBR,EAAOV,OAEvC6U,KAAM,CAAEhN,KAAM,MAAO7G,MAAON,EAAOT,OACnCwB,MAAM,qBACNyT,WAAY,CAAEtM,SAAU,WAAY+L,OAAQ,IAC5ChT,QAAS,WACPsK,GAAQ,GACR6H,GAAW,MAGf,cAAC,IAAUmB,OAAX,CACErU,MAAO,CAAE+T,OAAQ,IACjBD,YAAa,CAAExT,gBAAiBR,EAAOV,OAEvC6U,KAAM,CAAEhN,KAAM,OAAQ7G,MAAON,EAAOT,OACpCwB,MAAM,wBACNyT,WAAY,CAAEtM,SAAU,WAAY+L,OAAQ,IAC5ChT,QAAS,WACPsK,GAAQ,GACRmH,GAAY,SAKnBgB,GACC,cAAC,GAAD,CAAYpI,KAAMoI,EAASnI,QAAS6H,EAApC,SACE,cAAC,GAAD,CAASA,WAAYA,MAGxBK,GACC,cAAC,GAAD,CAAYnI,KAAMmI,EAAUlI,QAASmH,EAArC,SACE,cAAC,GAAD,CAAaA,YAAaA,SAOpC,IAAM7R,GAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTqI,QAAS,OACT5H,KAAM,EACN8H,WAAY,IAEdsK,MAAO,CACLlK,iBAAkB,GAClB5H,UAAW,IAEb+R,aAAc,CACZ3M,UAAW,SACXtF,SAAU,GACV8F,eAAgB,IAElBqM,QAAS,CACP7L,YAAa,EACbF,aAAc,GACdyB,MAAO,MACPhJ,gBAAiB,cACjBkB,QAAS,K,UC7CPb,GAASQ,IAAWC,OAAO,CAC/BmT,IAAK,CAAEjT,WAAY,SAAUiG,eAAgB,IAC7C1G,MAAO,CAAEY,SAAU,GAAIsF,UAAW,UAClChI,KAAM,CAAE0C,SAAU,GAAIsF,UAAW,UACjCyN,cAAe,CACbhT,QAAS,IAEXoS,QAAS,CACP7L,YAAa,EACbF,aAAc,GACdyB,MAAO,MACPhJ,gBAAiBR,EAAOT,MACxBmC,QAAS,GACT6H,OAAQ,MAIGoL,GA/GI,WACjB,MAAsChR,oBAAS,GAA/C,WAAOiR,EAAP,KAAoBC,EAApB,KAEA,OACE,eAAC,EAAD,CACE3U,MAAO,CACLgJ,OAAQmB,IAAWC,IAAI,UAAUpB,OACjCC,QAAS,OACTC,cAAe,SACf5H,WAAY,SACZD,KAAM,EACN8H,WAAY,IAPhB,UAUE,eAAC,EAAD,CAAMnJ,MAAOW,GAAO4T,IAApB,UACE,cAAC,EAAD,CAAMvU,MAAOW,GAAOE,MAApB,6BACA,cAAC,EAAD,CAAMb,MAAOW,GAAO5B,KAApB,oBAEF,eAAC,EAAD,CAAMiB,MAAOW,GAAO4T,IAApB,UACE,cAAC,EAAD,CAAMvU,MAAOW,GAAOE,MAApB,2BACA,eAAC,EAAD,CACEb,MAAO,CACLiJ,QAAS,OACTC,cAAe,MACf3H,eAAgB,SAChBD,WAAY,UALhB,UAQE,cAACsF,EAAA,EAAD,CACE7F,QAAS,kBACP6T,KAAQC,QAAQ,0CAFpB,SAKE,cAAC/N,EAAA,EAAD,CACEE,KAAM,GACNC,KAAK,YACLjH,MAAO,CAACW,GAAO6T,cAAe,CAAEpU,MAAO,gBAG3C,cAACwG,EAAA,EAAD,CACE7F,QAAS,kBACP6T,KAAQC,QAAQ,yCAFpB,SAKE,cAAC/N,EAAA,EAAD,CACEE,KAAM,GACNC,KAAK,kBACLjH,MAAO,CAACW,GAAO6T,cAAe,CAAEpU,MAAO,gBAG3C,cAACwG,EAAA,EAAD,CAAW7F,QAAS,kBAAM4T,GAAgBD,IAA1C,SACE,cAAC5N,EAAA,EAAD,CACEE,KAAM,GACNC,KAAK,QACLjH,MAAO,CAACW,GAAO6T,cAAe,CAAEpU,MAAO,cAG3C,cAACwG,EAAA,EAAD,CAAW7F,QAAS,kBAAM4T,GAAgBD,IAA1C,SACE,cAAC5N,EAAA,EAAD,CACEE,KAAM,GACNC,KAAK,WACLjH,MAAO,CAACW,GAAO6T,cAAe,CAAEpU,MAAON,EAAOR,mBAKtD,eAAC,EAAD,CAAMU,MAAOW,GAAO4T,IAApB,UACE,cAAC,EAAD,CAAMvU,MAAOW,GAAOE,MAApB,4BACA,cAAC,EAAD,CAAMb,MAAOW,GAAO5B,KAApB,uDAEF,eAAC,IAAD,CACE4U,aAAchT,GAAOiT,QACrB3G,UAAWyH,EACXb,gBAAiB,kBAAMc,GAAgBD,IAHzC,UAKE,cAAC,EAAD,CAAM1U,MAAO,CAAEwB,QAAS,IAAxB,SACE,eAAC,EAAD,CAAMxB,MAAO,CAAEiJ,QAAS,OAAQC,cAAe,OAA/C,UACE,cAAC,EAAD,CAAMlJ,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,mCAEQ,IAHV,sBAOF,cAAC,EAAD,CAAMpR,MAAO,CAAEwB,QAAS,IAAxB,SACE,eAAC,EAAD,CAAMxB,MAAO,CAAEiJ,QAAS,OAAQC,cAAe,OAA/C,UACE,cAAC,EAAD,CAAMlJ,MAAO,CAAE0B,WAAY,OAAQ0P,YAAa,GAAhD,oBAAmE,IADrE,iC,qkBCzEV,IAAM0D,GAAYC,cAgIlB,IAAMpU,GAASQ,IAAWC,OAAO,CAC/B4T,OAAQ,CACN1K,YAAaxK,EAAOR,OACpBiL,aAAc,CACZjB,MAAO,EACPN,OAAQ,IAEVwB,cAAe,IACfC,aAAc,IACdrB,UAAW,KAIf,SAAS6L,GAAWvV,GAIlB,OAAO,cAACoH,EAAA,EAAD,IAAaE,KAAM,GAAIhH,MAAO,CAAEuM,cAAe,IAAS7M,IAGlDwV,OAlJf,WACE,IAAMtE,EAAOC,cACP9L,EAAKC,cACHyJ,EAAuCS,YAAYH,IAAnDN,KACFiC,EAAWC,cAEjB,EAA8BwE,YAAe,GAA7C,WAAOC,EAAP,KAAgBC,EAAhB,KAEAF,aAAgB,WACdG,YAAmB1E,GAAM,SAACnC,GAEtBiC,EADEjC,EACOJ,GAAUI,GAEVG,WAGZ,IAEH,IAAM2G,EAAeJ,eAAkB,0BAAAhQ,EAAAC,OAAA,oDACjCqJ,IAAQA,EAAKqC,IADoB,kCAAA3L,EAAA,MAEbqQ,YAAOjQ,YAAIR,EAAI,SAAU0J,EAAKqC,OAFjB,QAE7B2E,EAF6B,QAGvBtJ,UACkB,UAAxBsJ,EAAQrJ,OAAOuC,KACjB0G,GAAW,GAIRA,GAAW,GATiB,sBAU9BA,GAAW,GAVmB,8DAWpC,CAAC5G,IAMJ,OAJA0G,aAAgB,WACdI,MACC,CAACA,IAGF,eAACT,GAAUY,UAAX,CACEC,iBAAiB,OACjBC,cAAe,CACbC,sBAAuB/V,EAAOZ,MAC9B4W,4BAA6BhW,EAAOR,OACpCyW,gBAAiB,CACflO,aAAc,IAEhBmO,wBAAyBlW,EAAOR,OAChC2W,iBAAiB,EACjBC,YAAY,IACVlO,SAAU,WACV+L,OAAQ,GACRoC,KAAM,GACNlO,MAAO,GACP3H,gBAAiBR,EAAOX,KACxB0I,aAAc,GACdmB,OAAQ,IACLrI,GAAOqU,SAlBhB,UAsBE,cAACF,GAAUsB,OAAX,CACEnP,KAAK,OACLoP,UAAWlG,GACXmG,QAAS,cAAG9V,WAAH,MAAiD,CACxDK,MAAO,OACP0V,WAAY,gBAAGnW,EAAH,EAAGA,MAAH,OAAe,cAAC6U,GAAD,CAAYhO,KAAK,SAAS7G,MAAOA,KAC5DoW,aAAa,MAGhBpB,GACC,cAACN,GAAUsB,OAAX,CACEnP,KAAK,QACLoP,UAAWpH,GACXqH,QAAS,CACPzV,MAAO,QACP2V,aAAa,EACbD,WAAY,gBAAGnW,EAAH,EAAGA,MAAH,OAAe,cAAC6U,GAAD,CAAYhO,KAAK,OAAO7G,MAAOA,QAIhE,cAAC0U,GAAUsB,OAAX,CACEnP,KAAK,UACLoP,UAAWlD,GACXmD,QAAS,CACPzV,MAAO,UACP2V,aAAa,EACbD,WAAY,YAAgB,IAChB,EADGnW,EAAY,EAAZA,MACb,OAAIqO,EACkB,QAAhBsC,IAASC,IAAgB,SAACvC,EAAKwC,WAAL,EAAeC,SAAS,QAWlD,cAAC,EAAD,CAAMlR,MAAO,CAAEM,gBAAiB,eAAhC,SACE,cAAC,UAAD,CACE6Q,IAAK1C,EAAKwC,SACV3H,MAAO,GACPN,OAAQ,GACRhJ,MAAO,CAAE6H,aAAc,QAd3B,cAACuI,EAAA,EAAD,CACEC,OAAQ,CACNc,IAAK1C,EAAKwC,UAEZjR,MAAO,CAAE6H,aAAc,GAAIyB,MAAO,GAAIN,OAAQ,MAexC,cAACiM,GAAD,CAAYhO,KAAK,OAAO7G,MAAOA,QAInD,cAAC0U,GAAUsB,OAAX,CACEnP,KAAK,OACLoP,UAAW5B,GACX6B,QAAS,cAAG9V,WAAH,MAAiD,CACxDK,MAAO,OACP0V,WAAY,gBAAGnW,EAAH,EAAGA,MAAH,OACV,cAAC6U,GAAD,CAAYhO,KAAK,cAAc7G,MAAOA,KAExCoW,aAAa,UC/FRC,GAjCqC,CAClDC,SAAU,C,OAAC9B,EAAgB,MAC3B+B,OAAQ,CACNC,QAAS,CACPC,KAAM,CACJD,QAAS,CACPE,KAAM,CACJF,QAAS,CACPzG,WAAY,SAGhB4G,MAAO,CACLH,QAAS,CACP3H,YAAa,UAGjB+H,QAAS,CACPJ,QAAS,CACPzD,cAAe,YAGnB8D,KAAM,CACJL,QAAS,CACPnC,WAAY,WAKpByC,SAAU,OCzBD,SAASC,GAAT,GAIX,IAHFC,EAGC,EAHDA,YAIA,OACE,cAACC,EAAA,EAAD,CACEZ,QAASa,GACT1X,MAAuB,SAAhBwX,EAAyBG,IAAYC,IAF9C,SAIE,cAACC,GAAD,MASN,IAAMC,GAAQC,cAEd,SAASF,KACP,OACE,eAACC,GAAMhC,UAAP,WACE,cAACgC,GAAMtB,OAAP,CACEnP,KAAK,OACLoP,UAAWnB,GACXoB,QAAS,CAAEE,aAAa,KAE1B,cAACkB,GAAMtB,OAAP,CACEnP,KAAK,WACLoP,UAAW9V,EACX+V,QAAS,CAAEzV,MAAO,c,iCCxCpB+W,GAAUC,2BAAgB,CAAEpJ,KAAMT,KAClC8J,GAAa,CAACC,MAQLC,GAPDC,uBACZL,GAJmB,GAMnBM,+BAAoBC,mBAAe,WAAf,EAAmBL,MCD1BM,GAVQ,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,UCajB,GALAC,IAAOC,WAAW,CAAC,oBACnBD,IAAOC,WAAW,CAChB,mGAGuB,IAArBC,eAAUzM,OACA0M,aAAcX,IAIb,SAASY,KACtB,IAAMC,ECrBO,WACb,MAAgDxV,oBAAS,GAAzD,WAAOwV,EAAP,KAA0BC,EAA1B,KAyBA,OAtBAzY,qBAAU,WACR,EAAA0E,EAAAC,OAAA,gEAEI+T,MAFJ,WAAAhU,EAAA,MAKUiU,IAAA,OACDtS,IAAYuS,MADX,IAEJ,aAAc/I,EAAQ,SAP5B,sDAWIgJ,QAAQC,KAAR,MAXJ,uBAaIL,GAAmB,GACnBC,MAdJ,mFAmBC,IAEIF,EDLmBO,GACpBpC,EAAcxY,IAEpB,OAAKqa,EAID,cAAC,IAAD,UACE,eAAC,IAAD,CAAejB,MAAOA,GAAtB,UACE,cAACb,GAAD,CAAYC,YAAaA,IACzB,cAACqC,EAAA,EAAD,SANC,O,0DE9BXC,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/app.4bc20803.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","// export default {\n//   light: {\n//     text: \"#F1F1E6\",\n//     background: \"#17567B\",\n//   },\n//   dark: {\n//     text: \"#F1F1E6\",\n//     background: \"#17567B\",\n//   },\n//   black: \"#0E131F\",\n//   violet: \"#38405F\",\n//   darkBlue: \"#17567B\",\n//   lightBlue: \"#00BAFF\",\n//   red: \"#FF0035\",\n//   white: \"#F1F1E6\",\n//   yellow: \"#E69C24\",\n// };\n\nexport default {\n  light: {\n    text: \"#393E41\",\n    background: \"#E7E5DF\",\n  },\n  dark: {\n    text: \"#393E41\",\n    background: \"#E7E5DF\",\n  },\n  black: \"#393E41\",\n  gray: \"#D3D0CB\",\n  green: \"#44BBA4\",\n  white: \"#E7E5DF\",\n  yellow: \"#E7BB41\",\n  violet: \"#38405F\",\n  red: \"#FF0035\",\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport { Text, View } from \"../components/Themed\";\nimport Colors from \"../constants/Colors\";\nimport { RootStackScreenProps } from \"../types\";\n\nexport default function NotFoundScreen({\n  navigation,\n}: RootStackScreenProps<\"NotFound\">) {\n  useEffect(() => {\n    navigation.navigate(\"Root\");\n  }, []);\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>404 - NOT FOUND</Text>\n      <TouchableOpacity\n        onPress={() => navigation.replace(\"Root\")}\n        style={styles.link}\n      >\n        <Text style={styles.linkText}>Lost? Go back home!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // backgroundColor: Colors.darkBlue,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 35,\n    fontWeight: \"bold\",\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 15,\n    color: Colors.white,\n  },\n});\n","export interface IItem {\r\n  clientName?: string;\r\n  clientPhoneNumber?: string;\r\n  itemId?: string;\r\n  model?: string;\r\n  serialNumber?: string;\r\n  status:\r\n    | \"En attente\"\r\n    | \"Réparé\"\r\n    | \"Devis\"\r\n    | \"Retour au client\"\r\n    | \"Attente de pièces\";\r\n  prestation?: number;\r\n  diagnostic?: string;\r\n  clientNote?: string;\r\n  createdAt?: string;\r\n  modifiedAt?: string;\r\n  finishedAt?: string;\r\n}\r\n\r\nexport const getMonthByLetter = () => {\r\n  let letter = \"\";\r\n  const month = new Date().getMonth();\r\n  switch (month) {\r\n    case 0:\r\n      letter = \"A\";\r\n      break;\r\n    case 1:\r\n      letter = \"B\";\r\n      break;\r\n    case 2:\r\n      letter = \"C\";\r\n      break;\r\n    case 3:\r\n      letter = \"D\";\r\n      break;\r\n    case 4:\r\n      letter = \"E\";\r\n      break;\r\n    case 5:\r\n      letter = \"F\";\r\n      break;\r\n    case 6:\r\n      letter = \"G\";\r\n      break;\r\n    case 7:\r\n      letter = \"H\";\r\n      break;\r\n    case 8:\r\n      letter = \"I\";\r\n      break;\r\n    case 9:\r\n      letter = \"J\";\r\n      break;\r\n    case 10:\r\n      letter = \"K\";\r\n      break;\r\n    case 11:\r\n      letter = \"L\";\r\n      break;\r\n    default:\r\n      letter = \"\";\r\n  }\r\n  return letter;\r\n};\r\n\r\nexport const createNewId = (id: string) => {\r\n  const id_year_month = id.substring(0, 3);\r\n  let id_number = parseInt(id.substring(3));\r\n  let id_number_string = \"\";\r\n  let new_id = \"\";\r\n  const current_year_month = \"22\" + getMonthByLetter();\r\n  if (id_year_month === current_year_month) {\r\n    id_number++;\r\n    if (id_number >= 100) {\r\n      id_number_string = id_number.toString();\r\n    } else if (100 > id_number && id_number >= 10) {\r\n      id_number_string = \"0\".concat(id_number.toString());\r\n    } else if (10 > id_number) {\r\n      id_number_string = \"00\".concat(id_number.toString());\r\n    }\r\n    new_id = id_year_month + id_number_string;\r\n  } else {\r\n    new_id = current_year_month + \"001\";\r\n  }\r\n  return new_id;\r\n};\r\n\r\nexport const localISODate = () => {\r\n  let tzoffset = new Date().getTimezoneOffset() * 60000;\r\n  let local = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\r\n  let date = local.substring(0, 10) + \" \" + local.substring(11, 16);\r\n  return date;\r\n};\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport React, { Dispatch, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Pressable,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { ButtonGroup, CheckBox } from \"react-native-elements\";\r\n\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { IItem, localISODate } from \"../../utils/method\";\r\n\r\nconst StatusList = [\r\n  \"En attente\",\r\n  \"Réparé\",\r\n  \"Devis\",\r\n  \"Retour au client\",\r\n  \"Attente de pièces\",\r\n];\r\n\r\nexport default function AdminItemDetails({\r\n  item,\r\n  setItem,\r\n  openAdminItemDetails,\r\n  setOpenAdminItemDetails,\r\n}: {\r\n  item: IItem;\r\n  setItem: Dispatch<React.SetStateAction<IItem | undefined>>;\r\n  openAdminItemDetails: boolean;\r\n  setOpenAdminItemDetails: Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const theme = useColorScheme();\r\n  const [success, setSuccesss] = useState(\"\");\r\n  const [finishedCheck, setFinishedCheck] = useState(\r\n    item.finishedAt ? true : false\r\n  );\r\n  const [statusIdx, setStatusIdx] = useState(\r\n    StatusList.findIndex((e) => e === item.status)\r\n  );\r\n  const [phoneNumber, setPhoneNumber] = useState(\r\n    item.clientPhoneNumber ? item.clientPhoneNumber : \"\"\r\n  );\r\n  const [model, setModel] = useState(item.model ? item.model : \"\");\r\n  const [serialNumber, setSerialNumber] = useState(\r\n    item.serialNumber ? item.serialNumber : \"\"\r\n  );\r\n  const [prestation, setPrestation] = useState(\r\n    item.prestation ? item.prestation : 0\r\n  );\r\n  const [diagnostic, setDiagnostic] = useState(\r\n    item.diagnostic ? item.diagnostic : \"\"\r\n  );\r\n  const db = getFirestore();\r\n\r\n  const updateStatus = useCallback(async () => {\r\n    if (statusIdx && item.itemId) {\r\n      await updateDoc(doc(db, \"items\", item.itemId), {\r\n        status: StatusList[statusIdx],\r\n      });\r\n    }\r\n  }, [statusIdx]);\r\n\r\n  useEffect(() => {\r\n    updateStatus();\r\n  }, [updateStatus]);\r\n\r\n  const updateFinishedDate = useCallback(async () => {\r\n    if (item.itemId) {\r\n      if (finishedCheck) {\r\n        await updateDoc(doc(db, \"items\", item.itemId), {\r\n          finishedAt: localISODate(),\r\n        });\r\n      } else {\r\n        await updateDoc(doc(db, \"items\", item.itemId), {\r\n          finishedAt: null,\r\n        });\r\n      }\r\n    }\r\n  }, [finishedCheck]);\r\n\r\n  useEffect(() => {\r\n    updateFinishedDate();\r\n  }, [updateFinishedDate]);\r\n\r\n  const updateHandler = async (key: string, value: string | number) => {\r\n    if (key && item.itemId) {\r\n      let updatedValue: any = {};\r\n      await updateDoc(\r\n        doc(db, \"items\", item.itemId),\r\n        Object.defineProperty(updatedValue, key, {\r\n          value: typeof value === \"string\" ? value.toLowerCase() : value,\r\n          configurable: true,\r\n          writable: true,\r\n          enumerable: true,\r\n        })\r\n      );\r\n      setSuccesss(key);\r\n      setTimeout(() => {\r\n        setSuccesss(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={openAdminItemDetails}\r\n        onRequestClose={() => {\r\n          setOpenAdminItemDetails(!openAdminItemDetails);\r\n          setItem(undefined);\r\n        }}\r\n      >\r\n        <ScrollView>\r\n          <View style={styles.centeredView}>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setOpenAdminItemDetails(!openAdminItemDetails);\r\n                setItem(undefined);\r\n              }}\r\n            >\r\n              <FontAwesome\r\n                style={{\r\n                  color: Colors.white,\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                size={25}\r\n                name=\"close\"\r\n              />\r\n            </Pressable>\r\n            <View style={styles.modalView}>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>Numéro de bon:</Text>\r\n                <Text style={{ fontSize: 45, fontWeight: \"bold\" }}>\r\n                  {item.itemId}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>Nom du client:</Text>\r\n                <Text style={{ fontSize: 30, fontWeight: \"600\" }}>\r\n                  {item.clientName}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <Text style={styles.modalText}>\r\n                  Date d'entrée: {item.createdAt}\r\n                </Text>\r\n                <View>\r\n                  <Text style={styles.modalText}>Numéro de téléphone:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={phoneNumber}\r\n                      onChangeText={(e) => setPhoneNumber(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"phoneNumber\", phoneNumber)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"phoneNumber\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View style={styles.modalBlock}>\r\n                <View>\r\n                  <Text style={styles.modalText}>Modèle:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={model}\r\n                      onChangeText={(e) => setModel(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"model\", model)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"model\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Numéro de série:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={serialNumber}\r\n                      onChangeText={(e) => setSerialNumber(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() =>\r\n                        updateHandler(\"serialNumber\", serialNumber)\r\n                      }\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"serialNumber\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Etat:</Text>\r\n                  <ButtonGroup\r\n                    buttons={[\r\n                      \"En attente\",\r\n                      \"Réparé\",\r\n                      \"Devis\",\r\n                      \"Retour au client\",\r\n                      \"Attente de pièces\",\r\n                    ]}\r\n                    selectedIndex={statusIdx}\r\n                    onPress={(value) => {\r\n                      setStatusIdx(value);\r\n                    }}\r\n                    containerStyle={{ margin: 0 }}\r\n                    selectedButtonStyle={[\r\n                      statusIdx === 0 && { backgroundColor: Colors.red },\r\n                      statusIdx === 1 && { backgroundColor: \"green\" },\r\n                      statusIdx === 2 && { backgroundColor: Colors.violet },\r\n                      statusIdx === 3 && { backgroundColor: Colors.red },\r\n                      statusIdx === 4 && { backgroundColor: Colors.yellow },\r\n                    ]}\r\n                    selectedTextStyle={{ color: Colors.white }}\r\n                  />\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Prestation:</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={prestation.toString()}\r\n                      onChangeText={(e) =>\r\n                        setPrestation(isNaN(parseFloat(e)) ? 0 : parseFloat(e))\r\n                      }\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"prestation\", prestation)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"save\" size={25} color=\"orange\" />\r\n                    </Pressable>\r\n                    {success === \"prestation\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.modalText}>Diagnostique</Text>\r\n                  <View style={{ marginVertical: 5 }}>\r\n                    <TextInput\r\n                      value={diagnostic}\r\n                      onChangeText={(e) => setDiagnostic(e)}\r\n                      placeholder=\"\"\r\n                      style={{\r\n                        paddingVertical: 10,\r\n                        paddingLeft: 10,\r\n                        paddingRight: 40,\r\n                        borderRadius: 15,\r\n                        backgroundColor: Colors.black,\r\n                        color: Colors.white,\r\n                        borderColor: Colors.white,\r\n                        borderWidth: 1,\r\n                      }}\r\n                    />\r\n                    <Pressable\r\n                      onPress={() => updateHandler(\"diagnostic\", diagnostic)}\r\n                      style={{ position: \"absolute\", right: 10, top: 10 }}\r\n                    >\r\n                      <FontAwesome name=\"send\" size={25} color={Colors.green} />\r\n                    </Pressable>\r\n                    {success === \"diagnostic\" && (\r\n                      <FontAwesome\r\n                        name=\"check\"\r\n                        size={25}\r\n                        color=\"green\"\r\n                        style={{ position: \"absolute\", right: 40, top: 10 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              {item.clientNote && (\r\n                <View style={styles.modalBlock}>\r\n                  <Text style={styles.modalText}>Note laissée:</Text>\r\n                  <Text style={{ fontSize: 15, fontStyle: \"italic\" }}>\r\n                    {item.clientNote}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n              <View style={styles.modalBlock}>\r\n                <CheckBox\r\n                  center\r\n                  title=\"Marqué comme sortie\"\r\n                  checkedColor={Colors.green}\r\n                  containerStyle={{ backgroundColor: Colors.white }}\r\n                  checked={finishedCheck}\r\n                  onPress={() => setFinishedCheck(!finishedCheck)}\r\n                />\r\n                {item.finishedAt && (\r\n                  <Text style={[styles.modalText, { textAlign: \"center\" }]}>\r\n                    Sortie le: {item.finishedAt}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    paddingTop: 20,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    top: 5,\r\n    right: 10,\r\n    borderRadius: 50,\r\n    padding: 10,\r\n    elevation: 9,\r\n    backgroundColor: Colors.red,\r\n    zIndex: 90,\r\n  },\r\n  modalView: {\r\n    width: \"100%\",\r\n  },\r\n  modalText: {\r\n    fontSize: 15,\r\n  },\r\n  modalBlock: {\r\n    marginHorizontal: 30,\r\n    marginVertical: 20,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  Pressable,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport ItemDetails from \"./ItemDetails\";\r\nimport { Text, View } from \"../Themed\";\r\nimport { IItem } from \"../../utils/method\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst ItemsList = ({\r\n  items,\r\n  openList,\r\n  setOpenList,\r\n}: {\r\n  items: IItem[];\r\n  openList: boolean;\r\n  setOpenList: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const [item, setItem] = useState<IItem>();\r\n  const [openAdminItemDetails, setOpenAdminItemDetails] = useState(false);\r\n\r\n  const showItemDetails = (item: IItem) => {\r\n    setOpenAdminItemDetails(true);\r\n    setItem(item);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.listView}>\r\n      <View style={styles.buttoncontainer}>\r\n        <Pressable style={styles.button} onPress={() => setOpenList(!openList)}>\r\n          <FontAwesome\r\n            style={{\r\n              color: Colors.white,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n            }}\r\n            size={20}\r\n            name=\"close\"\r\n          />\r\n        </Pressable>\r\n      </View>\r\n      <View style={{ width: \"100%\", display: \"flex\" }}>\r\n        {items.map((item: IItem) => (\r\n          <TouchableOpacity\r\n            key={item.itemId}\r\n            onPress={() => showItemDetails(item)}\r\n          >\r\n            <View\r\n              style={{\r\n                borderRadius: 10,\r\n                backgroundColor: Colors.gray,\r\n                width: Dimensions.get(\"window\").width - 10,\r\n                marginHorizontal: \"auto\",\r\n                marginVertical: 8,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 5,\r\n                shadowColor: Colors.black,\r\n                shadowOffset: { width: 0, height: 1 },\r\n                shadowOpacity: 0.3,\r\n                shadowRadius: 10,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  width: \"100%\",\r\n                  backgroundColor: \"transparent\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <Text>{item.itemId}</Text>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  flex: 6,\r\n                  backgroundColor: \"transparent\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    display: \"flex\",\r\n                    backgroundColor: \"transparent\",\r\n                    flexDirection: \"row\",\r\n                    paddingVertical: 5,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      backgroundColor: \"transparent\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\r\n                      {item.clientName}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      backgroundColor: \"transparent\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text>{item.model}</Text>\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    borderTopWidth: 1,\r\n                    borderTopColor: Colors.yellow,\r\n                    flex: 1,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    paddingVertical: 5,\r\n                    backgroundColor: \"transparent\",\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      backgroundColor: \"transparent\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontStyle: \"italic\" }}>\r\n                      {item.clientPhoneNumber}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      backgroundColor: \"transparent\",\r\n                      flex: 1,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={[\r\n                        {\r\n                          color: Colors.white,\r\n                          fontWeight: \"bold\",\r\n                          paddingHorizontal: 3,\r\n                        },\r\n                        item.status === \"En attente\" && {\r\n                          backgroundColor: Colors.red,\r\n                        },\r\n                        item.status === \"Réparé\" && {\r\n                          backgroundColor: \"green\",\r\n                        },\r\n                        item.status === \"Devis\" && {\r\n                          backgroundColor: Colors.violet,\r\n                        },\r\n                        item.status === \"Retour au client\" && {\r\n                          backgroundColor: Colors.red,\r\n                        },\r\n                        item.status === \"Attente de pièces\" && {\r\n                          backgroundColor: Colors.yellow,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      {item.status}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      {openAdminItemDetails && item && (\r\n        <ItemDetails\r\n          item={item}\r\n          setItem={setItem}\r\n          openAdminItemDetails={openAdminItemDetails}\r\n          setOpenAdminItemDetails={setOpenAdminItemDetails}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  listView: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    paddingTop: 30,\r\n    paddingBottom: 10,\r\n  },\r\n  buttoncontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 40,\r\n    width: 40,\r\n    marginVertical: 10,\r\n    borderRadius: 50,\r\n    padding: 10,\r\n    elevation: 10,\r\n    backgroundColor: Colors.red,\r\n  },\r\n  textDesc: {\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nexport default ItemsList;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { Text, View } from \"../Themed\";\r\n\r\nconst BiyouButton = ({\r\n  title,\r\n  clickHandler,\r\n  iconName,\r\n  iconPosition,\r\n}: {\r\n  title: string;\r\n  clickHandler: any;\r\n  iconName?: string;\r\n  iconPosition?: \"before\" | \"after\";\r\n}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.button} onPress={clickHandler}>\r\n        {iconName && iconPosition === \"before\" && (\r\n          <FontAwesome size={20} name={iconName as any} color={Colors.white} />\r\n        )}\r\n        <Text\r\n          style={{\r\n            color: Colors.white,\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            padding: 10,\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        {iconName && iconPosition === \"after\" && (\r\n          <FontAwesome size={20} name={iconName as any} color={Colors.white} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"transparent\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginVertical: 4,\r\n    marginHorizontal: \"auto\",\r\n    minWidth: \"50%\",\r\n    backgroundColor: Colors.green,\r\n    borderColor: Colors.green,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 15,\r\n  },\r\n});\r\n\r\nexport default BiyouButton;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\nimport { Dimensions, Modal, Pressable, ScrollView } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { View } from \"../Themed\";\r\n\r\nconst BiyouModal = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n}: {\r\n  children: React.ReactNode;\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        paddingTop: 16,\r\n      }}\r\n    >\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={open}\r\n        onRequestClose={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <ScrollView>\r\n            <View\r\n              style={{\r\n                height: Dimensions.get(\"window\").height - 20,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Pressable\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 5,\r\n                  right: 10,\r\n                  borderRadius: 50,\r\n                  padding: 10,\r\n                  elevation: 10,\r\n                  zIndex: 50,\r\n                  backgroundColor: Colors.red,\r\n                }}\r\n                onPress={() => setOpen(!open)}\r\n              >\r\n                <FontAwesome\r\n                  style={{\r\n                    color: Colors.white,\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  size={25}\r\n                  name=\"close\"\r\n                />\r\n              </Pressable>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {children}\r\n              </View>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BiyouModal;\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { View } from \"../Themed\";\r\n\r\nconst BiyouTextInput = ({\r\n  placeholder,\r\n  value,\r\n  setValue,\r\n  condition,\r\n}: {\r\n  placeholder: string;\r\n  value?: string;\r\n  setValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  condition?: boolean;\r\n}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={{\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          backgroundColor: Colors.gray,\r\n          color: Colors.black,\r\n          ...(condition\r\n            ? {\r\n                borderColor: Colors.red,\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: Colors.black,\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n        placeholder={placeholder}\r\n        placeholderTextColor={\"#999\"}\r\n        value={value}\r\n        onChangeText={(e) => setValue && setValue(e)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"transparent\",\r\n    marginHorizontal: 15,\r\n    marginVertical: 4,\r\n  },\r\n});\r\n\r\nexport default BiyouTextInput;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { doc, getFirestore, onSnapshot, setDoc } from \"firebase/firestore\";\r\n\r\nimport { Text } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport BiyouModal from \"../elements/Modal\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport { createNewId, localISODate } from \"../../utils/method\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nexport default function AddItem({\r\n  openAddModal,\r\n  setOpenAddModal,\r\n}: {\r\n  openAddModal: boolean;\r\n  setOpenAddModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const db = getFirestore();\r\n\r\n  const getLastId = useCallback(async () => {\r\n    onSnapshot(doc(db, \"currentId\", \"currentId\"), (doc) => {\r\n      if (doc.exists()) {\r\n        setId(createNewId(doc.data().id));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLastId();\r\n  }, [getLastId]);\r\n\r\n  const addHandler = async () => {\r\n    if (id && name && phoneNumber && model) {\r\n      await setDoc(doc(db, \"items\", id), {\r\n        clientName: name.toLowerCase(),\r\n        clientPhoneNumber: phoneNumber,\r\n        itemId: id,\r\n        model,\r\n        status: \"En attente\",\r\n        createdAt: localISODate(),\r\n      });\r\n      await setDoc(doc(db, \"currentId\", \"currentId\"), { id });\r\n      setOpenAddModal(false);\r\n      setName(\"\");\r\n      setPhoneNumber(\"\");\r\n      setModel(\"\");\r\n    } else if (!id) {\r\n      setError(\"Erreur avec le numéro de bon\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      setError(\"Champs obligatoire!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openAddModal} setOpen={setOpenAddModal}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <Text style={styles.modalText}>Ajouter: {id}</Text>\r\n      <BiyouTextInput\r\n        placeholder=\"nom du client\"\r\n        value={name}\r\n        setValue={setName}\r\n        condition={!name}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"numéro de téléphone du client\"\r\n        value={phoneNumber}\r\n        setValue={setPhoneNumber}\r\n        condition={!phoneNumber}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"modèle du produit\"\r\n        value={model}\r\n        setValue={setModel}\r\n        condition={!model}\r\n      />\r\n      <BiyouButton title=\"Ajouter\" clickHandler={addHandler} />\r\n    </BiyouModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  getFirestore,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { Pressable, StyleSheet } from \"react-native\";\r\nimport { BottomSheet, ListItem } from \"react-native-elements\";\r\n\r\nimport { Text } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport BiyouModal from \"../elements/Modal\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst StatusList = [\r\n  \"\",\r\n  \"En attente\",\r\n  \"Réparé\",\r\n  \"Devis\",\r\n  \"Retour au client\",\r\n  \"Attente de pièces\",\r\n];\r\n\r\nconst SearchModal = ({\r\n  setItems,\r\n  setOpenList,\r\n  openSearchModal,\r\n  setOpenSearchModal,\r\n}: {\r\n  setItems: any;\r\n  setOpenList: any;\r\n  openSearchModal: boolean;\r\n  setOpenSearchModal: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const db = getFirestore();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [itemId, setItemId] = useState(\"\");\r\n  const [clientName, setClientName] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n\r\n  const [status, setStatus] = useState(StatusList[0]);\r\n  const [openStatusPicker, setOpenStatusPicker] = useState(false);\r\n\r\n  const searchHandler = async () => {\r\n    const queryConstraints: any[] = [];\r\n    if (itemId) {\r\n      queryConstraints.push(where(\"itemId\", \"==\", itemId.toLowerCase()));\r\n    }\r\n    if (clientName) {\r\n      queryConstraints.push(\r\n        where(\"clientName\", \"==\", clientName.toLowerCase())\r\n      );\r\n    }\r\n    if (model) {\r\n      queryConstraints.push(where(\"model\", \"==\", model.toLowerCase()));\r\n    }\r\n    if (serialNumber) {\r\n      queryConstraints.push(\r\n        where(\"serialNumber\", \"==\", serialNumber.toLowerCase())\r\n      );\r\n    }\r\n    if (status) {\r\n      queryConstraints.push(where(\"status\", \"==\", status));\r\n    }\r\n\r\n    const results: any[] = [];\r\n\r\n    const querySnapshot = await getDocs(\r\n      query(collection(db, \"items\"), ...queryConstraints)\r\n    );\r\n    if (querySnapshot.empty) {\r\n      setError(\"Aucun résultat!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      querySnapshot.forEach((doc) => {\r\n        results.push(doc.data());\r\n      });\r\n      setOpenSearchModal(false);\r\n      setClientName(\"\");\r\n      setItemId(\"\");\r\n      setModel(\"\");\r\n      setSerialNumber(\"\");\r\n      setStatus(StatusList[0]);\r\n      setOpenList(true);\r\n      setItems(results);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openSearchModal} setOpen={setOpenSearchModal}>\r\n      {error.length > 0 && <Text style={styles.error}>{error}</Text>}\r\n      <Text style={styles.modalText}>\r\n        Séléctionnez les paramètres de votre requête\r\n      </Text>\r\n      <BiyouTextInput\r\n        placeholder=\"Numéro de bon\"\r\n        value={itemId}\r\n        setValue={setItemId}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Nom du client\"\r\n        value={clientName}\r\n        setValue={setClientName}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Modèle du produit\"\r\n        value={model}\r\n        setValue={setModel}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"Numéro de série\"\r\n        value={serialNumber}\r\n        setValue={setSerialNumber}\r\n      />\r\n      <Pressable\r\n        onPress={() => setOpenStatusPicker(true)}\r\n        style={{\r\n          marginHorizontal: 15,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          backgroundColor: Colors.gray,\r\n          borderColor: Colors.black,\r\n          borderWidth: 1,\r\n        }}\r\n      >\r\n        {status ? (\r\n          <Text style={{ color: Colors.black }}>{status}</Text>\r\n        ) : (\r\n          <Text style={{ color: \"#999\" }}>Etat</Text>\r\n        )}\r\n      </Pressable>\r\n      <BottomSheet isVisible={openStatusPicker}>\r\n        {StatusList.map((el, i) => (\r\n          <ListItem\r\n            key={i}\r\n            onPress={() => {\r\n              setStatus(el);\r\n              setOpenStatusPicker(false);\r\n            }}\r\n          >\r\n            <ListItem.Content>\r\n              <ListItem.Title>{el.length > 0 ? el : \"*\"}</ListItem.Title>\r\n            </ListItem.Content>\r\n          </ListItem>\r\n        ))}\r\n      </BottomSheet>\r\n      <BiyouButton\r\n        title=\"Chercher\"\r\n        clickHandler={searchHandler}\r\n        iconName=\"search\"\r\n        iconPosition=\"before\"\r\n      />\r\n    </BiyouModal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default SearchModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../utils/method\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport interface IUser {\r\n  uid?: string;\r\n  email?: string;\r\n  emailVerified?: boolean;\r\n  displayName?: string;\r\n  isAnonymous?: boolean;\r\n  photoURL?: string;\r\n  createdAt?: string;\r\n  lastLoginAt?: string;\r\n  apiKey?: string;\r\n  appName?: string;\r\n  // custom collection\r\n  phoneNumber?: string;\r\n  role?: string;\r\n  items?: IItem[];\r\n}\r\n\r\nconst initialState: { status: string; isAuthenticated: boolean; user?: IUser } =\r\n  {\r\n    status: \"idle\",\r\n    isAuthenticated: false,\r\n  };\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    fetchUser: (state, action?) => {\r\n      if (action.payload) {\r\n        state.status = \"complete\";\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      } else {\r\n        state.status = \"complete\";\r\n        state.isAuthenticated = false;\r\n        state.user = undefined;\r\n      }\r\n    },\r\n    updateUser: (state, action) => {\r\n      state.status = \"complete\";\r\n      state.isAuthenticated = true;\r\n      state.user = {\r\n        ...state.user,\r\n        role: action.payload.role,\r\n        items: action.payload.items,\r\n        phoneNumber: action.payload.phoneNumber,\r\n      };\r\n    },\r\n    signOutUser: (state) => {\r\n      state.status = \"complete\";\r\n      state.isAuthenticated = false;\r\n      state.user = undefined;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // builder\r\n    //   .addCase(fetchUser.pending, (state, action) => {\r\n    //     state.status = \"loading\";\r\n    //   })\r\n    //   .addCase(fetchUser.fulfilled, (state, action) => {\r\n    //     state.status = \"complete\";\r\n    //     state.currentUser = action.payload;\r\n    //   })\r\n    //   .addCase(fetchUser.rejected, (state, action) => {\r\n    //     state.status = \"failed\";\r\n    //     state.error = action.error;\r\n    //   })\r\n  },\r\n});\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const { fetchUser, updateUser, signOutUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  onSnapshot,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Text, View } from \"../components/Themed\";\r\nimport ItemsList from \"../components/admin/ItemsList\";\r\nimport AddItem from \"../components/admin/Add\";\r\nimport SearchModal from \"../components/admin/Search\";\r\nimport { IUser, selectUser } from \"../redux/userSlice\";\r\nimport { IItem } from \"../utils/method\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nexport default function AdminScreen() {\r\n  const { user }: { user?: IUser | undefined } = useSelector(selectUser);\r\n  const db = getFirestore();\r\n\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n  const [openSearchModal, setOpenSearchModal] = useState(false);\r\n  const [openList, setOpenList] = useState(false);\r\n  const [items, setItems] = useState<IItem[]>();\r\n\r\n  const fetchItems = async () => {\r\n    setItems([]);\r\n    onSnapshot(query(collection(db, \"items\")), (querySnapshot) => {\r\n      let newlist: any[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        newlist.unshift(doc.data());\r\n      });\r\n      setOpenList(true);\r\n      setItems(newlist);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Text style={styles.title}>Bienvenu admin {user?.displayName}</Text>\r\n          <View style={styles.actions}>\r\n            {/* Ajouter */}\r\n            <TouchableOpacity\r\n              onPress={() => setOpenAddModal(!openAddModal)}\r\n              style={[styles.actioncard, styles.actioncardadd]}\r\n            >\r\n              <FontAwesome size={25} color={Colors.white} name=\"plus-circle\" />\r\n              <Text style={{ color: Colors.white }}>Ajouter</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Chercher */}\r\n            <TouchableOpacity\r\n              onPress={() => setOpenSearchModal(!openSearchModal)}\r\n              style={[styles.actioncard, styles.actioncardsearch]}\r\n            >\r\n              <FontAwesome size={25} color={Colors.white} name=\"search\" />\r\n              <Text style={{ color: Colors.white }}>Chercher</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Liste */}\r\n            <TouchableOpacity\r\n              onPress={fetchItems}\r\n              style={[styles.actioncard, styles.actioncardlist]}\r\n            >\r\n              <FontAwesome size={25} color={Colors.white} name=\"tasks\" />\r\n              <Text style={{ color: Colors.white }}>Liste</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: Dimensions.get(\"window\").height - 190 }}>\r\n            {openList && (\r\n              <View style={{ paddingBottom: 75 }}>\r\n                {items ? (\r\n                  <ItemsList\r\n                    items={items}\r\n                    openList={openList}\r\n                    setOpenList={setOpenList}\r\n                  />\r\n                ) : (\r\n                  <Text>Récupération des données...</Text>\r\n                )}\r\n              </View>\r\n            )}\r\n            <SearchModal\r\n              setItems={setItems}\r\n              setOpenList={setOpenList}\r\n              openSearchModal={openSearchModal}\r\n              setOpenSearchModal={setOpenSearchModal}\r\n            />\r\n            <AddItem\r\n              openAddModal={openAddModal}\r\n              setOpenAddModal={setOpenAddModal}\r\n            />\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    paddingBottom: 50,\r\n  },\r\n  title: {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    marginVertical: 30,\r\n    marginHorizontal: 20,\r\n  },\r\n  actions: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  actioncard: {\r\n    width: 100,\r\n    height: 100,\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  actioncardadd: {\r\n    borderColor: Colors.black,\r\n    backgroundColor: Colors.black,\r\n  },\r\n  actioncardsearch: {\r\n    borderColor: Colors.violet,\r\n    backgroundColor: Colors.violet,\r\n  },\r\n  actioncardlist: {\r\n    borderColor: Colors.red,\r\n    backgroundColor: Colors.red,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState } from \"react\";\r\nimport { Pressable, StyleSheet, TextInput } from \"react-native\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouModal from \"../../components/elements/Modal\";\r\nimport { IItem } from \"../../utils/method\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nexport default function ItemDetails({\r\n  item,\r\n  openItemDetails,\r\n  setOpenItemDetails,\r\n}: {\r\n  item: IItem;\r\n  openItemDetails: boolean;\r\n  setOpenItemDetails: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const theme = useColorScheme();\r\n  const [note, setNote] = useState(item.clientNote ? item.clientNote : \"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const db = getFirestore();\r\n\r\n  const submitHandler = async () => {\r\n    if (note && item.itemId) {\r\n      await updateDoc(doc(db, \"items\", item.itemId), {\r\n        clientNote: note,\r\n      });\r\n      setSuccess(\"Successfully submitted your note.\");\r\n      setTimeout(() => {\r\n        setSuccess(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BiyouModal open={openItemDetails} setOpen={setOpenItemDetails}>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={styles.modalText}>Numéro de bon:</Text>\r\n        <Text style={{ fontSize: 45, fontWeight: \"bold\" }}>{item.itemId}</Text>\r\n      </View>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={{ fontSize: 35, fontWeight: \"700\" }}>\r\n          {item.clientName}\r\n        </Text>\r\n        <Text style={styles.modalText}>\r\n          Numéro de téléphone: {item.clientPhoneNumber}\r\n        </Text>\r\n        <Text style={styles.modalText}>Date d'entrée: {item.createdAt}</Text>\r\n      </View>\r\n      <View style={styles.modalBlock}>\r\n        <Text style={{ fontWeight: \"bold\", fontSize: 22 }}>{item.model}</Text>\r\n        {item.serialNumber && (\r\n          <Text style={styles.modalText}>\r\n            Numéro de série: {item.serialNumber}\r\n          </Text>\r\n        )}\r\n      </View>\r\n      <View style={[styles.modalBlock]}>\r\n        <View\r\n          style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\r\n        >\r\n          <Text style={styles.modalText}>Etat:</Text>\r\n          <Text\r\n            style={[\r\n              styles.modalText,\r\n              {\r\n                backgroundColor: Colors.red,\r\n                color: Colors.white,\r\n                marginLeft: 5,\r\n                paddingHorizontal: 3,\r\n              },\r\n            ]}\r\n          >\r\n            {item.status}\r\n          </Text>\r\n        </View>\r\n        {item.prestation && (\r\n          <View>\r\n            <Text style={styles.modalText}>\r\n              Prestation: {item.prestation} DZD\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n\r\n      {item.diagnostic && (\r\n        <View style={styles.modalBlock}>\r\n          <Text style={styles.modalText}>Diagnostique:</Text>\r\n          <Text style={styles.modalText}>{item.diagnostic}</Text>\r\n        </View>\r\n      )}\r\n      <View style={styles.modalBlock}>\r\n        <Text style={styles.modalText}>\r\n          Vous pouvez laisser une note au réparateur\r\n        </Text>\r\n        <View style={{ marginVertical: 5 }}>\r\n          <TextInput\r\n            value={note}\r\n            onChangeText={(e) => setNote(e)}\r\n            placeholder=\"\"\r\n            style={{\r\n              paddingVertical: 10,\r\n              paddingLeft: 10,\r\n              paddingRight: 40,\r\n              borderRadius: 15,\r\n              backgroundColor: Colors.black,\r\n              color: Colors.white,\r\n              borderColor: Colors.white,\r\n              borderWidth: 1,\r\n            }}\r\n          />\r\n          <Pressable\r\n            onPress={submitHandler}\r\n            style={{ position: \"absolute\", right: 10, top: 8 }}\r\n          >\r\n            <FontAwesome name=\"send\" size={25} color=\"green\" />\r\n          </Pressable>\r\n          {success.length > 0 && (\r\n            <FontAwesome\r\n              name=\"check\"\r\n              size={25}\r\n              color=\"green\"\r\n              style={{ position: \"absolute\", right: 40, top: 8 }}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </BiyouModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalText: {\r\n    fontSize: 15,\r\n  },\r\n  modalBlock: {\r\n    margin: 30,\r\n  },\r\n});\r\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { Dimensions, Image, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nimport { Text, View } from \"../components/Themed\";\nimport BiyouTextInput from \"../components/elements/TextInput\";\nimport ItemDetails from \"../components/home/ItemDetails\";\nimport Colors from \"../constants/Colors\";\n\nexport default function HomeScreen() {\n  const db = getFirestore();\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const [openItemDetails, setOpenItemDetails] = useState(false);\n  const [item, setItem] = useState<any>();\n\n  const submitHandler = async () => {\n    if (name && id) {\n      onSnapshot(doc(db, \"items\", id.toUpperCase()), (doc) => {\n        if (doc.exists()) {\n          if (doc.data().clientName.toLowerCase() === name.toLowerCase()) {\n            setItem(doc.data());\n            setOpenItemDetails(true);\n            setError(\"\");\n            setId(\"\");\n            setName(\"\");\n          } else {\n            setError(\"Veuillez entrer le nom affiché sur le bon!\");\n            setTimeout(() => {\n              setError(\"\");\n            }, 3000);\n          }\n        } else {\n          setError(\"Ce bon n'existe pas!\");\n          setTimeout(() => {\n            setError(\"\");\n          }, 3000);\n        }\n      });\n    } else {\n      setError(\"Champs obligatoire!\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 3000);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../assets/images/adaptive-icon.png\")}\n        style={{ height: 250, width: 250 }}\n      />\n      <View style={styles.searchBar}>\n        {error.length > 1 && <Text style={styles.error}>{error}</Text>}\n        <BiyouTextInput\n          placeholder=\"numéro de bon - exemple: 22A008\"\n          value={id}\n          setValue={setId}\n          condition={error.length > 0 && !id}\n        />\n        <BiyouTextInput\n          placeholder=\"nom sur le bon - exemple: Mohamed Mohamed\"\n          value={name}\n          setValue={setName}\n          condition={error.length > 0 && !name}\n        />\n        <View style={styles.buttoncontainer}>\n          <View\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginHorizontal: \"auto\",\n              marginVertical: 4,\n              height: 50,\n              width: 50,\n              borderRadius: 50,\n              // backgroundColor: Colors.lightBlue,\n              backgroundColor: Colors.green,\n            }}\n          >\n            <TouchableOpacity onPress={submitHandler}>\n              <FontAwesome size={30} name=\"search\" color={Colors.white} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n      {openItemDetails && item && (\n        <ItemDetails\n          item={item}\n          openItemDetails={openItemDetails}\n          setOpenItemDetails={setOpenItemDetails}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: 20,\n    // backgroundColor: Colors.white,\n  },\n  title: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    marginVertical: 30,\n    marginHorizontal: 20,\n  },\n  searchBar: {\n    width: \"100%\",\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n  },\n  buttoncontainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n  },\n  error: {\n    backgroundColor: Colors.red,\n    color: Colors.white,\n    paddingHorizontal: 10,\n    paddingVertical: 20,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n","import { useEffect } from \"react\";\r\nimport { Dimensions, Image, Platform } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { SvgUri } from \"react-native-svg\";\r\n\r\nimport { Text, View } from \"../Themed\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport { selectUser, signOutUser, updateUser } from \"../../redux/userSlice\";\r\nimport { IItem } from \"../../utils/method\";\r\n\r\nconst Profile = () => {\r\n  const { user } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    if (user && user.uid) {\r\n      onSnapshot(doc(db, \"custom\", user.uid), (doc) => {\r\n        dispatch(updateUser(doc.data()));\r\n      });\r\n    }\r\n  }, []);\r\n  const signOutHandler = async () => {\r\n    signOut(auth).then(() => dispatch(signOutUser()));\r\n  };\r\n  return (\r\n    <>\r\n      {user && (\r\n        <View style={{ paddingTop: 20 }}>\r\n          <View\r\n            style={{\r\n              position: \"relative\",\r\n              marginVertical: 50,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                position: \"absolute\",\r\n                right: Dimensions.get(\"window\").width / 2 - 120,\r\n                height: 250,\r\n                width: 250,\r\n              }}\r\n              source={require(\"../../assets/images/ring.png\")}\r\n            />\r\n            {Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\") ? (\r\n              <Image\r\n                source={{\r\n                  uri: user.photoURL,\r\n                }}\r\n                style={{ borderRadius: 50, width: 100, height: 100 }}\r\n              />\r\n            ) : (\r\n              <View style={{ backgroundColor: \"transparent\" }}>\r\n                <SvgUri\r\n                  uri={user.photoURL}\r\n                  width={100}\r\n                  height={100}\r\n                  style={{ borderRadius: 50 }}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <Text style={{ fontSize: 20 }}>{user.displayName}</Text>\r\n          </View>\r\n          <View style={{ margin: 30 }}>\r\n            <Text\r\n              style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n              {user.email}\r\n            </Text>\r\n            {user.phoneNumber && (\r\n              <Text\r\n                style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n              >\r\n                <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                  N téléphone:\r\n                </Text>{\" \"}\r\n                {user.phoneNumber}\r\n              </Text>\r\n            )}\r\n            {user.role && (\r\n              <Text\r\n                style={{ fontSize: 15, display: \"flex\", flexDirection: \"row\" }}\r\n              >\r\n                <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                  Rôle:\r\n                </Text>{\" \"}\r\n                {user.role}\r\n              </Text>\r\n            )}\r\n          </View>\r\n          {user.items && user.items.length > 0 && (\r\n            <View style={{ margin: 30 }}>\r\n              {user.items.map((item: IItem) => (\r\n                <View\r\n                  key={item.itemId}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <Text>{item.itemId}</Text>\r\n                  <Text>{item.clientName}</Text>\r\n                  <Text>{item.model}</Text>\r\n                  <Text>{item.status}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          )}\r\n          <BiyouButton\r\n            title=\"Se déconnecter\"\r\n            clickHandler={signOutHandler}\r\n            iconName=\"sign-out\"\r\n            iconPosition=\"after\"\r\n          />\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouButton from \"../../components/elements/Button\";\r\nimport BiyouTextInput from \"../../components/elements/TextInput\";\r\nimport { fetchUser, selectUser } from \"../../redux/userSlice\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst Login = ({ setRegisterOpen }: any) => {\r\n  const theme = useColorScheme();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { user } = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setRegisterOpen(false);\r\n    } else if (auth.currentUser) {\r\n      dispatch(fetchUser(auth.currentUser));\r\n      setRegisterOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async () => {\r\n    if (email && password) {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then((user) => {\r\n          dispatch(fetchUser(user.user));\r\n          setRegisterOpen(false);\r\n        })\r\n        .catch((error) => {\r\n          setError(\"Impossible de se connecter!\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 3000);\r\n        });\r\n    } else {\r\n      setError(\"Champs obligatoir!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <BiyouTextInput\r\n        placeholder=\"email\"\r\n        value={email}\r\n        setValue={setEmail}\r\n        condition={error.length > 1 && !email}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          marginHorizontal: 15,\r\n          backgroundColor: Colors.gray,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          ...(error.length > 1 && !password\r\n            ? {\r\n                borderColor: Colors.red,\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: Colors.black,\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            flex: 9,\r\n            color: Colors.black,\r\n          }}\r\n          placeholder=\"mot de passe\"\r\n          placeholderTextColor={\"#999\"}\r\n          secureTextEntry={visible ? false : true}\r\n          onChangeText={(e) => setPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => setVisible(visible ? false : true)}\r\n        >\r\n          {visible ? (\r\n            <FontAwesome\r\n              style={{ color: Colors.black }}\r\n              size={15}\r\n              name={\"eye\"}\r\n            />\r\n          ) : (\r\n            <FontAwesome\r\n              style={{ color: Colors.black }}\r\n              size={15}\r\n              name={\"eye-slash\"}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <BiyouButton title=\"S'identifier\" clickHandler={submitHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    padding: 20,\r\n  },\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default Login;\r\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { doc, getFirestore, setDoc } from \"firebase/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport { Text, View } from \"../../components/Themed\";\r\nimport BiyouTextInput from \"../../components/elements/TextInput\";\r\nimport BiyouButton from \"../../components/elements/Button\";\r\nimport { fetchUser, selectUser } from \"../../redux/userSlice\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst Register = ({ setRegisterOpen }: any) => {\r\n  const theme = useColorScheme();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const { user } = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setRegisterOpen(false);\r\n    } else if (auth.currentUser) {\r\n      dispatch(fetchUser(auth.currentUser));\r\n      setRegisterOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async () => {\r\n    if (name && email && password) {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then((user) => {\r\n          updateProfile(user.user, {\r\n            displayName: name,\r\n            photoURL: `https://avatars.dicebear.com/api/gridy/${name}.svg`,\r\n          }).then(async () => {\r\n            await setDoc(doc(db, \"custom\", user.user.uid), {\r\n              userId: user.user.uid,\r\n              username: user.user.displayName,\r\n              role: \"basic\",\r\n            });\r\n            dispatch(fetchUser(user.user));\r\n            setRegisterOpen(false);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setError(\"Un problème avec vos entrées!\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 3000);\r\n        });\r\n    } else {\r\n      setError(\"Champs obligatoir!\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {error.length > 1 && <Text style={styles.error}>{error}</Text>}\r\n      <BiyouTextInput\r\n        placeholder=\"nom d'utilisateur\"\r\n        value={name}\r\n        setValue={setName}\r\n        condition={error.length > 1 && !name}\r\n      />\r\n      <BiyouTextInput\r\n        placeholder=\"email\"\r\n        value={email}\r\n        setValue={setEmail}\r\n        condition={error.length > 1 && !email}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          backgroundColor: Colors.gray,\r\n          marginHorizontal: 15,\r\n          marginVertical: 4,\r\n          padding: 10,\r\n          borderRadius: 15,\r\n          ...(error.length > 1 && !password\r\n            ? {\r\n                borderColor: Colors.red,\r\n                borderWidth: 2,\r\n              }\r\n            : {\r\n                borderColor: Colors.black,\r\n                borderWidth: 1,\r\n              }),\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            flex: 9,\r\n            color: Colors.black,\r\n          }}\r\n          placeholder=\"mot de passe\"\r\n          placeholderTextColor={\"#999\"}\r\n          secureTextEntry={visible ? false : true}\r\n          onChangeText={(e) => setPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => setVisible(visible ? false : true)}\r\n        >\r\n          {visible ? (\r\n            <FontAwesome\r\n              style={{ color: Colors.black }}\r\n              size={15}\r\n              name={\"eye\"}\r\n            />\r\n          ) : (\r\n            <FontAwesome\r\n              style={{ color: Colors.black }}\r\n              size={15}\r\n              name={\"eye-slash\"}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <BiyouButton title=\"Créer un compte\" clickHandler={submitHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    padding: 20,\r\n  },\r\n  error: {\r\n    backgroundColor: Colors.red,\r\n    color: Colors.white,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default Register;\r\n","import { useState } from \"react\";\r\nimport { Image, Platform, Pressable } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteUser,\r\n  getAuth,\r\n  sendEmailVerification,\r\n  sendPasswordResetEmail,\r\n  updateEmail,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { SvgUri } from \"react-native-svg\";\r\n\r\nimport { Text, View } from \"../Themed\";\r\nimport { selectUser, signOutUser } from \"../../redux/userSlice\";\r\nimport BiyouTextInput from \"../elements/TextInput\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\r\n\r\nconst EditProfile = ({ setEditOpen }: any) => {\r\n  const { user } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n\r\n  const [resetPasswordSuccess, setResetPasswordSuccess] = useState(\"\");\r\n  const [verifyEmailSuccess, setVerifyEmailSuccess] = useState(\"\");\r\n  const [name, setName] = useState(\r\n    user && user.displayName ? user.displayName : \"\"\r\n  );\r\n  const [email, setEmail] = useState(user && user.email ? user.email : \"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\r\n    user && user.phoneNumber ? user.phoneNumber : \"\"\r\n  );\r\n\r\n  const resetPassword = async () => {\r\n    if (auth.currentUser && auth.currentUser.email) {\r\n      sendPasswordResetEmail(auth, auth.currentUser.email).then(() => {\r\n        setResetPasswordSuccess(\r\n          \"Email de réinitialisation de mot de passe envoyé avec succès!\"\r\n        );\r\n        setTimeout(() => {\r\n          setResetPasswordSuccess(\"\");\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const verifyEmail = async () => {\r\n    if (auth.currentUser) {\r\n      sendEmailVerification(auth.currentUser).then(() => {\r\n        setVerifyEmailSuccess(\"Un email de vérification vous a été envoyé!\");\r\n        setTimeout(() => {\r\n          setVerifyEmailSuccess(\"\");\r\n        }, 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteAccount = async () => {\r\n    if (auth.currentUser) {\r\n      deleteUser(auth.currentUser).then(() => {\r\n        dispatch(signOutUser());\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    if (auth.currentUser) {\r\n      if (name && name !== auth.currentUser.displayName) {\r\n        updateProfile(auth.currentUser, { displayName: name }).then(() =>\r\n          setEditOpen(false)\r\n        );\r\n      }\r\n      if (email && email !== auth.currentUser.email) {\r\n        updateEmail(auth.currentUser, email).then(() => setEditOpen(false));\r\n      }\r\n      if (phoneNumber) {\r\n        await updateDoc(doc(db, \"custom\", auth.currentUser.uid), {\r\n          phoneNumber,\r\n        });\r\n        setEditOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <View>\r\n          <Pressable\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              //   top: 40,\r\n              right: 10,\r\n              borderRadius: 50,\r\n              padding: 10,\r\n              elevation: 10,\r\n              zIndex: 50,\r\n              backgroundColor: \"green\",\r\n            }}\r\n            onPress={() => {\r\n              submitHandler();\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            <FontAwesome\r\n              style={{\r\n                color: Colors.white,\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n              }}\r\n              size={25}\r\n              name=\"check\"\r\n            />\r\n          </Pressable>\r\n          <View\r\n            style={{\r\n              marginVertical: 50,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\") ? (\r\n              <Image\r\n                source={{\r\n                  uri: user.photoURL,\r\n                }}\r\n                style={{ borderRadius: 50, width: 100, height: 100 }}\r\n              />\r\n            ) : (\r\n              <View style={{ backgroundColor: \"transparent\" }}>\r\n                <SvgUri\r\n                  uri={user.photoURL}\r\n                  width={100}\r\n                  height={100}\r\n                  style={{ borderRadius: 50 }}\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Nom:</Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={name}\r\n                setValue={setName}\r\n                placeholder=\"Nom du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={email}\r\n                setValue={setEmail}\r\n                placeholder=\"Addresse email du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n                N téléphone:\r\n              </Text>{\" \"}\r\n              <BiyouTextInput\r\n                value={phoneNumber}\r\n                setValue={setPhoneNumber}\r\n                placeholder=\"Numéro de téléphone du client\"\r\n              />\r\n            </Text>\r\n          </View>\r\n\r\n          {/* email verification */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            {verifyEmailSuccess.length > 0 && (\r\n              <Text style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                {verifyEmailSuccess}\r\n              </Text>\r\n            )}\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Votre addresse email n'est pas vérifée.\r\n            </Text>\r\n            <Pressable onPress={verifyEmail}>\r\n              <Text style={{ color: \"gray\", textDecorationLine: \"underline\" }}>\r\n                Envoyez un email de vérification à {user.email}\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n\r\n          {/* reset password */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            {resetPasswordSuccess.length > 0 && (\r\n              <Text style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                {resetPasswordSuccess}\r\n              </Text>\r\n            )}\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Vous avez oubliez votre mot de passe?\r\n            </Text>\r\n            <Pressable onPress={resetPassword}>\r\n              <Text style={{ color: \"gray\", textDecorationLine: \"underline\" }}>\r\n                Envoyez un email de réinitialisation de mot de passe\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n\r\n          {/* delete account */}\r\n          <View style={{ marginLeft: 30, marginVertical: 10 }}>\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              Voulez vous supprimer votre compte?\r\n            </Text>\r\n            <Text>\r\n              Cela supprimera tous vos données. Vos données seront\r\n              irrécupérables.\r\n            </Text>\r\n            <Pressable onPress={deleteAccount}>\r\n              <Text\r\n                style={{\r\n                  color: Colors.red,\r\n                  fontWeight: \"bold\",\r\n                  textDecorationLine: \"underline\",\r\n                }}\r\n              >\r\n                SUPPRIMER MON COMPTE\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import { Dispatch, SetStateAction } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../redux/userSlice\";\r\nimport BiyouButton from \"../elements/Button\";\r\nimport { Text } from \"../Themed\";\r\n\r\nconst AddItem = ({\r\n  setAddOpen,\r\n}: {\r\n  setAddOpen: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { user } = useSelector(selectUser);\r\n  return (\r\n    <>\r\n      {user && (\r\n        <>\r\n          <Text style={{ marginBottom: 15, textAlign: \"center\" }}>\r\n            Ajouter un produit\r\n          </Text>\r\n          <BiyouButton title=\"Fermer\" clickHandler={() => setAddOpen(false)} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","import { useEffect, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SpeedDial, Overlay } from \"react-native-elements\";\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\n\nimport { Text, View } from \"../components/Themed\";\nimport BiyouButton from \"../components/elements/Button\";\nimport Profile from \"../components/account/Profile\";\nimport Login from \"../components/account/Login\";\nimport Register from \"../components/account/Register\";\nimport { selectUser, updateUser } from \"../redux/userSlice\";\nimport BiyouModal from \"../components/elements/Modal\";\nimport EditProfile from \"../components/account/EditProfile\";\nimport Colors from \"../constants/Colors\";\nimport AddItem from \"../components/account/AddItem\";\n\nexport default function AccountScreen() {\n  const { user } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const db = getFirestore();\n\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [registerOpen, setRegisterOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [addOpen, setAddOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (user && user.uid) {\n      onSnapshot(doc(db, \"custom\", user.uid), (doc) => {\n        dispatch(updateUser(doc.data()));\n      });\n    }\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {user ? (\n        <Profile />\n      ) : (\n        <View style={styles.block}>\n          <Text style={styles.loginCtaText}>\n            Avoir un compte vous permets de suivre votre produit et recevoir une\n            notification dès qu'il est réparé.\n          </Text>\n          <BiyouButton\n            title=\"S'identifier\"\n            clickHandler={() => setLoginOpen(true)}\n            iconName=\"sign-in\"\n            iconPosition=\"after\"\n          />\n          <BiyouButton\n            title=\"Créer un compte\"\n            clickHandler={() => setRegisterOpen(true)}\n            iconName=\"user-plus\"\n            iconPosition=\"after\"\n          />\n          <Overlay\n            overlayStyle={styles.overlay}\n            isVisible={loginOpen}\n            onBackdropPress={() => setLoginOpen(!loginOpen)}\n          >\n            <Login setRegisterOpen={setRegisterOpen} />\n          </Overlay>\n          <Overlay\n            overlayStyle={styles.overlay}\n            isVisible={registerOpen}\n            onBackdropPress={() => setRegisterOpen(!registerOpen)}\n          >\n            <Register setRegisterOpen={setRegisterOpen} />\n          </Overlay>\n        </View>\n      )}\n      {user && (\n        <SpeedDial\n          buttonStyle={{ backgroundColor: Colors.green }}\n          // buttonStyle={{ backgroundColor: Colors.lightBlue }}\n          containerStyle={{ bottom: 80 }}\n          isOpen={open}\n          icon={{ name: \"edit\", color: Colors.white }}\n          openIcon={{ name: \"close\", color: Colors.white }}\n          onPress={() => setOpen(!open)}\n          onOpen={() => setOpen(true)}\n          onClose={() => setOpen(false)}\n        >\n          <SpeedDial.Action\n            style={{ bottom: 80 }}\n            buttonStyle={{ backgroundColor: Colors.green }}\n            // buttonStyle={{ backgroundColor: Colors.lightBlue }}\n            icon={{ name: \"add\", color: Colors.white }}\n            title=\"Ajouter un produit\"\n            titleStyle={{ position: \"relative\", bottom: 80 }}\n            onPress={() => {\n              setOpen(false);\n              setAddOpen(true);\n            }}\n          />\n          <SpeedDial.Action\n            style={{ bottom: 80 }}\n            buttonStyle={{ backgroundColor: Colors.green }}\n            // buttonStyle={{ backgroundColor: Colors.lightBlue }}\n            icon={{ name: \"edit\", color: Colors.white }}\n            title=\"Modifier votre profil\"\n            titleStyle={{ position: \"relative\", bottom: 80 }}\n            onPress={() => {\n              setOpen(false);\n              setEditOpen(true);\n            }}\n          />\n        </SpeedDial>\n      )}\n      {addOpen && (\n        <BiyouModal open={addOpen} setOpen={setAddOpen}>\n          <AddItem setAddOpen={setAddOpen} />\n        </BiyouModal>\n      )}\n      {editOpen && (\n        <BiyouModal open={editOpen} setOpen={setEditOpen}>\n          <EditProfile setEditOpen={setEditOpen} />\n        </BiyouModal>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    paddingTop: 20,\n  },\n  block: {\n    marginHorizontal: 20,\n    marginTop: 50,\n  },\n  loginCtaText: {\n    textAlign: \"center\",\n    fontSize: 18,\n    marginVertical: 10,\n  },\n  overlay: {\n    borderWidth: 0,\n    borderRadius: 25,\n    width: \"90%\",\n    backgroundColor: \"transparent\",\n    padding: 0,\n  },\n});\n","import { FontAwesome } from \"@expo/vector-icons\";\r\nimport { useState } from \"react\";\r\nimport { Dimensions, Linking, Pressable, StyleSheet } from \"react-native\";\r\nimport { Overlay } from \"react-native-elements\";\r\nimport { Text, View } from \"../components/Themed\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst InfoScreen = () => {\r\n  const [overlayOpen, setOverlayOpen] = useState(false);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        height: Dimensions.get(\"window\").height,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        paddingTop: 20,\r\n      }}\r\n    >\r\n      <View style={styles.box}>\r\n        <Text style={styles.title}>A propos de moi</Text>\r\n        <Text style={styles.text}>...</Text>\r\n      </View>\r\n      <View style={styles.box}>\r\n        <Text style={styles.title}>Contactez-moi</Text>\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Pressable\r\n            onPress={() =>\r\n              Linking.openURL(\"https://www.instagram.com/biyourepair\")\r\n            }\r\n          >\r\n            <FontAwesome\r\n              size={25}\r\n              name=\"instagram\"\r\n              style={[styles.contactbutton, { color: \"#e95950\" }]}\r\n            />\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() =>\r\n              Linking.openURL(\"https://www.facebook.com/biyourepair\")\r\n            }\r\n          >\r\n            <FontAwesome\r\n              size={25}\r\n              name=\"facebook-square\"\r\n              style={[styles.contactbutton, { color: \"#2374e1\" }]}\r\n            />\r\n          </Pressable>\r\n          <Pressable onPress={() => setOverlayOpen(!overlayOpen)}>\r\n            <FontAwesome\r\n              size={25}\r\n              name=\"phone\"\r\n              style={[styles.contactbutton, { color: \"green\" }]}\r\n            />\r\n          </Pressable>\r\n          <Pressable onPress={() => setOverlayOpen(!overlayOpen)}>\r\n            <FontAwesome\r\n              size={25}\r\n              name=\"envelope\"\r\n              style={[styles.contactbutton, { color: Colors.yellow }]}\r\n            />\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n      <View style={styles.box}>\r\n        <Text style={styles.title}>Ou me trouver?</Text>\r\n        <Text style={styles.text}>Kadous, Oued Romane, El Achour - Alger</Text>\r\n      </View>\r\n      <Overlay\r\n        overlayStyle={styles.overlay}\r\n        isVisible={overlayOpen}\r\n        onBackdropPress={() => setOverlayOpen(!overlayOpen)}\r\n      >\r\n        <View style={{ padding: 10 }}>\r\n          <Text style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>\r\n              N de téléphone:\r\n            </Text>{\" \"}\r\n            +213 793013998\r\n          </Text>\r\n        </View>\r\n        <View style={{ padding: 10 }}>\r\n          <Text style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Text style={{ fontWeight: \"bold\", marginRight: 5 }}>Email:</Text>{\" \"}\r\n            biyou20b@gmail.com\r\n          </Text>\r\n        </View>\r\n      </Overlay>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  box: { alignItems: \"center\", marginVertical: 20 },\r\n  title: { fontSize: 30, textAlign: \"center\" },\r\n  text: { fontSize: 22, textAlign: \"center\" },\r\n  contactbutton: {\r\n    padding: 20,\r\n  },\r\n  overlay: {\r\n    borderWidth: 0,\r\n    borderRadius: 25,\r\n    width: \"90%\",\r\n    backgroundColor: Colors.white,\r\n    padding: 10,\r\n    zIndex: 20,\r\n  },\r\n});\r\n\r\nexport default InfoScreen;\r\n","import * as React from \"react\";\r\nimport { Image, StyleSheet, Platform } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport AdminScreen from \"../screens/AdminScreen\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport { RootTabParamList, RootTabScreenProps } from \"../types\";\r\nimport { fetchUser, IUser, selectUser, signOutUser } from \"../redux/userSlice\";\r\nimport { SvgUri } from \"react-native-svg\";\r\nimport { View } from \"../components/Themed\";\r\nimport AccountScreen from \"../screens/AccountScreen\";\r\nimport Colors from \"../constants/Colors\";\r\nimport InfoScreen from \"../screens/InfoScreen\";\r\n\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const auth = getAuth();\r\n  const db = getFirestore();\r\n  const { user }: { user?: IUser | undefined } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isAdmin, setIsAdmin] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        dispatch(fetchUser(user));\r\n      } else {\r\n        dispatch(signOutUser());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const checkIfAdmin = React.useCallback(async () => {\r\n    if (user && user.uid) {\r\n      const docSnap = await getDoc(doc(db, \"custom\", user.uid));\r\n      if (docSnap.exists()) {\r\n        if (docSnap.data().role === \"admin\") {\r\n          setIsAdmin(true);\r\n        } else {\r\n          setIsAdmin(false);\r\n        }\r\n      } else setIsAdmin(false);\r\n    } else setIsAdmin(false);\r\n  }, [user]);\r\n\r\n  React.useEffect(() => {\r\n    checkIfAdmin();\r\n  }, [checkIfAdmin]);\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors.black,\r\n        tabBarActiveBackgroundColor: Colors.yellow,\r\n        tabBarItemStyle: {\r\n          borderRadius: 50,\r\n        },\r\n        tabBarInactiveTintColor: Colors.yellow,\r\n        tabBarShowLabel: false,\r\n        tabBarStyle: {\r\n          position: \"absolute\",\r\n          bottom: 20,\r\n          left: 15,\r\n          right: 15,\r\n          backgroundColor: Colors.gray,\r\n          borderRadius: 50,\r\n          height: 60,\r\n          ...styles.shadow,\r\n        },\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={({ navigation }: RootTabScreenProps<\"Home\">) => ({\r\n          title: \"Home\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"search\" color={color} />,\r\n          headerShown: false,\r\n        })}\r\n      />\r\n      {isAdmin && (\r\n        <BottomTab.Screen\r\n          name=\"Admin\"\r\n          component={AdminScreen}\r\n          options={{\r\n            title: \"Admin\",\r\n            headerShown: false,\r\n            tabBarIcon: ({ color }) => <TabBarIcon name=\"cogs\" color={color} />,\r\n          }}\r\n        />\r\n      )}\r\n      <BottomTab.Screen\r\n        name=\"Account\"\r\n        component={AccountScreen}\r\n        options={{\r\n          title: \"Account\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color }) => {\r\n            if (user) {\r\n              if (Platform.OS === \"web\" || !user.photoURL?.includes(\".svg\")) {\r\n                return (\r\n                  <Image\r\n                    source={{\r\n                      uri: user.photoURL,\r\n                    }}\r\n                    style={{ borderRadius: 50, width: 35, height: 35 }}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <View style={{ backgroundColor: \"transparent\" }}>\r\n                    <SvgUri\r\n                      uri={user.photoURL}\r\n                      width={35}\r\n                      height={35}\r\n                      style={{ borderRadius: 50 }}\r\n                    />\r\n                  </View>\r\n                );\r\n              }\r\n            } else return <TabBarIcon name=\"user\" color={color} />;\r\n          },\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Info\"\r\n        component={InfoScreen}\r\n        options={({ navigation }: RootTabScreenProps<\"Info\">) => ({\r\n          title: \"Home\",\r\n          tabBarIcon: ({ color }) => (\r\n            <TabBarIcon name=\"info-circle\" color={color} />\r\n          ),\r\n          headerShown: false,\r\n        })}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  shadow: {\r\n    shadowColor: Colors.yellow,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.5,\r\n    elevation: 5,\r\n  },\r\n});\r\n\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n\r\nexport default BottomTabNavigator;\r\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\n\nimport { RootStackParamList } from \"../types\";\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl(\"/\")],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          Home: {\n            screens: {\n              HomeScreen: \"home\",\n            },\n          },\n          Admin: {\n            screens: {\n              AdminScreen: \"admin\",\n            },\n          },\n          Account: {\n            screens: {\n              AccountScreen: \"account\",\n            },\n          },\n          Info: {\n            screens: {\n              InfoScreen: \"info\",\n            },\n          },\n        },\n      },\n      NotFound: \"*\",\n    },\n  },\n};\n\nexport default linking;\n","import {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { ColorSchemeName } from \"react-native\";\n\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport { RootStackParamList } from \"../types\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\n    >\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport userSlice from \"./userSlice\";\r\n\r\nconst initialState = {};\r\nconst reducer = combineReducers({ user: userSlice });\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport default store;\r\n","const FirebaseConfig = {\r\n  apiKey: \"AIzaSyBM5PP4iO6svYbv6ekcB9A7Tx-idsQdlg0\",\r\n  authDomain: \"biyou-repair.firebaseapp.com\",\r\n  projectId: \"biyou-repair\",\r\n  storageBucket: \"biyou-repair.appspot.com\",\r\n  messagingSenderId: \"343143569769\",\r\n  appId: \"1:343143569769:web:168a7dc30ce967e8dd45f8\",\r\n  measurementId: \"G-74LH66PR7V\",\r\n};\r\n\r\nexport default FirebaseConfig;\r\n","import { LogBox } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport FirebaseConfig from \"./firebase.config\";\nimport { initializeApp, getApps } from \"firebase/app\";\n\n// Supress warnings\nLogBox.ignoreLogs([\"Setting a timer\"]);\nLogBox.ignoreLogs([\n  \"AsyncStorage has been extracted from react-native core and will be removed in a future release\",\n]);\n\nif (getApps().length === 0) {\n  const app = initializeApp(FirebaseConfig);\n  // const analytics = getAnalytics(app);\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <ReduxProvider store={store}>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </ReduxProvider>\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/adaptive-icon.cd34f223.png\";","module.exports = __webpack_public_path__ + \"static/media/ring.41bc6751.png\";"],"sourceRoot":""}